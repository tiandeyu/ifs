/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genfrw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GenFormType extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genfrw.GenFormType");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock gen_form_type_line_blk;
   private ASPRowSet gen_form_type_line_set;
   private ASPCommandBar gen_form_type_line_bar;
   private ASPTable gen_form_type_line_tbl;
   private ASPBlockLayout gen_form_type_line_lay;
   
   private ASPBlock gen_form_type_immutable_blk;
   private ASPRowSet gen_form_type_immutable_set;
   private ASPCommandBar gen_form_type_immutable_bar;
   private ASPTable gen_form_type_immutable_tbl;
   private ASPBlockLayout gen_form_type_immutable_lay;
   
   private ASPTabContainer tabs;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public GenFormType(ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   //-----------------------------------------------------------------------------
   //---------------------------  Run logic functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void run() throws FndException
   {
      super.run();

      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("TYPE_NO")) )
         okFind();
      adjust();
      tabs.saveActiveTab();
   }

   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENFORMTYPENODATA: No data found.");
         headset.clear();
      }
      okFindITEM1();
      okFindITEM2();
   }

   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }

   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","GEN_FORM_TYPE_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      if (headset.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(gen_form_type_line_blk);
      q.addWhereCondition("TYPE_NO = ?");
      q.addParameter("TYPE_NO", headset.getValue("TYPE_NO"));
      q.setOrderByClause("GROUP_TITLE,GROUP_ORDER");
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,gen_form_type_line_blk);
      headset.goTo(headrowno);
   }
   
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","GEN_FORM_TYPE_LINE_API.New__",gen_form_type_line_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_TYPE_NO", headset.getValue("TYPE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      gen_form_type_line_set.addRow(data);
   }
   
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      if (headset.countRows() == 0)
         return;
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(gen_form_type_immutable_blk);
      q.addWhereCondition("TYPE_NO = ?");
      q.addParameter("TYPE_NO", headset.getValue("TYPE_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,gen_form_type_immutable_blk);
      headset.goTo(headrowno);
   }
   
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2", "GEN_FORM_TYPE_IMMUTABLE_API.New__", gen_form_type_immutable_blk);
      cmd.setOption("ACTION", "PREPARE");
      cmd.setParameter("ITEM1_TYPE_NO", headset.getValue("TYPE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      gen_form_type_immutable_set.addRow(data);
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("TYPE_NO").
              setMandatory().
              setInsertable().
              setLabel("GENFORMTYPETYPENO: Type No").
              setSize(20);
      headblk.addField("TYPE_NAME").
              setInsertable().
              setLabel("GENFORMTYPETYPENAME: Type Name").
              setSize(20);
      headblk.addField("NOTE").
              setInsertable().
              setLabel("GENFORMTYPENOTE: Note").
              setSize(50);
      headblk.setView("GEN_FORM_TYPE");
      headblk.defineCommand("GEN_FORM_TYPE_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("GENFORMTYPETBLHEAD: Gen Form Types");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.SINGLE_LAYOUT);
      
      // Tab commands
      headbar.addCustomCommand("activateLine", "Line");
      headbar.addCustomCommand("activateImmu", "Immutable");
      headbar.addCustomCommand("activateGroups", "Groups");
 
      //
      // General Form Type Line
      //

      gen_form_type_line_blk = mgr.newASPBlock("ITEM1");
      gen_form_type_line_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      
      gen_form_type_line_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      gen_form_type_line_blk.addField("ITEM0_TYPE_NO").
      setDbName("TYPE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENFORMTYPELINEITEM0TYPENO: Type No").
      setSize(20);
      
      // line 1
      gen_form_type_line_blk.addField("FIELD_NAME").
      setMandatory().
      setInsertable().
      setSelectBox().
      enumerateValues("GEN_FORM_SMALL_API").
      setLabel("GENFORMTYPELINEFIELDNAME: Field Name").
      setSize(20);
      
      gen_form_type_line_blk.addField("LABEL").
      setInsertable().
      setLabel("GENFORMTYPELINELABEL: Label").
      setSize(20);
      
      // line 2
      gen_form_type_line_blk.addField("FIELD_SIZE", "Number").
      setInsertable().
      setLabel("GENFORMTYPELINESIZE: Field Size").
      setSize(10);
      
      gen_form_type_line_blk.addField("HEIGHT", "Number").
      setInsertable().
      setLabel("GENFORMTYPELINEHEIGHT: Height").
      setSize(10);
      
      // line 3
      gen_form_type_line_blk.addField("MAX_LENGTH", "Number").
      setInsertable().
      setLabel("GENFORMTYPELINEMAXLENGTH: Max Length").
      setSize(10);
      
      gen_form_type_line_blk.addField("INSERTALBE").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEINSERTALBE: Insertalbe").
      setSize(5);
      
      // line 4
      gen_form_type_line_blk.addField("READ_ONLY").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEREADONLY: Read Only").
      setSize(5);
      
      gen_form_type_line_blk.addField("MANDATORY").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEMANDATORY: Mandatory").
      setSize(5);
      
      // line 5
      gen_form_type_line_blk.addField("QUERYABLE").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEQUERYABLE: Queryable").
      setSize(5);
      
      gen_form_type_line_blk.addField("HIDDEN").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEHIDDEN: Hidden").
      setSize(5);
      
      // line 6
      gen_form_type_line_blk.addField("DEFAULT_NOT_VISIBLE").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEDEFAULTNOTVISIBLE: Default Not Visible").
      setSize(5);
      
      gen_form_type_line_blk.addField("LOV").
      setInsertable().
      setLabel("GENFORMTYPELINELOV: Lov").
      setSize(50);
      
      // line 7
      gen_form_type_line_blk.addField("LOV_PROPERTY").
      setInsertable().
      setLabel("GENFORMTYPELINELOVPROPERTY: Lov Property").
      setSize(50);
      
      gen_form_type_line_blk.addField("HYPERLINK").
      setInsertable().
      setLabel("GENFORMTYPELINEHYPERLINK: Hyperlink").
      setSize(50);
      
      // line 8
      gen_form_type_line_blk.addField("GROUP_TITLE").
      setInsertable().
      setDynamicLOV("GEN_FORM_TYPE_GROUPS").
      setLabel("GENFORMTYPELINEGROUPTITLE: Group Title").
      setSize(20);
      
      gen_form_type_line_blk.addField("GROUP_ORDER", "Number").
      setInsertable().
      setLabel("GENFORMTYPELINEGROUPORDER: Group Order").
      setSize(10);
      
      // line 9
      gen_form_type_line_blk.addField("ALIGNMENT").
      enumerateValues("Gen_Form_Type_Immu_Align_API").
      setSelectBox().
      setInsertable().
      setLabel("GENFORMTYPELINEALIGNMENT: Alignment").
      setSize(5);
      
      gen_form_type_line_blk.addField("UPPER_CASE").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINEUPPERCASE: Upper Case").
      setSize(5);
      
      // line 10
      gen_form_type_line_blk.addField("CHECK_BOX").
      setInsertable().
      setLabel("GENFORMTYPELINECHECKBOX: Check Box").
      setSize(20);
      
      gen_form_type_line_blk.addField("SELECT_BOX").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENFORMTYPELINESELECTBOX: Select Box").
      setSize(5);

      // line 11
      gen_form_type_line_blk.addField("ENUMERATE_VALUES").
      setInsertable().
      setLabel("GENFORMTYPELINEENUMERATEVALUES: Enumerate Values").
      setSize(50);
      
      gen_form_type_line_blk.addField("FUNCTION").
      setInsertable().
      setLabel("GENFORMTYPELINEFUNCTION: Function").
      setSize(50);
      
      // line 12
      gen_form_type_line_blk.addField("VALIDATION").
      setInsertable().
      setSelectBox().
      enumerateValues("GEN_FORM_SMALL_API.Enumerate_F", "GEN_FORM_SMALL_API.Encode").
      setLabel("GENFORMTYPELINEVALIDATION: Validation").
      setSize(10);

      gen_form_type_line_blk.setView("GEN_FORM_TYPE_LINE");
      gen_form_type_line_blk.defineCommand("GEN_FORM_TYPE_LINE_API", "New__,Modify__,Remove__");
      gen_form_type_line_blk.setMasterBlock(headblk);
      gen_form_type_line_set = gen_form_type_line_blk.getASPRowSet();
      gen_form_type_line_bar = mgr.newASPCommandBar(gen_form_type_line_blk);
      gen_form_type_line_bar.defineCommand(gen_form_type_line_bar.OKFIND, "okFindITEM1");
      gen_form_type_line_bar.defineCommand(gen_form_type_line_bar.NEWROW, "newRowITEM1");
      gen_form_type_line_tbl = mgr.newASPTable(gen_form_type_line_blk);
      gen_form_type_line_tbl.setTitle("GENFORMTYPELINEITEMHEAD1: GenFormTypeLine");
      gen_form_type_line_tbl.enableRowSelect();
      gen_form_type_line_tbl.setWrap();
      gen_form_type_line_lay = gen_form_type_line_blk.getASPBlockLayout();
      gen_form_type_line_lay.setDefaultLayoutMode(gen_form_type_line_lay.MULTIROW_LAYOUT);
      
      //
      // General Form Type Immutable
      //
      
      gen_form_type_immutable_blk = mgr.newASPBlock("ITEM2");
      gen_form_type_immutable_blk.addField("ITEM1_OBJID").
      setHidden().
      setDbName("OBJID");
      
      gen_form_type_immutable_blk.addField("ITEM1_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      gen_form_type_immutable_blk.addField("ITEM1_TYPE_NO").
      setDbName("TYPE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENFORMTYPEIMMUTABLEITEM0TYPENO: Type No").
      setSize(20);
      
      // line 1
      gen_form_type_immutable_blk.addField("IMMU_FIELD_NAME").
      setDbName("FIELD_NAME").
      setMandatory().
      setInsertable().
      setSelectBox().
      enumerateValues("GEN_FORM_SMALL_API").
      setLabel("GENFORMTYPEIMMUTABLEFIELDNAME: Field Name").
      setSize(20);
      
      gen_form_type_immutable_blk.addField("DB_NAME").
      setInsertable().
      setLabel("GENFORMTYPEIMMUTABLEDBNAME: Db Name").
      setSize(20);
      
      // line 2
//      gen_form_type_immutable_blk.addField("ALIGNMENT").
//      setInsertable().
//      setSelectBox().
//      enumerateValues("GEN_FORM_TYPE_IMMU_ALIGN_API").
//      setLabel("GENFORMTYPEIMMUTABLEALIGNMENT: Alignment").
//      setSize(10);
//      
//      gen_form_type_immutable_blk.addField("UPPER_CASE").
//      setInsertable().
//      setCheckBox("FALSE,TRUE").
//      setLabel("GENFORMTYPEIMMUTABLEUPPERCASE: Upper Case").
//      setSize(5);
      
      // line 3
      gen_form_type_immutable_blk.addField("VALIDATE_FUNCTION").
      setInsertable().
      setLabel("GENFORMTYPEIMMUTABLEVALIDATEFUNCTION: Validate Function").
      setSize(50);
      
//      gen_form_type_immutable_blk.addField("VALIDATION").
//      setInsertable().
//      setLabel("GENFORMTYPEIMMUTABLEVALIDATION: Validation").
//      setSize(50);
      
      // line 4
//      gen_form_type_immutable_blk.addField("FUNCTION").
//      setInsertable().
//      setLabel("GENFORMTYPEIMMUTABLEFUNCTION: Function").
//      setSize(50);
//      
//      gen_form_type_immutable_blk.addField("CHECK_BOX").
//      setInsertable().
//      setLabel("GENFORMTYPEIMMUTABLECHECKBOX: Check Box").
//      setSize(20);
      
      // line 5
//      gen_form_type_immutable_blk.addField("SELECT_BOX").
//      setInsertable().
//      setCheckBox("FALSE,TRUE").
//      setLabel("GENFORMTYPEIMMUTABLESELECTBOX: Select Box").
//      setSize(5);
//      
//      gen_form_type_immutable_blk.addField("ENUMERATE_VALUES").
//      setInsertable().
//      setLabel("GENFORMTYPEIMMUTABLEENUMERATEVALUES: Enumerate Values").
//      setSize(50);
      
      gen_form_type_immutable_blk.setView("GEN_FORM_TYPE_IMMUTABLE");
      gen_form_type_immutable_blk.defineCommand("GEN_FORM_TYPE_IMMUTABLE_API","New__,Modify__,Remove__");
      gen_form_type_immutable_blk.setMasterBlock(headblk);
      gen_form_type_immutable_set = gen_form_type_immutable_blk.getASPRowSet();
      gen_form_type_immutable_bar = mgr.newASPCommandBar(gen_form_type_immutable_blk);
      gen_form_type_immutable_bar.defineCommand(gen_form_type_immutable_bar.OKFIND, "okFindITEM2");
      gen_form_type_immutable_bar.defineCommand(gen_form_type_immutable_bar.NEWROW, "newRowITEM2");
      gen_form_type_immutable_tbl = mgr.newASPTable(gen_form_type_immutable_blk);
      gen_form_type_immutable_tbl.setTitle("GENFORMTYPEIMMUTABLEITEMHEAD1: GenFormTypeImmutable");
      gen_form_type_immutable_tbl.enableRowSelect();
      gen_form_type_immutable_tbl.setWrap();
      gen_form_type_immutable_lay = gen_form_type_immutable_blk.getASPBlockLayout();
      gen_form_type_immutable_lay.setDefaultLayoutMode(gen_form_type_immutable_lay.MULTIROW_LAYOUT);
      
      tabs = mgr.newASPTabContainer();
      tabs.addTab(mgr.translate("GENFRWGENFORMTYPELINE: Form Line"), "javascript:commandSet('MAIN.activateLine','')");
      tabs.addTab(mgr.translate("GENFRWGENFORMTYPEIMMU: Form Immutable"), "javascript:commandSet('MAIN.activateImmu','')");
      
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);
   }

   public void  adjust() throws FndException
   {
      // fill function body
      super.adjust();
      headbar.removeCustomCommand("activateLine");
      headbar.removeCustomCommand("activateImmu");
   }
   
   public void activateLine()
   {
      tabs.setActiveTab(1);
      okFindITEM1();
   }
   
   public void activateImmu()
   {
      tabs.setActiveTab(2);
      okFindITEM2();
   }
   

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENFORMTYPEDESC: Gen Form Type";
   }


   protected String getTitle()
   {
      return getDescription();
   }

   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
         appendToHTML(headlay.show());
      else
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }
      
      if ((headlay.isSingleLayout() || headlay.isCustomLayout()) && headset.countRows() > 0)
      {
         appendToHTML(tabs.showTabsInit());
         if (tabs.getActiveTab() == 1)
            appendToHTML(gen_form_type_line_lay.show());
         else if (tabs.getActiveTab() == 2)
            appendToHTML(gen_form_type_immutable_lay.show());
      }
   }
}
