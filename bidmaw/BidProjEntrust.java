/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.bidmaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import java.io.UnsupportedEncodingException;

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.sf.storage.FndConnectionManager;
import ifs.fnd.*;
import ifs.fultxw.engine.servlet.FulltextInitServlet;
import ifs.hzwflw.HzASPPageProviderWf;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class BidProjEntrust extends HzASPPageProviderWf
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.bidmaw.BidProjEntrust");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock bid_proj_entrust_line_blk;
   private ASPRowSet bid_proj_entrust_line_set;
   private ASPCommandBar bid_proj_entrust_line_bar;
   private ASPTable bid_proj_entrust_line_tbl;
   private ASPBlockLayout bid_proj_entrust_line_lay;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  BidProjEntrust (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run() throws FndException
   {
      ASPManager mgr = getASPManager();
      super.run();
      String comnd;
      if( mgr.commandBarActivated() ){
         eval(mgr.commandBarFunction());
         comnd = mgr.readValue("__COMMAND");
         if (  "ITEM1.SaveReturn".equals(comnd) ||  "ITEM1.Delete".equals(comnd) )
            headset.refreshAllRows();
         else if("ITEM1.SaveNew".equals(comnd))
            headset.refreshAllRows();
       }
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SERIAL_NO")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("VALIDATE")) )
         validate();
      else
         okFind();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("BIDPROJENTRUSTNODATA: No data found.");
         headset.clear();
      }
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","BID_PROJ_ENTRUST_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(bid_proj_entrust_line_blk);
      q.addWhereCondition("PROJ_NO = ? AND SERIAL_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("SERIAL_NO", headset.getValue("SERIAL_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,bid_proj_entrust_line_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","BID_PROJ_ENTRUST_LINE_API.New__",bid_proj_entrust_line_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM0_SERIAL_NO", headset.getValue("SERIAL_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      bid_proj_entrust_line_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("PROJ_NO").
              setMandatory().
              setInsertable().
              setLabel("BIDPROJENTRUSTPROJNO: Proj No").
              setSize(30).
              setDynamicLOV("GENERAL_PROJECT");
      
      headblk.addField("GENERAL_PROJECT_PROJ_DESC").
              setFunction("GENERAL_PROJECT_API.GET_PROJ_DESC ( :PROJ_NO)").
              setLabel("CONADJUSTNOTICEGENERALPROJECTPROJDESC: General Project Proj Desc").
              setSize(30).
              setReadOnly();
      mgr.getASPField("PROJ_NO").setValidation("GENERAL_PROJECT_PROJ_DESC");
      headblk.addField("CONTRACT_ID").
              setInsertable().
              setDynamicLOV("PROJECT_CONTRACT","PROJ_NO").
              setLabel("BIDPROJENTRUSTCONTRACTID: Contract Id").
              setCustomValidation("PROJ_NO,CONTRACT_ID", "CONTRACT_DESC,SECOND_ORG,SECOND_ORG_NAME").
              setSize(30); 
      headblk.addField("CONTRACT_DESC").
              setReadOnly().
              setFunction("PROJECT_CONTRACT_API.GET_CONTRACT_DESC( :PROJ_NO, :CONTRACT_ID)").
              setLabel("BIDPROJENTRUSTCONTRACTDESC: Contract Desc").
              setSize(30);
      headblk.addField("CRE_ID").
              setInsertable().
              setDynamicLOV("BID_CRE_PROJ_APPLY","PROJ_NO").
              setLabel("BIDPROJENTRUSTCREID: Cre Id").
              setSize(30);
      headblk.addField("CREATE_BID_NAME").
              setReadOnly().
              setFunction("BID_CRE_PROJ_APPLY_API.GET_CREATE_BID_NAME( :PROJ_NO, :CRE_ID)").
              setLabel("BIDPROJENTRUSTCREATEBIDNAME: Create Bid Name").
              setSize(30);
      mgr.getASPField("CRE_ID").setValidation("CREATE_BID_NAME");
      headblk.addField("SECOND_ORG").
              setReadOnly().
              setFunction("GENERAL_ORGANIZATION_API.GET_ORG_NO( :PROJ_NO, :CONTRACT_ID)").
              setLabel("BIDPROJENTRUSTSECONDORG: Second Org").
              setSize(30);
      headblk.addField("SECOND_ORG_NAME").
              setReadOnly().
              setFunction("GENERAL_ORGANIZATION_API.GET_ORG_DESC( :SECOND_ORG)").
              setLabel("BIDPROJENTRUSTSECONDORGNAME: Second Org Name").
              setSize(30);
      mgr.getASPField("SECOND_ORG").setValidation("SECOND_ORG_NAME");
      headblk.addField("SERIAL_NO").
              setInsertable().
              setLabel("BIDPROJENTRUSTSERIALNO: Serial No").
              setSize(30).
              setHidden();
      headblk.addField("ENTRUST_BILL_NO").
              setInsertable().
              setLabel("BIDPROJENTRUSTENTRUSTBILLNO: Entrust Bill No").
              setSize(30);
      headblk.addField("ENTRUST_NAME").
              setInsertable().
              setMandatory().
              setWfProperties().
              setLabel("BIDPROJENTRUSTENTRUSTNAME: Entrust Name").
              setSize(30);
      headblk.addField("RECOMMEND_ORG").
              setInsertable().
              setLabel("BIDPROJENTRUSTRECOMMENDORG: Recommend Org").
              setSize(30);
      headblk.addField("FEE_BUDGET","Money","#0.00").
              setInsertable().
              setLabel("BIDPROJENTRUSTFEEBUDGET: Fee Budget").
              setSize(30);
      headblk.addField("ENTRUST_TYPE").
              setInsertable().
              setCheckBox("FALSE,TRUE").
              setLabel("BIDPROJENTRUSTENTRUSTTYPE: Entrust Type").
              setSize(20);
      headblk.addField("REQUEST_TIME").
              setInsertable().
              setLabel("BIDPROJENTRUSTREQUESTTIME: Request Time").
              setSize(30);
      headblk.addField("IS_VALID").
              setInsertable().
              setCheckBox("FALSE,TRUE").
              setLabel("BIDPROJENTRUSTISVALID: Is Valid").
              setSize(30);
      headblk.addField("FEEDBACK_NO").
              setReadOnly().
              setLabel("BIDPROJENTRUSTFEEDBACKNO: Feedback No").
              setHyperlink("/b2e/secured/conmaw/ConEntrustQuantitiesVisa.page", "PROJ_NO,FEEDBACK_NO ID").
              setSize(30);
      headblk.addField("IS_FEEDBACK").
              setReadOnly().
              setCheckBox("FALSE,TRUE").
              setLabel("BIDPROJENTRUSTISFEEDBACK: Is Feedback").
              setSize(30);
      headblk.addField("APPLY_PERSON").
              setReadOnly().
              setLabel("BIDPROJENTRUSTAPPLYPERSON: Apply Person").
              setSize(30);
      headblk.addField("CREATE_PERSON_NAME").
              setFunction("PERSON_INFO_API.GET_NAME ( :APPLY_PERSON)").
              setLabel("BIDMATENQJUDGECREATEPERSONNAME: Create Person Name").
              setSize(30).
              setReadOnly();
      headblk.addField("STATUS").
              setInsertable().
              setLabel("BIDPROJENTRUSTSTATUS: Status").
              setSize(30).
              setHidden();
      headblk.addField("STATUS_DESC").
              setReadOnly().
              setFunction("FLOW_STATUS_API.Get_Status_Desc (:STATUS)").
              setLabel("BIDPROJENTRUSTSTATUSDESC: Status Desc").
              setSize(30);
      mgr.getASPField("STATUS").setValidation("STATUS_DESC");  
      headblk.addField("APPLY_DATE","Date").
              setInsertable().
              setLabel("BIDPROJENTRUSTAPPLYDATE: Apply Date").
              setSize(30);
      headblk.addField("CREATE_REASON").
              setInsertable().
              setLabel("BIDPROJENTRUSTCREATEREASON: Create Reason").
              setSize(129).
              setHeight(5);
      headblk.addField("CREATE_CONTENT").
              setInsertable().
              setLabel("BIDPROJENTRUSTCREATECONTENT: Create Content").
              setSize(129).
              setHeight(5);
      headblk.addField("NOTE").
              setInsertable().
              setLabel("BIDPROJENTRUSTNOTE: Note").
              setSize(129).
              setHidden();
      headblk.setView("BID_PROJ_ENTRUST");
      headblk.defineCommand("BID_PROJ_ENTRUST_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headbar.addCustomCommand("printReport", "BIDPROJENTRUSTPRINTREPORT: Print Report...");
      headbar.addCommandValidConditions("printReport", "ENTRUST_TYPE", "Enable", "TRUE");
      headbar.addCustomCommand("printReportProj", "BIDPROJENTRUSTPRINTREPORTPROJ: Print Report Proj...");
      headbar.addCommandValidConditions("printReportProj", "ENTRUST_TYPE", "Disable", "TRUE");
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("BIDPROJENTRUSTTBLHEAD: Bid Proj Entrusts");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setDataSpan("CREATE_REASON", 5);
      headlay.setDataSpan("CREATE_CONTENT", 5);
      headlay.setSimple("GENERAL_PROJECT_PROJ_DESC"); 
      headlay.setSimple("CREATE_PERSON_NAME");
      headlay.setSimple("CREATE_BID_NAME");
      headlay.setSimple("CONTRACT_DESC");
      headlay.setSimple("SECOND_ORG_NAME");
 
      
      bid_proj_entrust_line_blk = mgr.newASPBlock("ITEM1");
      bid_proj_entrust_line_blk.addField("ITEM0_OBJID").
                                setHidden().
                                setDbName("OBJID");
      bid_proj_entrust_line_blk.addField("ITEM0_OBJVERSION").
                                setHidden().
                                setDbName("OBJVERSION");
      bid_proj_entrust_line_blk.addField("ITEM0_PROJ_NO").
                                setDbName("PROJ_NO").
                                setMandatory().
                                setHidden().
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEITEM0PROJNO: Proj No").
                                setSize(50);
      bid_proj_entrust_line_blk.addField("ITEM0_SERIAL_NO").
                                setDbName("SERIAL_NO").
                                setHidden().
                                setMandatory().
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEITEM0SERIALNO: Serial No").
                                setSize(200);
      bid_proj_entrust_line_blk.addField("LINE_NO").
                                setHidden().
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINELINENO: Line No").
                                setSize(200);
      bid_proj_entrust_line_blk.addField("JOB_LIST_CONTENT").
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEJOBLISTCONTENT: Job List Content").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("UNIT").
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEUNIT: Unit").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("QUANTITIES","Number","#0.00").
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEQUANTITIES: Quantities").
                                setCustomValidation("QUANTITIES,PRICE", "COST_ESTIMATE").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("PRICE","Money","#0.00").
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINEPRICE: Price").
                                setCustomValidation("QUANTITIES,PRICE", "COST_ESTIMATE").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("COST_ESTIMATE","Money","#0.00").
                                setInsertable().
                                setLabel("BIDPROJENTRUSTLINECOSTESTIMATE: Cost Estimate").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("BUDGET_LINE_NO").
                                setInsertable().
                                setDynamicLOV("PROJECT_BUDGET_LINE").
                                setLabel("BIDPROJENTRUSTLINEBUDGETLINENO: Budget Line No").
                                setSize(30);
      bid_proj_entrust_line_blk.addField("BUDGET_NAME").
                                setReadOnly().
                                setFunction("PROJECT_BUDGET_LINE_API.GET_BUDGET_NAME( :PROJ_NO, :BUDGET_LINE_NO)").
                                setLabel("BIDPROJENTRUSTLINEBUDGETNAME: Budget Name").
                                setSize(30);
      mgr.getASPField("BUDGET_LINE_NO").setValidation("BUDGET_NAME");
      bid_proj_entrust_line_blk.addField("ITEM0_NOTE").
                                setDbName("NOTE").
                                setHidden().
                                setLabel("BIDPROJENTRUSTLINEITEM0NOTE: Note").
                                setSize(2000);
      bid_proj_entrust_line_blk.setView("BID_PROJ_ENTRUST_LINE");
      bid_proj_entrust_line_blk.defineCommand("BID_PROJ_ENTRUST_LINE_API","New__,Modify__,Remove__");
      bid_proj_entrust_line_blk.setMasterBlock(headblk);
      bid_proj_entrust_line_set = bid_proj_entrust_line_blk.getASPRowSet();
      bid_proj_entrust_line_bar = mgr.newASPCommandBar(bid_proj_entrust_line_blk);
      bid_proj_entrust_line_bar.defineCommand(bid_proj_entrust_line_bar.OKFIND, "okFindITEM1");
      bid_proj_entrust_line_bar.defineCommand(bid_proj_entrust_line_bar.NEWROW, "newRowITEM1");
      bid_proj_entrust_line_tbl = mgr.newASPTable(bid_proj_entrust_line_blk);
      bid_proj_entrust_line_tbl.setTitle("BIDPROJENTRUSTLINEITEMHEAD1: BidProjEntrustLine");
      bid_proj_entrust_line_tbl.enableRowSelect();
      bid_proj_entrust_line_tbl.setWrap();
      bid_proj_entrust_line_lay = bid_proj_entrust_line_blk.getASPBlockLayout();
      bid_proj_entrust_line_lay.setDefaultLayoutMode(bid_proj_entrust_line_lay.MULTIROW_LAYOUT);
      bid_proj_entrust_line_lay.setSimple("BUDGET_NAME");



   }



   public void  adjust() throws FndException
   {
      // fill function body
      super.adjust();
   }
   
   public void  printReport() throws FndException, UnsupportedEncodingException
   {
    ASPManager mgr = getASPManager();
    ASPConfig cfg = getASPConfig();
    String URL=cfg.getParameter("APPLICATION/RUNQIAN/SERVER_URL");
    if (headlay.isMultirowLayout())
       headset.goTo(headset.getRowSelected());
    if (headset.countRows()>0 )
          {   
             String proj_no = headset.getValue("PROJ_NO");
             String serial_no = headset.getValue("SERIAL_NO");
              appendDirtyJavaScript("window.open('"+URL+"/showReport.jsp?raq=BidProjEntrust.raq&proj_no="+proj_no+"&serial_no="+serial_no
                + "','_blank','height=600, width=780, top=200, left=350, toolbar=no, menubar=no, scrollbars=yes, resizable=yes,location=no, status=no');");                                
         }
   }   
   public void  printReportProj() throws FndException, UnsupportedEncodingException
   {
    ASPManager mgr = getASPManager();
    ASPConfig cfg = getASPConfig();
    String URL=cfg.getParameter("APPLICATION/RUNQIAN/SERVER_URL");
    if (headlay.isMultirowLayout())
       headset.goTo(headset.getRowSelected());
    if (headset.countRows()>0 )
          {   
             String proj_no = headset.getValue("PROJ_NO");
             String serial_no = headset.getValue("SERIAL_NO");
              appendDirtyJavaScript("window.open('"+URL+"/showReport.jsp?raq=BidProjEntrustProj.raq&proj_no="+proj_no+"&serial_no="+serial_no
                + "','_blank','height=600, width=780, top=200, left=350, toolbar=no, menubar=no, scrollbars=yes, resizable=yes,location=no, status=no');");                                
         }
   }  
   
   public void validate() {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      
      ASPTransactionBuffer trans1 = mgr.newASPTransactionBuffer();
      ASPCommand cmd1;
      
      String val = mgr.readValue("VALIDATE");
      String txt = "";
      String contract_desc = "";
      String secend_side = "";
      String secend_side_name = "";
      float tempValue;
      
      
      if ("QUANTITIES".equals(val)) {         
         tempValue = ((mgr.readValue("QUANTITIES")==null)?0:Float.parseFloat(mgr.readValue("QUANTITIES")))*((mgr.readValue("PRICE")==null)?0:Float.parseFloat(mgr.readValue("PRICE")));
         mgr.responseWrite(String.valueOf(tempValue)+"^");
      }
      else if ("PRICE".equals(val)) {         
         tempValue = ((mgr.readValue("QUANTITIES")==null)?0:Float.parseFloat(mgr.readValue("QUANTITIES")))*((mgr.readValue("PRICE")==null)?0:Float.parseFloat(mgr.readValue("PRICE")));
         mgr.responseWrite(String.valueOf(tempValue)+"^");
      }
      else if("CONTRACT_ID".equals(val)){
         cmd = trans.addCustomFunction("GETCONTRACTDESC",
               "PROJECT_CONTRACT_API.GET_CONTRACT_DESC", "CONTRACT_DESC");
         cmd.addParameter("PROJ_NO");
         cmd.addParameter("CONTRACT_ID");
         
         cmd = trans.addCustomFunction("GETSECONDORG",
               "GENERAL_ORGANIZATION_API.GET_ORG_NO", "SECOND_ORG");
         cmd.addParameter("PROJ_NO");
         cmd.addParameter("CONTRACT_ID");
         
         trans=mgr.validate(trans);
         
         contract_desc = trans.getValue("GETCONTRACTDESC/DATA/CONTRACT_DESC");
         secend_side = trans.getValue("GETSECONDORG/DATA/SECOND_ORG");
         
         cmd1 = trans1.addCustomFunction("GETSECONDORGNAME",
               "GENERAL_ORGANIZATION_API.GET_ORG_DESC", "SECOND_ORG_NAME");
         cmd1.addParameter("RECOMMEND_ORG",secend_side);
         
         trans1=mgr.validate(trans1);
         
         secend_side_name = trans1.getValue("GETSECONDORGNAME/DATA/SECOND_ORG_NAME");
         
         txt = ((mgr.isEmpty(contract_desc)) ? "": contract_desc) + "^" +
               ((mgr.isEmpty(secend_side)) ? "": secend_side) + "^" +
               ((mgr.isEmpty(secend_side_name)) ? "": secend_side_name) + "^" ;
         mgr.responseWrite(txt);
      }
      
      mgr.endResponse();
      
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------
   
   protected String getDescription()
   {
      return "BIDPROJENTRUSTDESC: Bid Proj Entrust";
   }


   protected String getTitle()
   {
      return "BIDPROJENTRUSTTITLE: Bid Proj Entrust";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
         appendToHTML(headlay.show());
     else
     {
        headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
        appendToHTML(headlay.show());
     }
     if (bid_proj_entrust_line_lay.isVisible())
         appendToHTML(bid_proj_entrust_line_lay.show());

   }
   protected ASPBlock getBizWfBlock()
   {
      return headblk;      
   }
}
