/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.budgew;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class ProjectBudgetTest extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.budgew.ProjectBudget");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;
   
   //===============================================================
   // Transient temporary variables (never cloned)
   //===============================================================
   private ASPTransactionBuffer trans;
   private ASPQuery q;
   private boolean bEmptyTree;
   private String src_str;
   private String iframe_src;
   private String budget_no;
   private String proj_no;
   private String comnd; 
   

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  ProjectBudgetTest (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();
      bEmptyTree = false;
      if( mgr.commandBarActivated() ){
         comnd = mgr.readValue("__COMMAND");         
         if  ( "HEAD.Find".equals(comnd) )
            bEmptyTree = true;   // Clear tree when in the find layout
         eval(mgr.commandBarFunction());
         }
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("BUDGET_NO")) )
         okFind();
      else
         okFind();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("PROJECTBUDGETNODATA: No data found.");
         headset.clear();
      }
   }  



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","PROJECT_BUDGET_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("BUDGET_NO").    
              setInsertable().
              setHidden().  
              setLabel("PROJECTBUDGETBUDGETNO: Budget No").
              setSize(30);    
      headblk.addField("BUDGET_NAME").
              setInsertable().
              setHidden().
              setLabel("PROJECTBUDGETBUDGETNAME: Budget Name").
              setSize(30);
      headblk.setView("PROJECT_BUDGET");
      headblk.defineCommand("PROJECT_BUDGET_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("PROJECTBUDGETTBLHEAD: Project Budget");
      headtbl.enableRowSelect();
      headtbl.setWrap();      
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setDialogColumns(2);    

   }

   public void  adjust()
   {
      
   }    

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "PROJECTBUDGETDESC: Project Budget";
   }

   protected String getTitle()
   {
      return "PROJECTBUDGETTITLE: Project Budget";
   }

   protected AutoString getContents() throws FndException
   {
      AutoString out = getOutputStream();
      out.clear();
      ASPManager mgr = getASPManager();
      out.append("<html>\n");
      out.append("<head>");
      out.append(mgr.generateHeadTag("PROJECTBUDGETTITLE: Project Budget"));
      out.append("<link rel=\"StyleSheet\" href=\"/b2e/unsecured/common/scripts/dtree.css\" type=\"text/css\" />\n"); 
      out.append("<script type=\"text/javascript\" src=\"/b2e/unsecured/common/scripts/dtree.js\"></script>\n");
      out.append("</head>\n");
      out.append("<body ");      
      out.append(">\n");    
          out.append("<script type=\"text/javascript\">\n"); 
          out.append(" function delSameItem(arr) {\n");
          out.append("var _temp = {};\n");  
          out.append("var _arrTemp = [];\n");
          out.append("var _len = arr.length;");        
          out.append(" for(var i = 0; i < _len; i++) {\n");
          out.append("if(!_temp[arr[i]]) {\n");    
          out.append("_arrTemp.push(arr[i]);\n");   
          out.append("_temp[arr[i]] = 1;\n");   
          out.append("}\n");   
          out.append(" }\n");   
          out.append(" return _arrTemp;\n");   
          out.append("};\n");     
          out.append("mytree = new dTree('mytree');\n");   
          out.append("mytree.config.useCheckbox = true;");   
          out.append("mytree.add(0,-1,'根节点');\n");   
          out.append("function getNodes(){\n");  
          out.append("var arr = mytree.getNodes();\n");   
          out.append("delSameItem(arr);\n");  
          out.append("alert(arr)\n");   
          out.append("  };\n");            
          out.append("mytree.add(1,0,'节点 1','ProjectBudgetTest.page');\n");
          out.append("mytree.add(2,0,'节点 2','ProjectBudgetTest.page');\n");
          out.append("mytree.add(4,0,'节点 3','ProjectBudgetTest.page');\n");
          out.append("mytree.add(5,3,'节点 1.1.1','ProjectBudgetTest.page');\n");
          out.append("mytree.add(6,5,'节点 1.1.1.1','ProjectBudgetTest.page');\n");
          out.append("mytree.add(7,0,'节点 4','ProjectBudgetTest.page');\n");
          out.append("mytree.add(8,1,'节点 1.2','ProjectBudgetTest.page');\n");
          out.append("document.write(mytree);\n");    
          out.append(" </script>\n");
          out.append("<input type=\"button\" value=\"确定\" onclick=\"getNodes()\">");
      out.append("</body>\n");      
      out.append("</html>\n");
      appendDirtyJavaScript("//-----------------------------------------------------------------------------\n");
      appendDirtyJavaScript("//----------------------------  CLIENT FUNCTIONS  -----------------------------\n");
      appendDirtyJavaScript("//-----------------------------------------------------------------------------\n"); 
      return out;

   }
}
