/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.wordmw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class TemplateSelecter extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.wordmw.TemplateSelecter");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;
   
   
   private String currUrl;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  TemplateSelecter (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();
      ASPContext ctx = mgr.getASPContext();

      currUrl = mgr.isEmpty(mgr.getQueryStringValue("currUrl")) ? ctx.readValue("currUrl_") : mgr.getQueryStringValue("currUrl");
	  if (currUrl != null) {
			ctx.writeValue("currUrl_", currUrl);
	  }
      
      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("BUSS_ID")) )
         okFind();
      else if(!mgr.isEmpty(mgr.getQueryStringValue("VALIDATE")))
    	 validate();
      else
    	  okFind(); 
      adjust();
   }
   
   public void validate()
   {
	    ASPManager mgr = getASPManager();
		String val = mgr.readValue("VALIDATE");
		if("TEMP_ID".equals(val)){
			String temp_id=mgr.readValue("TEMP_ID");
			StringBuilder result=new StringBuilder("");
			String temp="";
			ASPTransactionBuffer trans = mgr.newASPTransactionBuffer(); 
			   
		    ASPQuery q = trans.addQuery("GETLIST","SELECT  BOOKMARKNAME  FROM TEMPLATE_BOOKMARKS_VIEW  WHERE  RECORDID='"+temp_id+"'");
		   
		    trans = mgr.perform(trans);
		    ASPBuffer dataList= trans.getBuffer("GETLIST");
		    dataList.removeItem("INFO");
		   
		    for(int i=0;i<dataList.countItems();i++){
			   ASPBuffer data=dataList.getBufferAt(i);
			   result.append(data.getValue("BOOKMARKNAME")).append("#");
		    }
		    if(result.length()>0){
				 temp=result.substring(0, result.length()-1);
			}
			mgr.responseWrite(temp);
		}
		mgr.endResponse();
   }
   
   //-----------------------------------------------------------------------------
   //--------VALIDATE=TEMP_ID----------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      q.addWhereCondition("IS_USE='TRUE' AND  PAGE_URL='"+currUrl+"'");
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("BUSINESSTEMPLATENODATA: No data found.");
         headset.clear();
      }
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","BUSINESS_TEMPLATE_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("BUSS_ID","Number").
              //setMandatory().
              //setInsertable().
              setReadOnly().
              setLabel("BUSINESSTEMPLATEBUSSID: Buss Id").
              setSize(10);
      headblk.addField("PAGE_NAME").
              setReadOnly().
              setLabel("BUSINESSTEMPLATEPAGENAME: Page Name").
              setSize(40);
      headblk.addField("TEMPLATEID").
              setReadOnly().
              setLabel("BUSINESSTEMPLATETEMPLATEID: Templateid").
              setSize(10);
      headblk.addField("TEMPLATE_NAME_").
              setReadOnly().
              //setFunction("GD_TEMPLATE_FILE_API.Get_Filename(:TEMPLATEID)").
              setLabel("BUSINESSTEMPLATETEMPLATENAME: Template Name ").
              setSize(50);
      //mgr.getASPField("TEMPLATEID").setValidation("TEMPLATE_NAME_");
      
      headblk.setView("BUSINESS_TEMPLATE");
      headblk.defineCommand("BUSINESS_TEMPLATE_API","");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("BUSINESSTEMPLATETBLHEAD: Business Templates");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headtbl.setEditable();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
 



   }



   public void  adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "TEMPLATESELECTERDESC: Template Selecter";
   }


   protected String getTitle()
   {
      return "TEMPLATESELECTERTITLE: Template Selecter";
   }


   protected void printContents() throws FndException
   {
	   appendDirtyJavaScript("function confirmSelectedTemp(){  \n");
	   appendDirtyJavaScript("   var selectedCount = 0;\n");
	   appendDirtyJavaScript("   var selectedTemp = '';\n");
	   appendDirtyJavaScript("   for(var i=0; i<document.getElementsByName('__SELECTED1').length; i++) {\n");
	   appendDirtyJavaScript("        if(document.getElementsByName('__SELECTED1')[i].checked){\n");
	   appendDirtyJavaScript("             var selectedTemp =document.getElementsByName('TEMPLATEID')[i+1].value;\n");
	   appendDirtyJavaScript("             selectedCount++;\n");
	   appendDirtyJavaScript("        }\n");
	   appendDirtyJavaScript("   }\n");
	   appendDirtyJavaScript("   if(selectedCount==0){\n");
	   appendDirtyJavaScript("       alert(\"请选择一个模板！\");\n");
	   appendDirtyJavaScript("       return;\n");
	   appendDirtyJavaScript("   }\n");
	   appendDirtyJavaScript("   if(selectedCount>1){\n");
	   appendDirtyJavaScript("       alert(\"一次只能选择一个模板！\");\n");
	   appendDirtyJavaScript("       return;\n");
	   appendDirtyJavaScript("   }\n");
	   
	   appendDirtyJavaScript("    if(selectedTemp!='')\n");
	   appendDirtyJavaScript("    {\n");
	   appendDirtyJavaScript("        window.opener.setCurrTemplateId(selectedTemp);\n");
	   appendDirtyJavaScript("    }else{\n");
	   appendDirtyJavaScript("       return;\n");
	   appendDirtyJavaScript("    }\n");
	   appendDirtyJavaScript("   window.close();\n");
	   appendDirtyJavaScript("}\n");
      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      if(headset.countRows()>0){
    	  printButton("ConfirmSelected", "确认", " onClick=\"confirmSelectedTemp();\" id=\"ConfirmSelected\" style=\"background:#A9C9E9;width: 85px;height: 20px;margin-top:  4px;margin-left:  12px;\"");
      }
      
      if(headset.countRows()==0){
    	  appendDirtyJavaScript("alert('请确认是否存在模板');\n");
    	  appendDirtyJavaScript("window.close();\n");
      }
      
      if(!mgr.isEmpty(currUrl)){
    	  appendDirtyJavaScript("setTimeout('window.focus()',3);\n");
      }
   }
}
