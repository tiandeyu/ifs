/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.docmaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class DocBasicData extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.docmaw.DocBasicData");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock doc_booklet_blk;
   private ASPRowSet doc_booklet_set;
   private ASPCommandBar doc_booklet_bar;
   private ASPTable doc_booklet_tbl;
   private ASPBlockLayout doc_booklet_lay;

   private ASPBlock doc_association_type_blk;
   private ASPRowSet doc_association_type_set;
   private ASPCommandBar doc_association_type_bar;
   private ASPTable doc_association_type_tbl;
   private ASPBlockLayout doc_association_type_lay;

   private ASPBlock doc_communication_seq_blk;
   private ASPRowSet doc_communication_seq_set;
   private ASPCommandBar doc_communication_seq_bar;
   private ASPTable doc_communication_seq_tbl;
   private ASPBlockLayout doc_communication_seq_lay;

   private ASPBlock doc_meeting_type_blk;
   private ASPRowSet doc_meeting_type_set;
   private ASPCommandBar doc_meeting_type_bar;
   private ASPTable doc_meeting_type_tbl;
   private ASPBlockLayout doc_meeting_type_lay;

   private ASPBlock doc_page_size_blk;
   private ASPRowSet doc_page_size_set;
   private ASPCommandBar doc_page_size_bar;
   private ASPTable doc_page_size_tbl;
   private ASPBlockLayout doc_page_size_lay;

   private ASPBlock doc_sec_level_blk;
   private ASPRowSet doc_sec_level_set;
   private ASPCommandBar doc_sec_level_bar;
   private ASPTable doc_sec_level_tbl;
   private ASPBlockLayout doc_sec_level_lay;
   
   private ASPBlock doc_profession_blk;
   private ASPRowSet doc_profession_set;
   private ASPCommandBar doc_profession_bar;
   private ASPTable doc_profession_tbl;
   private ASPBlockLayout doc_profession_lay;
   
   private ASPBlock doc_class_lu_blk;
   private ASPRowSet doc_class_lu_set;
   private ASPCommandBar doc_class_lu_bar;
   private ASPTable doc_class_lu_tbl;
   private ASPBlockLayout doc_class_lu_lay;

   private ASPTabContainer tabs;
   
   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  DocBasicData (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else
         okFindITEM1();
      adjust();
      tabs.saveActiveTab();
   }

   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_booklet_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_booklet_blk);
      
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM1","DOC_BOOKLET_API.New__",doc_booklet_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      doc_booklet_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_association_type_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_association_type_blk);
      
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM2","DOC_ASSOCIATION_TYPE_API.New__",doc_association_type_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      doc_association_type_set.addRow(data);
   }
   public void okFindITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_communication_seq_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_communication_seq_blk);
      
   }
   public void newRowITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM3","DOC_COMMUNICATION_SEQ_API.New__",doc_communication_seq_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      doc_communication_seq_set.addRow(data);
   }
   public void okFindITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_meeting_type_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_meeting_type_blk);
      
   }
   public void newRowITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM4","DOC_MEETING_TYPE_API.New__",doc_meeting_type_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM4/DATA");
      doc_meeting_type_set.addRow(data);
   }
   public void okFindITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_page_size_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_page_size_blk);
      
   }
   public void newRowITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM5","DOC_PAGE_SIZE_API.New__",doc_page_size_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM5/DATA");
      doc_page_size_set.addRow(data);
   }
   public void okFindITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_sec_level_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,doc_sec_level_blk);
      
   }
   public void newRowITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM6","DOC_SEC_LEVEL_API.New__",doc_sec_level_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM6/DATA");
      doc_sec_level_set.addRow(data);
   }
   
   public void okFindITEM7()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_profession_blk);
      q.includeMeta("ALL");
      mgr.querySubmit(trans,doc_profession_blk);
   }
   
   public void newRowITEM7()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM7","DOC_PROFESSION_API.New__",doc_profession_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM7/DATA");
      doc_profession_set.addRow(data);
   }

   public void okFindITEM8()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(doc_class_lu_blk);
      q.setOrderByClauseCompulsively("LU_NAME");
      
      q.includeMeta("ALL");
      mgr.querySubmit(trans,doc_class_lu_blk);
   }
   
   public void newRowITEM8()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM8","DOC_CLASS_LU_API.New__",doc_class_lu_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM8/DATA");
      doc_class_lu_set.addRow(data);
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

      disableConfiguration();
      
      headblk = mgr.newASPBlock("MAIN");
      headbar = mgr.newASPCommandBar(headblk);

      headbar.disableCommand(headbar.FIND);
      headbar.disableCommand(headbar.BACK);
      headbar.disableCommand(headbar.FORWARD);
      headbar.disableCommand(headbar.BACKWARD);
      headbar.disableCommand(headbar.NEWROW);

      headbar.addCustomCommand("activateBooklet", mgr.translate("DOCMAWDOCBASICDATABOOKLET: Booklet"));
      headbar.addCustomCommand("activateAssoType", mgr.translate("DOCMAWDOCBASICDATAASSOTYPE: Asso Type"));
      headbar.addCustomCommand("activateCommSeq", mgr.translate("DOCMAWDOCBASICDATACOMMSEQ: Comm Seq"));
      headbar.addCustomCommand("activateMeetType", mgr.translate("DOCMAWDOCBASICDATAMEETTYPE: Meeting Type"));
      headbar.addCustomCommand("activatePageSize", mgr.translate("DOCMAWDOCBASICDATAPAGESIZE: Page Size"));
      headbar.addCustomCommand("activateSecLevel", mgr.translate("DOCMAWDOCBASICDATASECLEVEL: Sec Level"));
      headbar.addCustomCommand("activateProfession", mgr.translate("DOCMAWDOCBASICDATAPROFESSION: Profession"));
      headbar.addCustomCommand("activateLuClass", mgr.translate("DOCMAWDOCBASICDATALUCLASS: Lu Class"));
      
      headlay = headblk.getASPBlockLayout();
      headlay.setDialogColumns(2);
      headlay.setDefaultLayoutMode(headlay.SINGLE_LAYOUT);
 
      //
      // Booklet
      //

      doc_booklet_blk = mgr.newASPBlock("ITEM1");
      doc_booklet_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_booklet_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_booklet_blk.addField("BOOKLET_NO").
      setMandatory().
      setInsertable().
      setLabel("DOCBOOKLETBOOKLETNO: Booklet No").
      setSize(20);
      doc_booklet_blk.addField("BOOKLET_NAME").
      setInsertable().
      setLabel("DOCBOOKLETBOOKLETNAME: Booklet Name").
      setSize(50);
      doc_booklet_blk.addField("NOTE").
      setInsertable().
      setLabel("DOCBOOKLETNOTE: Note").
      setSize(50);
      doc_booklet_blk.setView("DOC_BOOKLET");
      doc_booklet_blk.defineCommand("DOC_BOOKLET_API","New__,Modify__,Remove__");
      doc_booklet_set = doc_booklet_blk.getASPRowSet();
      doc_booklet_bar = mgr.newASPCommandBar(doc_booklet_blk);
      doc_booklet_bar.defineCommand(doc_booklet_bar.OKFIND, "okFindITEM1");
      doc_booklet_bar.defineCommand(doc_booklet_bar.NEWROW, "newRowITEM1");
      doc_booklet_tbl = mgr.newASPTable(doc_booklet_blk);
      doc_booklet_tbl.setTitle("DOCBOOKLETITEMHEAD1: DocBooklet");
      doc_booklet_tbl.enableRowSelect();
      doc_booklet_tbl.setWrap();
      doc_booklet_lay = doc_booklet_blk.getASPBlockLayout();
      doc_booklet_lay.setDefaultLayoutMode(doc_booklet_lay.MULTIROW_LAYOUT);
      
      //
      // Association Type
      //
      
      doc_association_type_blk = mgr.newASPBlock("ITEM2");
      doc_association_type_blk.addField("ITEM1_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_association_type_blk.addField("ITEM1_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_association_type_blk.addField("ASSOCIATE_ID").
      setMandatory().
      setInsertable().
      setLabel("DOCASSOCIATIONTYPEASSOCIATEID: Associate Id").
      setSize(20);
      doc_association_type_blk.addField("DESCRIPTION").
      setInsertable().
      setLabel("DOCASSOCIATIONTYPEDESCRIPTION: Description").
      setSize(50);
      doc_association_type_blk.addField("ITEM1_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCASSOCIATIONTYPEITEM1NOTE: Note").
      setSize(50);
      doc_association_type_blk.setView("DOC_ASSOCIATION_TYPE");
      doc_association_type_blk.defineCommand("DOC_ASSOCIATION_TYPE_API","New__,Modify__,Remove__");
      doc_association_type_set = doc_association_type_blk.getASPRowSet();
      doc_association_type_bar = mgr.newASPCommandBar(doc_association_type_blk);
      doc_association_type_bar.defineCommand(doc_association_type_bar.OKFIND, "okFindITEM2");
      doc_association_type_bar.defineCommand(doc_association_type_bar.NEWROW, "newRowITEM2");
      doc_association_type_tbl = mgr.newASPTable(doc_association_type_blk);
      doc_association_type_tbl.setTitle("DOCASSOCIATIONTYPEITEMHEAD2: DocAssociationType");
      doc_association_type_tbl.enableRowSelect();
      doc_association_type_tbl.setWrap();
      doc_association_type_lay = doc_association_type_blk.getASPBlockLayout();
      doc_association_type_lay.setDefaultLayoutMode(doc_association_type_lay.MULTIROW_LAYOUT);
      
      //
      // Communication Seq
      //
      
      doc_communication_seq_blk = mgr.newASPBlock("ITEM3");
      doc_communication_seq_blk.addField("ITEM2_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_communication_seq_blk.addField("ITEM2_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_communication_seq_blk.addField("PURPOSE_NO").
      setMandatory().
      setInsertable().
      setLabel("DOCCOMMUNICATIONSEQPURPOSENO: Purpose No").
      setSize(20);
      doc_communication_seq_blk.addField("PURPOSE_NAME").
      setInsertable().
      setLabel("DOCCOMMUNICATIONSEQPURPOSENAME: Purpose Name").
      setSize(50);
      doc_communication_seq_blk.addField("BEGIN_VALUE","Number").
      setInsertable().
      setLabel("DOCCOMMUNICATIONSEQBEGINVALUE: Begin Value").
      setSize(20);
      doc_communication_seq_blk.addField("END_VALUE","Number").
      setInsertable().
      setLabel("DOCCOMMUNICATIONSEQENDVALUE: End Value").
      setSize(20);
      doc_communication_seq_blk.addField("ITEM2_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCCOMMUNICATIONSEQITEM2NOTE: Note").
      setSize(50);
      doc_communication_seq_blk.setView("DOC_COMMUNICATION_SEQ");
      doc_communication_seq_blk.defineCommand("DOC_COMMUNICATION_SEQ_API","New__,Modify__,Remove__");
      doc_communication_seq_set = doc_communication_seq_blk.getASPRowSet();
      doc_communication_seq_bar = mgr.newASPCommandBar(doc_communication_seq_blk);
      doc_communication_seq_bar.defineCommand(doc_communication_seq_bar.OKFIND, "okFindITEM3");
      doc_communication_seq_bar.defineCommand(doc_communication_seq_bar.NEWROW, "newRowITEM3");
      doc_communication_seq_tbl = mgr.newASPTable(doc_communication_seq_blk);
      doc_communication_seq_tbl.setTitle("DOCCOMMUNICATIONSEQITEMHEAD3: DocCommunicationSeq");
      doc_communication_seq_tbl.enableRowSelect();
      doc_communication_seq_tbl.setWrap();
      doc_communication_seq_lay = doc_communication_seq_blk.getASPBlockLayout();
      doc_communication_seq_lay.setDefaultLayoutMode(doc_communication_seq_lay.MULTIROW_LAYOUT);
      
      //
      // Meeting Type
      //
      
      doc_meeting_type_blk = mgr.newASPBlock("ITEM4");
      doc_meeting_type_blk.addField("ITEM3_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_meeting_type_blk.addField("ITEM3_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_meeting_type_blk.addField("MEETING_TYPE").
      setMandatory().
      setInsertable().
      setLabel("DOCMEETINGTYPEMEETINGTYPE: Meeting Type").
      setSize(20);
      doc_meeting_type_blk.addField("TYPE_NAME").
      setInsertable().
      setLabel("DOCMEETINGTYPETYPENAME: Type Name").
      setSize(50);
      doc_meeting_type_blk.addField("ITEM3_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCMEETINGTYPEITEM3NOTE: Note").
      setSize(50);
      doc_meeting_type_blk.setView("DOC_MEETING_TYPE");
      doc_meeting_type_blk.defineCommand("DOC_MEETING_TYPE_API","New__,Modify__,Remove__");
      doc_meeting_type_set = doc_meeting_type_blk.getASPRowSet();
      doc_meeting_type_bar = mgr.newASPCommandBar(doc_meeting_type_blk);
      doc_meeting_type_bar.defineCommand(doc_meeting_type_bar.OKFIND, "okFindITEM4");
      doc_meeting_type_bar.defineCommand(doc_meeting_type_bar.NEWROW, "newRowITEM4");
      doc_meeting_type_tbl = mgr.newASPTable(doc_meeting_type_blk);
      doc_meeting_type_tbl.setTitle("DOCMEETINGTYPEITEMHEAD4: DocMeetingType");
      doc_meeting_type_tbl.enableRowSelect();
      doc_meeting_type_tbl.setWrap();
      doc_meeting_type_lay = doc_meeting_type_blk.getASPBlockLayout();
      doc_meeting_type_lay.setDefaultLayoutMode(doc_meeting_type_lay.MULTIROW_LAYOUT);
      
      //
      // Page Size
      //
      
      doc_page_size_blk = mgr.newASPBlock("ITEM5");
      doc_page_size_blk.addField("ITEM4_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_page_size_blk.addField("ITEM4_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_page_size_blk.addField("PAGE_SIZE").
      setMandatory().
      setInsertable().
      setLabel("DOCPAGESIZEPAGESIZE: Page Size").
      setSize(20);
      doc_page_size_blk.addField("SIZE_NAME").
      setInsertable().
      setLabel("DOCPAGESIZESIZENAME: Size Name").
      setSize(50);
      doc_page_size_blk.addField("ITEM4_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCPAGESIZEITEM4NOTE: Note").
      setSize(50);
      doc_page_size_blk.setView("DOC_PAGE_SIZE");
      doc_page_size_blk.defineCommand("DOC_PAGE_SIZE_API","New__,Modify__,Remove__");
      doc_page_size_set = doc_page_size_blk.getASPRowSet();
      doc_page_size_bar = mgr.newASPCommandBar(doc_page_size_blk);
      doc_page_size_bar.defineCommand(doc_page_size_bar.OKFIND, "okFindITEM5");
      doc_page_size_bar.defineCommand(doc_page_size_bar.NEWROW, "newRowITEM5");
      doc_page_size_tbl = mgr.newASPTable(doc_page_size_blk);
      doc_page_size_tbl.setTitle("DOCPAGESIZEITEMHEAD5: DocPageSize");
      doc_page_size_tbl.enableRowSelect();
      doc_page_size_tbl.setWrap();
      doc_page_size_lay = doc_page_size_blk.getASPBlockLayout();
      doc_page_size_lay.setDefaultLayoutMode(doc_page_size_lay.MULTIROW_LAYOUT);
      
      //
      // Security Level
      //
      
      doc_sec_level_blk = mgr.newASPBlock("ITEM6");
      doc_sec_level_blk.addField("ITEM5_OBJID").
      setHidden().
      setDbName("OBJID");
      doc_sec_level_blk.addField("ITEM5_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      doc_sec_level_blk.addField("SEC_LEVEL").
      setMandatory().
      setInsertable().
      setLabel("DOCSECLEVELSECLEVEL: Sec Level").
      setSize(20);
      doc_sec_level_blk.addField("LEVEL_NAME").
      setInsertable().
      setLabel("DOCSECLEVELLEVELNAME: Level Name").
      setSize(50);
      doc_sec_level_blk.addField("ITEM5_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCSECLEVELITEM5NOTE: Note").
      setSize(50);
      doc_sec_level_blk.setView("DOC_SEC_LEVEL");
      doc_sec_level_blk.defineCommand("DOC_SEC_LEVEL_API","New__,Modify__,Remove__");
      doc_sec_level_set = doc_sec_level_blk.getASPRowSet();
      doc_sec_level_bar = mgr.newASPCommandBar(doc_sec_level_blk);
      doc_sec_level_bar.defineCommand(doc_sec_level_bar.OKFIND, "okFindITEM6");
      doc_sec_level_bar.defineCommand(doc_sec_level_bar.NEWROW, "newRowITEM6");
      doc_sec_level_tbl = mgr.newASPTable(doc_sec_level_blk);
      doc_sec_level_tbl.setTitle("DOCSECLEVELITEMHEAD6: DocSecLevel");
      doc_sec_level_tbl.enableRowSelect();
      doc_sec_level_tbl.setWrap();
      doc_sec_level_lay = doc_sec_level_blk.getASPBlockLayout();
      doc_sec_level_lay.setDefaultLayoutMode(doc_sec_level_lay.MULTIROW_LAYOUT);
      
      //
      // Profession
      //
      
      doc_profession_blk = mgr.newASPBlock("ITEM7");
      doc_profession_blk.addField("ITEM6_OBJID").
      setHidden().
      setDbName("OBJID");
      
      doc_profession_blk.addField("ITEM6_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      doc_profession_blk.addField("PROFESSION_NO").
      setMandatory().
      setInsertable().
      setLabel("DOCPROFESSIONPROFESSIONNO: Profession No").
      setSize(20);
      
      doc_profession_blk.addField("PROFESSION_NAME").
      setInsertable().
      setLabel("DOCPROFESSIONPROFESSIONNAME: Profession Name").
      setSize(50);
      
      doc_profession_blk.addField("ITEM6_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCPROFESSIONITEM6NOTE: Note").
      setSize(50);
      
      doc_profession_blk.setView("DOC_PROFESSION");
      doc_profession_blk.defineCommand("DOC_PROFESSION_API","New__,Modify__,Remove__");
      doc_profession_set = doc_profession_blk.getASPRowSet();
      doc_profession_bar = mgr.newASPCommandBar(doc_profession_blk);
      doc_profession_bar.defineCommand(doc_profession_bar.OKFIND, "okFindITEM7");
      doc_profession_bar.defineCommand(doc_profession_bar.NEWROW, "newRowITEM7");
      doc_profession_tbl = mgr.newASPTable(doc_profession_blk);
      doc_profession_tbl.setTitle("DOCPROFESSIONITEMHEAD7: DocProfession");
      doc_profession_tbl.enableRowSelect();
      doc_profession_tbl.setWrap();
      doc_profession_lay = doc_profession_blk.getASPBlockLayout();
      doc_profession_lay.setDefaultLayoutMode(doc_profession_lay.MULTIROW_LAYOUT);

      //
      // LU And Doc Class
      //
      
      doc_class_lu_blk = mgr.newASPBlock("ITEM8");
      doc_class_lu_blk.addField("ITEM8_OBJID").
      setHidden().
      setDbName("OBJID");
      
      doc_class_lu_blk.addField("ITEM8_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      doc_class_lu_blk.addField("LU_NAME").
      setMandatory().
      setInsertable().
      setDynamicLOV("GENERAL_LU_PAGE").
      setLabel("DOCCLASSLULUNAME: Lu Name").
      setSize(20);
      
      doc_class_lu_blk.addField("ITEM8_DOC_CLASS").
      setDbName("DOC_CLASS").
      setMandatory().
      setInsertable().
      setDynamicLOV("DOC_CLASS").
      setLOVProperty("ORDER_BY", "CLASS_ORDER").
      setLabel("DOCCLASSLUITEM8DOCCLASS: Doc Class").
      setSize(20);
      
      doc_class_lu_blk.addField("DOC_CLASS_NAME").
      setLabel("DOCCLASSLUITEM8DOCCLASSNAME: Doc Class Name").
      setFunction("DOC_CLASS_API.Get_Name(:ITEM8_DOC_CLASS)").
      setReadOnly().
      setSize(20);
      mgr.getASPField("ITEM8_DOC_CLASS").setValidation("DOC_CLASS_NAME");
      
      doc_class_lu_blk.addField("DEF").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("DOCCLASSLUDEF: Def").
      setSize(5);
      
      doc_class_lu_blk.addField("ITEM8_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("DOCCLASSLUNOTE: Note").
      setSize(50);
      
      doc_class_lu_blk.setView("DOC_CLASS_LU");
      doc_class_lu_blk.defineCommand("DOC_CLASS_LU_API","New__,Modify__,Remove__");
      doc_class_lu_set = doc_class_lu_blk.getASPRowSet();
      doc_class_lu_bar = mgr.newASPCommandBar(doc_class_lu_blk);
      doc_class_lu_bar.defineCommand(doc_class_lu_bar.OKFIND, "okFindITEM8");
      doc_class_lu_bar.defineCommand(doc_class_lu_bar.NEWROW, "newRowITEM8");
      doc_class_lu_tbl = mgr.newASPTable(doc_class_lu_blk);
      doc_class_lu_tbl.setTitle("DOCCLASSLUITEMHEAD8: DocClassLu");
      doc_class_lu_tbl.enableRowSelect();
      doc_class_lu_tbl.setWrap();
      doc_class_lu_lay = doc_class_lu_blk.getASPBlockLayout();
      doc_class_lu_lay.setDefaultLayoutMode(doc_class_lu_lay.MULTIROW_LAYOUT);
      doc_class_lu_lay.setSimple("DOC_CLASS_NAME");
      
      tabs = mgr.newASPTabContainer();
      
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATABOOKLET: Booklet"),"javascript:commandSet('MAIN.activateBooklet','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATAASSOTYPE: Asso Type"),"javascript:commandSet('MAIN.activateAssoType','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATACOMMSEQ: Comm Seq"),"javascript:commandSet('MAIN.activateCommSeq','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATAMEETTYPE: Meeting Type"),"javascript:commandSet('MAIN.activateMeetType','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATAPAGESIZE: Page Size"),"javascript:commandSet('MAIN.activatePageSize','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATASECLEVEL: Sec Level"),"javascript:commandSet('MAIN.activateSecLevel','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATAPROFESSION: Profession"),"javascript:commandSet('MAIN.activateProfession','')");
      tabs.addTab(mgr.translate("DOCMAWDOCBASICDATALUCLASS: Lu Class"),"javascript:commandSet('MAIN.activateLuClass','')");
      
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);

   }

   public void activateBooklet()
   {
      tabs.setActiveTab(1);
      okFindITEM1();
   }
   
   public void activateAssoType()
   {
      tabs.setActiveTab(2);
      okFindITEM2();
   }
   
   public void activateCommSeq()
   {
      tabs.setActiveTab(3);
      okFindITEM3();
   }
   
   public void activateMeetType()
   {
      tabs.setActiveTab(4);
      okFindITEM4();
   }
   
   public void activatePageSize()
   {
      tabs.setActiveTab(5);
      okFindITEM5();
   }
   
   public void activateSecLevel()
   {
      tabs.setActiveTab(6);
      okFindITEM6();
   }
   
   public void activateProfession()
   {
      tabs.setActiveTab(7);
      okFindITEM7();
   }
   
   public void activateLuClass()
   {
      tabs.setActiveTab(8);
      okFindITEM8();
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "DOCMAWDOCBASICDATADESC: Document Basic Data";
   }


   protected String getTitle()
   {
      return getDescription();
   }


   protected void printContents() throws FndException
   {
      super.printContents();

      ASPManager mgr = getASPManager();
      appendToHTML(tabs.showTabsInit());
      
      if  (tabs.getActiveTab() == 1)
         appendToHTML(doc_booklet_lay.show());
      else if (tabs.getActiveTab() == 2)
         appendToHTML(doc_association_type_lay.show());
      else if (tabs.getActiveTab() == 3)
         appendToHTML(doc_communication_seq_lay.show());
      else if (tabs.getActiveTab() == 4)
         appendToHTML(doc_meeting_type_lay.show());
      else if (tabs.getActiveTab() == 5)
         appendToHTML(doc_page_size_lay.show());
      else if (tabs.getActiveTab() == 6)
         appendToHTML(doc_sec_level_lay.show());
      else if (tabs.getActiveTab() == 7)
         appendToHTML(doc_profession_lay.show());
      else if (tabs.getActiveTab() == 8)
         appendToHTML(doc_class_lu_lay.show());
      
      appendToHTML(tabs.showTabsFinish());
   }
}
