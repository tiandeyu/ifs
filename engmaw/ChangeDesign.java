/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.engmaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class ChangeDesign extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.engmaw.ChangeDesign");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock eng_contact_req_item_blk;
   private ASPRowSet eng_contact_req_item_set;
   private ASPCommandBar eng_contact_req_item_bar;
   private ASPTable eng_contact_req_item_tbl;
   private ASPBlockLayout eng_contact_req_item_lay;


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  ChangeDesign (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("ID")) )
         okFind();
      else
         okFind();
      adjust();
   }
   
   public void  performHEAD( String command)
   {
      int currow;
      
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      

      currow = headset.getCurrentRowNo();
      if(headlay.isMultirowLayout())
         headset.storeSelections();
      else
         headset.selectRow();
      headset.markSelectedRows( command );
      mgr.submit(trans);
      headset.goTo(currow);
   }    
   
   public void  release()
   {

      performHEAD( "Release__" );
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("CHANGEDESIGNNODATA: No data found.");
         headset.clear();
      }
      eval( eng_contact_req_item_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","CHANGE_DESIGN_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(eng_contact_req_item_blk);
      q.addWhereCondition("PROJ_NO = ? AND CONTRACT_ID = ? AND ID = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("CONTRACT_ID", headset.getValue("CONTRACT_ID"));
      q.addParameter("ID", headset.getValue("ID"));
      q.includeMeta("ALL");  
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,eng_contact_req_item_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","ENG_CONTACT_REQ_ITEM_API.New__",eng_contact_req_item_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM0_CONTRACT_ID", headset.getValue("CONTRACT_ID"));
      cmd.setParameter("ITEM0_ID", headset.getValue("ID"));  
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      eng_contact_req_item_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("OBJSTATE").
              setHidden();
      headblk.addField("OBJEVENTS").
              setHidden();  
      headblk.addField("PROJ_NO").
              setMandatory().
              setInsertable().
              setDynamicLOV("GENERAL_PROJECT").
              setLabel("CHANGEDESIGNPROJNO: Proj No").
              setSize(30);
      headblk.addField("GENERAL_PROJECT_PROJ_DESC").
              setReadOnly().
              setFunction("GENERAL_PROJECT_API.GET_PROJ_DESC ( :PROJ_NO)").
              setLabel("CHANGEDESIGNGENERALPROJECTPROJDESC: General Project Proj Desc").
              setSize(30);
      mgr.getASPField("PROJ_NO").setValidation("GENERAL_PROJECT_PROJ_DESC");
      headblk.addField("CONTRACT_ID").
              setMandatory().
              setInsertable().
              setDynamicLOV("PROJECT_CONTRACT_LOV","PROJ_NO"). 
              setLOVProperty("ORDER_BY", "CONTRACT_ID").         
              setLabel("CHANGEDESIGNCONTRACTID: Contract Id").
              setSize(30);
      headblk.addField("CONTRACT_DESC").
              setReadOnly().    
              setFunction("PROJECT_CONTRACT_API.GET_CONTRACT_DESC(:PROJ_NO,:CONTRACT_ID)").
              setLabel("CHANGEDESIGNCONTRACTDESC: Contract Desc").
              setSize(30);            
      mgr.getASPField("CONTRACT_ID").setValidation("CONTRACT_DESC");
      headblk.addField("ID").
              setInsertable().
              setHidden().
              setLabel("CHANGEDESIGNID: Id").
              setSize(30);
      headblk.addField("CHANGE_ORDER_NO").
              setInsertable().
              setMandatory().
              setLabel("CHANGEDESIGNCHANGEORDERNO: Change Order No").
              setSize(30);
      headblk.addField("CHANGE_TYPE").
              setMandatory().
              enumerateValues("Change_Type_API").
              setSelectBox().
              setInsertable().
              setLabel("CHANGEDESIGNCHANGETYPE: Change Type").
              setSize(30);
      headblk.addField("CHANGE_LEVEL").
              setMandatory().
              enumerateValues("Change_Level_API").
              setSelectBox().
              setInsertable().
              setLabel("CHANGEDESIGNCHANGELEVEL: Change Level").
              setSize(30);
      headblk.addField("IS_EXECUTED").
              setMandatory().
              enumerateValues("Is_Executed_API").
              setSelectBox().
              setInsertable().
              setLabel("CHANGEDESIGNISEXECUTED: Is Executed").
              setSize(30);
      
      headblk.addField("ALL_REPORT_TOTAL","Number" ,"#0.00").  
              setReadOnly(). 
              setFunction("CONTRACT_CONTACT_REQ_ITEM_API.CAL_REPORT_TOTAL(:PROJ_NO,:CONTRACT_ID,:CON_REQ_NO)").
              setLabel("CONTRACTCONTACTREQALLREPORTTOTAL: All Report Total").
              setSize(30);    

      headblk.addField("ALL_INSPECT_TOTAL","Number" ,"#0.00").  
              setReadOnly(). 
              setFunction("CONTRACT_CONTACT_REQ_ITEM_API.CAL_INSPECT_TOTAL(:PROJ_NO,:CONTRACT_ID,:CON_REQ_NO)").
              setLabel("CONTRACTCONTACTREQALLINSPECTTOTAL: All Inspect Total").
              setSize(30);

      headblk.addField("ALL_OWNER_TOTAL","Number" ,"#0.00").  
              setReadOnly(). 
              setFunction("CONTRACT_CONTACT_REQ_ITEM_API.CAL_OWNER_TOTAL(:PROJ_NO,:CONTRACT_ID,:CON_REQ_NO)").
              setLabel("CONTRACTCONTACTREQALLOWNERTOTAL: All Owner Total").
              setSize(30);
      headblk.addField("SUM").
              setInsertable().
              setHidden().
              setLabel("CHANGEDESIGNSUM: Sum").
              setSize(30);
      headblk.addField("APPLY_PERSON").
              setInsertable().
              setDynamicLOV("PERSON_INFO").
              setLabel("CHANGEDESIGNAPPLYPERSON: Apply Person").
              setSize(20);
      headblk.addField("PERSON_INFO_NAME").
              setReadOnly().
              setFunction("PERSON_INFO_API.GET_NAME ( :APPLY_PERSON)").
              setLabel("CHANGEDESIGNPERSONINFONAME: Person Info Name").
              setSize(30);
      mgr.getASPField("APPLY_PERSON").setValidation("PERSON_INFO_NAME");
      headblk.addField("APPLY_DATE","Date").
              setInsertable().
              setLabel("CHANGEDESIGNAPPLYDATE: Apply Date").
              setSize(30);
      headblk.addField("CON_REQ_NO").
              setInsertable().
              setHyperlink("/b2e/secured/contrw/ContractContactReq.page", "PROJ_NO,CONTRACT_ID,CON_REQ_NO","NEWWIN").
              setDynamicLOV("CONTRACT_CONTACT_REQ").
              setLabel("CHANGEDESIGNCONREQNO: Con Req No").
              setSize(30);    
      headblk.addField("CHANGE_NO").  
              setReadOnly(). 
              setFieldHyperlink("/b2e/secured/contrw/ContractVariationSch.page", "CHANGE_PAGE", "CHANGE_NO CONTRACT_VAR_NO","NEWWIN").
              setLabel("CHANGEDESIGNCHANGENO: Change No").
              setSize(30);         
      headblk.addField("CHANGE_NAME").  
              setReadOnly().
              setFunction("CONTRACT_VARIATION_API.Get_Contract_Var_Desc(:PROJ_NO,:CONTRACT_ID,:CHANGE_NO)"). 
              setLabel("CHANGEDESIGNCHANGENAME: Change Name").
              setSize(30); 
      mgr.getASPField("CHANGE_NO").setValidation("CHANGE_NAME");  
      headblk.addField("CHANGE_PAGE").  
              setReadOnly().
              setHidden().
              setLabel("CONTRACTCONTACTREQCHANGEPAGE: Change Page").
              setSize(30);      

      headblk.addField("CHANGE_STATUS").
              setReadOnly().  
              setCheckBox("FALSE,TRUE").
              setLabel("CHANGEDESIGNCHANGESTATUS: Change Status").
              setSize(30);  
      headblk.addField("STATE").
              setReadOnly().    
              setLabel("CHANGEDESIGNSTATE: State").  
              setSize(30);          
      headblk.addField("REASON").
              setInsertable().
              setHeight(5).
              setLabel("CHANGEDESIGNREASON: Reason").
              setSize(120);
      headblk.addField("CONTENT").
              setInsertable().
              setHeight(5).
              setLabel("CHANGEDESIGNCONTENT: Content").
              setSize(120);
           
      headblk.setView("CHANGE_DESIGN");
      headblk.defineCommand("CHANGE_DESIGN_API","Modify__,Release__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headbar.addSecureCustomCommand("Release","CHANGEDESIGNRELEASE: Release Change Design", "CHANGE_DESIGN_API.Release__");
      headbar.addCommandValidConditions("Release",     "OBJSTATE",    "Enable",      "Initialization");  
      headtbl = mgr.newASPTable(headblk);    
      headtbl.setTitle("CHANGEDESIGNTBLHEAD: Change Designs");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setSimple("GENERAL_PROJECT_PROJ_DESC");
      headlay.setSimple("CONTRACT_DESC");  
      headlay.setSimple("PERSON_INFO_NAME");
      headlay.setDataSpan("APPLY_DATE", 5);
      headlay.setDataSpan("REASON", 5);
      headlay.setDataSpan("CONTENT", 5);
      headlay.setSimple("CHANGE_NAME");  
 
      eng_contact_req_item_blk = mgr.newASPBlock("ITEM1");
      eng_contact_req_item_blk.addField("ITEM0_OBJID").
                               setHidden().
                               setDbName("OBJID");
      eng_contact_req_item_blk.addField("ITEM0_OBJVERSION").
                               setHidden().
                               setDbName("OBJVERSION");
      eng_contact_req_item_blk.addField("ITEM0_PROJ_NO").
                               setDbName("PROJ_NO").
                               setMandatory().
                               setHidden().
                               setInsertable().
                               setLabel("ENGCONTACTREQITEMITEM0PROJNO: Proj No").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM0_CONTRACT_ID").
                               setDbName("CONTRACT_ID").
                               setMandatory().
                               setHidden().
                               setInsertable().
                               setLabel("ENGCONTACTREQITEMITEM0CONTRACTID: Contract Id").
                               setSize(100);
      eng_contact_req_item_blk.addField("ITEM0_ID").
                               setDbName("ID").
                               setHidden().
                               setMandatory().
                               setInsertable().
                               setLabel("ENGCONTACTREQITEMITEM0ID: Id").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM_NO").
                               setMandatory().
                               setReadOnly().
//                               setInsertable().
                               setLabel("ENGCONTACTREQITEMITEMNO: No").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM_NAME").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMITEMNAME: Name").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM_TYPE").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMITEMTYPE: Type").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM_UNIT").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMITEMUNIT: Unit").
                               setSize(30);
      eng_contact_req_item_blk.addField("ITEM_PRICE","Number").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMITEMPRICE: Price").
                               setSize(30);
      eng_contact_req_item_blk.addField("REPORT_QTY","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMREPORTQTY: Report Qty").
                               setSize(30);
      eng_contact_req_item_blk.addField("REPORT_PRICE","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMREPORTPRICE: Report Price").
                               setSize(30);
      eng_contact_req_item_blk.addField("REPORT_TOTAL","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMREPORTTOTAL: Report Total").
                               setSize(30);
      eng_contact_req_item_blk.addField("INSPECT_QTY","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMINSPECTQTY: Inspect Qty").
                               setSize(30);
      eng_contact_req_item_blk.addField("INSPECT_PRICE","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMINSPECTPRICE: Inspect Price").
                               setSize(30);
      eng_contact_req_item_blk.addField("INSPECT_TOTAL","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMINSPECTTOTAL: Inspect Total").
                               setSize(30);
      eng_contact_req_item_blk.addField("OWNER_QTY","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMOWNERQTY: Owner Qty").
                               setSize(30);
      eng_contact_req_item_blk.addField("OWNER_PRICE","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMONERPRICE: Owner Price").
                               setSize(30);
      eng_contact_req_item_blk.addField("OWNER_TOTAL","Number" ,"#0.00").
//                               setInsertable().
                               setReadOnly().      
                               setReadOnly().
                               setLabel("ENGCONTACTREQITEMOWNERTOTAL: Owner Total").
                               setSize(30);
      eng_contact_req_item_blk.addField("CONTRACT_CHANGED").
                               setInsertable().  
                               setCheckBox("FALSE,TRUE").    
                               setLabel("ENGCONTACTREQITEMOCONTRACTCHANGED: Contract Changed").
                               setSize(30);     
      eng_contact_req_item_blk.addField("ITEM_NOTE").
                               setInsertable().  
                               setLabel("ENGCONTACTREQITEMITEMNOTE: Note").
                               setSize(30);
      eng_contact_req_item_blk.addField("FULL_PATH").
                               setInsertable().
                               setHidden().  
                               setLabel("ENGCONTACTREQITEMFULLPATH: Full Path").
                               setSize(30);
      eng_contact_req_item_blk.setView("ENG_CONTACT_REQ_ITEM");
      eng_contact_req_item_blk.defineCommand("ENG_CONTACT_REQ_ITEM_API","Modify__");
      eng_contact_req_item_blk.setMasterBlock(headblk);
      eng_contact_req_item_set = eng_contact_req_item_blk.getASPRowSet();
      eng_contact_req_item_bar = mgr.newASPCommandBar(eng_contact_req_item_blk);
      eng_contact_req_item_bar.defineCommand(eng_contact_req_item_bar.OKFIND, "okFindITEM1");
      eng_contact_req_item_bar.defineCommand(eng_contact_req_item_bar.NEWROW, "newRowITEM1");
      eng_contact_req_item_tbl = mgr.newASPTable(eng_contact_req_item_blk);
      eng_contact_req_item_tbl.setTitle("ENGCONTACTREQITEMITEMHEAD1: ChangeDesign");
      eng_contact_req_item_tbl.enableRowSelect();
      eng_contact_req_item_tbl.setWrap();
      eng_contact_req_item_lay = eng_contact_req_item_blk.getASPBlockLayout();
      eng_contact_req_item_lay.setDefaultLayoutMode(eng_contact_req_item_lay.MULTIROW_LAYOUT);



   }



   public void  adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "CHANGEDESIGNDESC: Change Design";
   }


   protected String getTitle()
   {
      return "CHANGEDESIGNTITLE: Change Design";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else 
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }  
      if ((headlay.isSingleLayout() || headlay.isCustomLayout()) && headset.countRows() > 0)
      {
         appendToHTML(eng_contact_req_item_lay.show());
      }

   }
}
