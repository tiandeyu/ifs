/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralOrganization extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralOrganization");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock general_org_pos_blk;
   private ASPRowSet general_org_pos_set;
   private ASPCommandBar general_org_pos_bar;
   private ASPTable general_org_pos_tbl;
   private ASPBlockLayout general_org_pos_lay;

   private ASPBlock general_org_pos_person_blk;
   private ASPRowSet general_org_pos_person_set;
   private ASPCommandBar general_org_pos_person_bar;
   private ASPTable general_org_pos_person_tbl;
   private ASPBlockLayout general_org_pos_person_lay;

   private String org_no;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralOrganization (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
      super.run();

      ASPManager mgr = getASPManager();

      org_no = mgr.readValue("ORG_NO");
      
      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(org_no) )
         okFind();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      
      q.setOrderByClause("ORG_SEQ");
      
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENERALORGANIZATIONNODATA: No data found.");
         headset.clear();
      }
      okFindITEM1();
   }

   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }

   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","GENERAL_ORGANIZATION_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      
      if (headset.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_org_pos_blk);
      q.addWhereCondition("ORG_NO = ?");
      q.addParameter("ORG_NO", headset.getValue("ORG_NO"));
      
      q.setOrderByClause("POS_SEQ");
      
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_org_pos_blk);
      headset.goTo(headrowno);
      okFindITEM2();
   }
   
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM1","GENERAL_ORG_POS_API.New__", general_org_pos_blk);
      cmd.setOption("ACTION", "PREPARE");
      cmd.setParameter("ITEM0_ORG_NO", headset.getValue("ORG_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_org_pos_set.addRow(data);
   }
   
   
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      
      if (general_org_pos_set.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;
      int orgposrowno;

      q = trans.addQuery(general_org_pos_person_blk);
      q.addWhereCondition("ORG_NO = ? AND POS_NO = ?");
      q.addParameter("ORG_NO", general_org_pos_set.getValue("ORG_NO"));
      q.addParameter("POS_NO", general_org_pos_set.getValue("POS_NO"));
      
      q.setOrderByClause("PERSON_SEQ");
      
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      orgposrowno = general_org_pos_set.getCurrentRowNo();
      mgr.querySubmit(trans,general_org_pos_person_blk);
      headset.goTo(headrowno);
      general_org_pos_set.goTo(orgposrowno);
   }
   
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM2","GENERAL_ORG_POS_PERSON_API.New__", general_org_pos_person_blk);
      cmd.setOption("ACTION", "PREPARE");
      cmd.setParameter("ITEM1_ORG_NO", general_org_pos_set.getValue("ORG_NO"));
      cmd.setParameter("ITEM1_POS_NO", general_org_pos_set.getValue("POS_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      general_org_pos_person_set.addRow(data);
   }
   
   public void saveReturnITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      general_org_pos_person_set.changeRow();
      int headrowno = headset.getCurrentRowNo();
      int orgposrowno = general_org_pos_set.getCurrentRowNo();
      mgr.submit(trans);
      general_org_pos_person_set.refreshAllRows();
      headset.goTo(headrowno);
      general_org_pos_set.goTo(orgposrowno);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
      setHidden();
      
      headblk.addField("OBJVERSION").
      setHidden();
      
      headblk.addField("ORG_NO").
      setMandatory().
      setInsertable().
      setUpperCase().
      setReadOnly().
      setLabel("GENERALORGANIZATIONORGNO: Org No").
      setSize(20);
      
      headblk.addField("ORG_DESC").
      setInsertable().
      setLabel("GENERALORGANIZATIONORGDESC: Org Desc").
      setSize(20);
      
      headblk.addField("USED_IN_APPL").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENERALORGANIZATIONUSEDINAPPL: Used In Appl").
      setSize(5);
      
      headblk.addField("SHORT_DESC").
      setInsertable().
      setLabel("GENERALORGANIZATIONSHORTDESC: Short Desc").
      setSize(20);
      
      headblk.addField("ORG_TYPE").
      enumerateValues("General_Org_Type_API").
      setSelectBox().
      setInsertable().
      setLabel("GENERALORGANIZATIONORGTYPE: Org Type").
      setSize(10);
      
      headblk.addField("ORG_TYPE_DB").
      setHidden();
      
      headblk.addField("ORG_SEQ", "Number").
      setInsertable().
      setLabel("GENERALORGANIZATIONORGSEQ: Org Seq").
      setSize(10);
      
      headblk.addField("ORG_SHORTENING").
      setInsertable().
      setLabel("GENERALORGANIZATIONORGSHORTENING: Org Shortening").
      setSize(10);
      
      headblk.addField("INTERNAL_NO").
      setInsertable().
      setLabel("GENERALORGANIZATIONINTERNALNO: Internal No").
      setSize(10);
      
      headblk.addField("PARENT_ORG_NO").
      setInsertable().
      setUpperCase().
      setDynamicLOV("GENERAL_ORGANIZATION").
      // setLOVProperty("WHERE", "ORG_TYPE_DB IN ('PRJ', 'ORG')").
      setLOVProperty("ORDER_BY", "ORG_SEQ").
      setLOVProperty("TREE_PARE_FIELD", "PARENT_ORG_NO").
      setLOVProperty("TREE_DISP_FIELD", "ORG_NO,ORG_DESC,ORG_TYPE,PARENT_ORG_NO").
      setLOVProperty("TREE_TYPE_FIELD", "ORG_TYPE_DB,ORG,DEP").
      setLabel("GENERALORGANIZATIONPARENTORGNO: Parent Org No").
      setSize(20);
      
      headblk.addField("PARENT_ORG_DESC").
      setReadOnly().
      setFunction("GENERAL_ORGANIZATION_API.Get_Org_Desc(:PARENT_ORG_NO)").
      setLabel("GENERALORGANIZATIONPARENTORGDESC: Parent Org Desc").
      setSize(20);
      mgr.getASPField("PARENT_ORG_NO").setValidation("PARENT_ORG_DESC");
      
      headblk.addField("PARENT_DEP_NO").
      setInsertable().
      setUpperCase().
      setDynamicLOV("GENERAL_ORGANIZATION").
      setLOVProperty("WHERE", "ORG_TYPE_DB = 'DEP'").
      setLOVProperty("ORDER_BY", "ORG_SEQ").
      setLabel("GENERALORGANIZATIONPARENTDEPNO: Parent Dep No").
      setSize(20);
      
      headblk.addField("PARENT_DEP_DESC").
      setReadOnly().
      setFunction("GENERAL_ORGANIZATION_API.Get_Org_Desc(:PARENT_DEP_NO)").
      setLabel("GENERALORGANIZATIONPARENTDEPDESC: Parent Dep Desc").
      setSize(20);
      mgr.getASPField("PARENT_DEP_NO").setValidation("PARENT_DEP_DESC");
      
      headblk.addField("PROJ_NO").
      setDynamicLOV("GENERAL_PROJECT").
      setInsertable().
      setSize(20); 
       
      headblk.addField("SUPPLIER_ID").
      setDynamicLOV("SUPPLIER_INFO").
      setLabel("GENERALORGANIZATIONSUPPLIERID: Supplier Id").
      setSize(20);
      headblk.addField("SUPPLIER_NAME").
      setReadOnly().
      setFunction("supplier_info_api.Get_Name( :SUPPLIER_ID)").
      setLabel("GENERALORGANIZATIONSUPPLIERNAME: Supplier Name").
      setSize(20);
      mgr.getASPField("SUPPLIER_ID").setValidation("SUPPLIER_NAME");
      
      headblk.addField("TYPE_ID").
      setDynamicLOV("GENERAL_ZONE_TYPE").
      setLabel("GENERALORGANIZATIONTYPEID: Type Id").
      setSize(20);
      headblk.addField("TYPE_NAME").
      setReadOnly().
      setFunction("GENERAL_ZONE_TYPE_API.GET_TYPE_NAME( :TYPE_ID)").
      setLabel("GENERALORGANIZATIONTYPENAME: Type Name").
      setSize(20);
      mgr.getASPField("TYPE_ID").setValidation("TYPE_NAME");
      
      headblk.addField("ORG_LEVEL").
      setInsertable().
      setUpperCase().
      setDynamicLOV("GENERAL_ORG_LEVEL").
      setLOVProperty("ORDER_BY", "LEVEL_SEQ").
      setLOVProperty("MULTICHOICE", "true").
      setLabel("GENERALORGANIZATIONORGLEVEL: Org Level").
      setSize(20);
      
      headblk.addField("ORG_LEVEL_DESC").
      setReadOnly().
      setFunction("General_Org_Level_API.Get_Level_Desc(:ORG_LEVEL)").
      setLabel("GENERALORGANIZATIONORGLEVELDESC: Org Level Desc").
      setSize(20);
      mgr.getASPField("ORG_LEVEL").setValidation("ORG_LEVEL_DESC");
      
      headblk.addField("NOTE").
      setInsertable().
//      setDynamicLOV("DOC_ISSUE_CONDI_TREE").
//      setLOVProperty("ORDER_BY", "FULL_PATH").
//      setLOVProperty("TREE_PARE_FIELD", "ITEM_PARENT").
//      setLOVProperty("TREE_DISP_FIELD", "ITEM_CODE,ITEM_NAME").
      setLabel("GENERALORGANIZATIONNOTE: Note").
      // setClientFunc(" style=\"ime-mode:disabled\" onkeypress=\"event.returnValue = false;\" onpaste=\"return false;\" ").
      setSize(50);
      
      headblk.setView("GENERAL_ORGANIZATION");
      headblk.defineCommand("GENERAL_ORGANIZATION_API", "New__,Modify__,Remove__");
      headblk.enableFuncFieldsNonSelect();
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("GENERALORGANIZATIONTBLHEAD: General Organizations");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.SINGLE_LAYOUT);
      
      headlay.setSimple("PARENT_ORG_DESC");
      headlay.setSimple("PARENT_DEP_DESC");
      headlay.setSimple("ORG_LEVEL_DESC");
      headlay.setSimple("TYPE_NAME");
      headlay.setSimple("SUPPLIER_NAME");

      //
      // General Organization Position
      //

      general_org_pos_blk = mgr.newASPBlock("ITEM1");
      general_org_pos_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_org_pos_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_org_pos_blk.addField("ITEM0_ORG_NO").
      setDbName("ORG_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALORGPOSITEM0ORGNO: Org No").
      setSize(50);
      
      general_org_pos_blk.addField("POS_NO").
      setMandatory().
      setInsertable().
      setUpperCase().
      setDynamicLOV("GENERAL_POSITION").
      setLOVProperty("ORDER_BY", "POS_SEQ").
      setLabel("GENERALORGPOSPOSNO: Pos No").
      setSize(20);
      
      general_org_pos_blk.addField("POS_DESC").
      setReadOnly().
      setFunction("General_Position_API.Get_Pos_Desc(:POS_NO)").
      setLabel("GENERALORGPOSPOSDESC: Pos Desc").
      setSize(20);
      mgr.getASPField("POS_NO").setValidation("POS_DESC");
      
      general_org_pos_blk.addField("PARENT_POS_NO").
      setInsertable().
      setUpperCase().
      setDynamicLOV("GENERAL_ORG_POS", "ITEM0_ORG_NO").
      setLOVProperty("ORDER_BY", "POS_SEQ").
      setLabel("GENERALORGPOSPARENTPOSNO: Parent Pos No").
      setSize(20);
      
      general_org_pos_blk.addField("PARENT_POS_DESC").
      setReadOnly().
      setFunction("General_Position_API.Get_Pos_Desc(:PARENT_POS_NO)").
      setLabel("GENERALORGPOSPARENTPOSDESC: Parent Pos Desc").
      setSize(20);
      mgr.getASPField("PARENT_POS_NO").setValidation("PARENT_POS_DESC");
      
      general_org_pos_blk.addField("POS_SEQ", "Number").
      setInsertable().
      setLabel("GENERALORGPOSPOSSEQ: Pos Seq").
      setSize(10);
      
      general_org_pos_blk.addField("ITEM0_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALORGPOSITEM0NOTE: Note").
      setSize(50);
      
      general_org_pos_blk.setView("GENERAL_ORG_POS");
      general_org_pos_blk.defineCommand("GENERAL_ORG_POS_API", "New__,Modify__,Remove__");
      general_org_pos_blk.setMasterBlock(headblk);
      general_org_pos_set = general_org_pos_blk.getASPRowSet();
      general_org_pos_bar = mgr.newASPCommandBar(general_org_pos_blk);
      general_org_pos_bar.defineCommand(general_org_pos_bar.OKFIND, "okFindITEM1");
      general_org_pos_bar.defineCommand(general_org_pos_bar.NEWROW, "newRowITEM1");
      general_org_pos_tbl = mgr.newASPTable(general_org_pos_blk);
      general_org_pos_tbl.setTitle("GENERALORGPOSITEMHEAD1: GeneralOrgPos");
      general_org_pos_tbl.enableRowSelect();
      general_org_pos_tbl.setWrap();
      general_org_pos_lay = general_org_pos_blk.getASPBlockLayout();
      general_org_pos_lay.setDefaultLayoutMode(general_org_pos_lay.MULTIROW_LAYOUT);
      general_org_pos_lay.setSimple("POS_DESC");
      general_org_pos_lay.setSimple("PARENT_POS_DESC");
      
      //
      // General Organization Position Persons
      //
      
      general_org_pos_person_blk = mgr.newASPBlock("ITEM2");
      general_org_pos_person_blk.addField("ITEM1_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_org_pos_person_blk.addField("ITEM1_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_org_pos_person_blk.addField("ITEM1_ORG_NO").
      setDbName("ORG_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALORGPOSPERSONITEM1ORGNO: Org No").
      setSize(20);
      
      general_org_pos_person_blk.addField("ITEM1_POS_NO").
      setDbName("POS_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALORGPOSPERSONITEM1POSNO: Pos No").
      setSize(20);
      
      general_org_pos_person_blk.addField("PERSON_ID").
      setMandatory().
      setInsertable().
      setUpperCase().
      setDynamicLOV("PERSON_INFO_LOV").
      setLOVProperty("WHERE", "USER_ID IS NOT NULL").
      setLabel("GENERALORGPOSPERSONPERSONID: Person Id").
      setSize(20);
      
      general_org_pos_person_blk.addField("PERSON_NAME").
      setReadOnly().
      setFunction("Person_Info_API.Get_Name(:PERSON_ID)").
      setLabel("GENERALORGPOSPERSONPERSONNAME: Person Name").
      setSize(20);
      mgr.getASPField("PERSON_ID").setValidation("PERSON_NAME");
      
      general_org_pos_person_blk.addField("MAIN_POS").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENERALORGPOSPERSONMAINPOS: Main Pos").
      setSize(5);
      
      general_org_pos_person_blk.addField("VALID_FROM", "Date").
      setInsertable().
      setLabel("GENERALORGPOSPERSONVALIDFROM: Valid From").
      setSize(10);
      
      general_org_pos_person_blk.addField("VALID_DUE","Date").
      setInsertable().
      setLabel("GENERALORGPOSPERSONVALIDDUE: Valid Due").
      setSize(10);
      
      general_org_pos_person_blk.addField("PERSON_SEQ", "Number").
      setInsertable().
      setLabel("GENERALORGPOSPERSONPERSONSEQ: Person Seq").
      setSize(10);
      
      general_org_pos_person_blk.addField("ITEM1_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALORGPOSPERSONITEM1NOTE: Note").
      setSize(50);
      
      general_org_pos_person_blk.setView("GENERAL_ORG_POS_PERSON");
      general_org_pos_person_blk.defineCommand("GENERAL_ORG_POS_PERSON_API", "New__,Modify__,Remove__");
      general_org_pos_person_blk.setMasterBlock(general_org_pos_blk);
      general_org_pos_person_set = general_org_pos_person_blk.getASPRowSet();
      general_org_pos_person_bar = mgr.newASPCommandBar(general_org_pos_person_blk);
      general_org_pos_person_bar.defineCommand(general_org_pos_person_bar.OKFIND, "okFindITEM2");
      general_org_pos_person_bar.defineCommand(general_org_pos_person_bar.NEWROW, "newRowITEM2");
      general_org_pos_person_bar.defineCommand(general_org_pos_person_bar.SAVERETURN, "saveReturnITEM2");
      general_org_pos_person_tbl = mgr.newASPTable(general_org_pos_person_blk);
      general_org_pos_person_tbl.setTitle("GENERALORGPOSPERSONITEMHEAD2: GeneralOrgPosPerson");
      general_org_pos_person_tbl.enableRowSelect();
      general_org_pos_person_tbl.setWrap();
      general_org_pos_person_lay = general_org_pos_person_blk.getASPBlockLayout();
      general_org_pos_person_lay.setDefaultLayoutMode(general_org_pos_person_lay.MULTIROW_LAYOUT);
      general_org_pos_person_lay.setSimple("PERSON_NAME");

   }


   public void adjust() throws FndException
   {
      ASPManager mgr = getASPManager();
      super.adjust();
      
   /* modified by luqingwei, 2014-12-11 09:55:44     
    * if (headset.countRows() > 0 && headlay.isSingleLayout())
      {
         if ("ORG".equals(headset.getValue("ORG_TYPE_DB")))
         {
            general_org_pos_bar.disableCommand(general_org_pos_bar.NEWROW);
            general_org_pos_bar.disableCommand(general_org_pos_bar.DUPLICATEROW);
         }
      }*/
      
      if (!mgr.isEmpty(org_no))
      {
         headbar.disableCommand(headbar.FIND);
      }
      
      if (headblk.getFuncFieldsNonSelect())
         setFuncFieldValue(headblk);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENERALORGANIZATIONDESC: General Organization";
   }


   protected String getTitle()
   {
      return getDescription();
   }

   protected void printContents() throws FndException
   {
      super.printContents();

      ASPManager mgr = getASPManager();
      if (!headlay.isVisible())
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
      
      appendToHTML(headlay.show());
      printHiddenField("ORG_NO", org_no);
      
      if (headset.countRows() > 0 && (headlay.isSingleLayout() || headlay.isCustomLayout()))
      {
         if (!general_org_pos_lay.isVisible())
            general_org_pos_lay.setLayoutMode(general_org_pos_lay.CUSTOM_LAYOUT);
         appendToHTML(general_org_pos_lay.show());
         
         if (general_org_pos_set.countRows() > 0 && (general_org_pos_lay.isSingleLayout() || general_org_pos_lay.isCustomLayout()))
            appendToHTML(general_org_pos_person_lay.show());
      }
   }
}
