/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralBasicData extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralBasicData");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock general_project_blk;
   private ASPRowSet general_project_set;
   private ASPCommandBar general_project_bar;
   private ASPTable general_project_tbl;
   private ASPBlockLayout general_project_lay;

   private ASPBlock general_zone_blk;
   private ASPRowSet general_zone_set;
   private ASPCommandBar general_zone_bar;
   private ASPTable general_zone_tbl;
   private ASPBlockLayout general_zone_lay;
   
   private ASPBlock general_zone_creator_code_blk;
   private ASPRowSet general_zone_creator_code_set;
   private ASPCommandBar general_zone_creator_code_bar;
   private ASPTable general_zone_creator_code_tbl;
   private ASPBlockLayout general_zone_creator_code_lay;

   private ASPBlock general_mach_group_blk;
   private ASPRowSet general_mach_group_set;
   private ASPCommandBar general_mach_group_bar;
   private ASPTable general_mach_group_tbl;
   private ASPBlockLayout general_mach_group_lay;

   private ASPBlock general_specialty_blk;
   private ASPRowSet general_specialty_set;
   private ASPCommandBar general_specialty_bar;
   private ASPTable general_specialty_tbl;
   private ASPBlockLayout general_specialty_lay;

   private ASPBlock general_component_type_blk;
   private ASPRowSet general_component_type_set;
   private ASPCommandBar general_component_type_bar;
   private ASPTable general_component_type_tbl;
   private ASPBlockLayout general_component_type_lay;

   private ASPBlock general_structure_blk;
   private ASPRowSet general_structure_set;
   private ASPCommandBar general_structure_bar;
   private ASPTable general_structure_tbl;
   private ASPBlockLayout general_structure_lay;

   private ASPBlock general_elevation_blk;
   private ASPRowSet general_elevation_set;
   private ASPCommandBar general_elevation_bar;
   private ASPTable general_elevation_tbl;
   private ASPBlockLayout general_elevation_lay;

   private ASPBlock general_area_blk;
   private ASPRowSet general_area_set;
   private ASPCommandBar general_area_bar;
   private ASPTable general_area_tbl;
   private ASPBlockLayout general_area_lay;
   
   private ASPBlock general_system_blk;
   private ASPRowSet general_system_set;
   private ASPCommandBar general_system_bar;
   private ASPTable general_system_tbl;
   private ASPBlockLayout general_system_lay;

   private ASPBlock general_component_blk;
   private ASPRowSet general_component_set;
   private ASPCommandBar general_component_bar;
   private ASPTable general_component_tbl;
   private ASPBlockLayout general_component_lay;

   private ASPBlock general_totality_blk;
   private ASPRowSet general_totality_set;
   private ASPCommandBar general_totality_bar;
   private ASPTable general_totality_tbl;
   private ASPBlockLayout general_totality_lay;

   private ASPBlock general_particular_blk;
   private ASPRowSet general_particular_set;
   private ASPCommandBar general_particular_bar;
   private ASPTable general_particular_tbl;
   private ASPBlockLayout general_particular_lay;

   private ASPBlock general_room_blk;
   private ASPRowSet general_room_set;
   private ASPCommandBar general_room_bar;
   private ASPTable general_room_tbl;
   private ASPBlockLayout general_room_lay;

   private ASPBlock general_lot_blk;
   private ASPRowSet general_lot_set;
   private ASPCommandBar general_lot_bar;
   private ASPTable general_lot_tbl;
   private ASPBlockLayout general_lot_lay;

   private ASPBlock general_quality_grade_blk;
   private ASPRowSet general_quality_grade_set;
   private ASPCommandBar general_quality_grade_bar;
   private ASPTable general_quality_grade_tbl;
   private ASPBlockLayout general_quality_grade_lay;
   
   
   private ASPBlock general_factory_blk;
   private ASPRowSet general_factory_set;
   private ASPCommandBar general_factory_bar;
   private ASPTable general_factory_tbl;
   private ASPBlockLayout general_factory_lay;

   private ASPBlock general_level_blk;
   private ASPRowSet general_level_set;
   private ASPCommandBar general_level_bar;
   private ASPTable general_level_tbl;
   private ASPBlockLayout general_level_lay;

   private ASPBlock general_material_list_blk;
   private ASPRowSet general_material_list_set;
   private ASPCommandBar general_material_list_bar;
   private ASPTable general_material_list_tbl;
   private ASPBlockLayout general_material_list_lay;

   private ASPTabContainer tabs;
   private ASPTabContainer tabs1;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralBasicData (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else
         okFindITEM1();
      tabs.saveActiveTab();
      tabs1.saveActiveTab();
      adjust();
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_blk);
      q.includeMeta("ALL");
      mgr.querySubmit(trans,general_project_blk);
   }
   
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","GENERAL_PROJECT_API.New__",general_project_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_project_set.addRow(data);
   }
   
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_zone_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_zone_blk);
      okFindCreator();
   }
   
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","GENERAL_ZONE_API.New__",general_zone_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      general_zone_set.addRow(data);
   }
   
   public void okFindCreator()
   {
      ASPManager mgr = getASPManager();
      
      if (general_zone_set.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_zone_creator_code_blk);
      q.addWhereCondition("ZONE_NO = ?");
      q.addParameter("CREATOR_ZONE_NO", general_zone_set.getValue("ZONE_NO"));
      q.includeMeta("ALL");
      headrowno = general_zone_set.getCurrentRowNo();
      mgr.querySubmit(trans,general_zone_creator_code_blk);
      general_zone_set.goTo(headrowno);
   }
   
   public void newRowCreator()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM1","GENERAL_ZONE_CREATOR_CODE_API.New__", general_zone_creator_code_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("CREATOR_ZONE_NO", general_zone_set.getValue("ZONE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_zone_creator_code_set.addRow(data);
   }
   
   public void okFindITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_mach_group_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_mach_group_blk);
      
   }
   public void newRowITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM3","GENERAL_MACH_GROUP_API.New__",general_mach_group_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      general_mach_group_set.addRow(data);
   }
   public void okFindITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_specialty_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_specialty_blk);
      
   }
   public void newRowITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM4","GENERAL_SPECIALTY_API.New__",general_specialty_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM4/DATA");
      general_specialty_set.addRow(data);
   }
   public void okFindITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_component_type_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_component_type_blk);
      
   }
   public void newRowITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM5","GENERAL_COMPONENT_TYPE_API.New__",general_component_type_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM5/DATA");
      general_component_type_set.addRow(data);
   }
   
   public void okFindITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_structure_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_structure_blk);
      okFindELEV();
      okFindAREA();
   }
   
   public void newRowITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM6","GENERAL_STRUCTURE_API.New__",general_structure_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM6/DATA");
      general_structure_set.addRow(data);
   }
   
   public void okFindELEV()
   {
      ASPManager mgr = getASPManager();
      
      if (general_structure_set.countRows() == 0) return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int structruerowno;

      q = trans.addQuery(general_elevation_blk);
      q.addWhereCondition("PROJ_NO = ? AND STRUCTURE_NO = ?");
      q.addParameter("PROJ_NO", general_structure_set.getValue("PROJ_NO"));
      q.addParameter("STRUCTURE_NO", general_structure_set.getValue("STRUCTURE_NO"));
      q.includeMeta("ALL");
      structruerowno = general_structure_set.getCurrentRowNo();
      mgr.querySubmit(trans,general_elevation_blk);
      general_structure_set.goTo(structruerowno);
   }
   
   public void newRowELEV()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ELEV","GENERAL_ELEVATION_API.New__",general_elevation_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ELEV_PROJ_NO", general_structure_set.getValue("PROJ_NO"));
      cmd.setParameter("ELEV_STRUCTURE_NO", general_structure_set.getValue("STRUCTURE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ELEV/DATA");
      general_elevation_set.addRow(data);
   }
   
   public void okFindAREA()
   {
      ASPManager mgr = getASPManager();
      
      if (general_structure_set.countRows() == 0) return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int structruerowno;

      q = trans.addQuery(general_area_blk);
      q.addWhereCondition("PROJ_NO = ? AND STRUCTURE_NO = ?");
      q.addParameter("PROJ_NO", general_structure_set.getValue("PROJ_NO"));
      q.addParameter("STRUCTURE_NO", general_structure_set.getValue("STRUCTURE_NO"));
      q.includeMeta("ALL");
      structruerowno = general_structure_set.getCurrentRowNo();
      mgr.querySubmit(trans,general_area_blk);
      general_structure_set.goTo(structruerowno);
   }
   
   public void newRowAREA()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("AREA","GENERAL_AREA_API.New__",general_area_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("AREA_PROJ_NO", general_structure_set.getValue("PROJ_NO"));
      cmd.setParameter("AREA_STRUCTURE_NO", general_structure_set.getValue("STRUCTURE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("AREA/DATA");
      general_area_set.addRow(data);
   }
   
   public void okFindITEM7()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_system_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_system_blk);
      
   }
   public void newRowITEM7()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM7","GENERAL_SYSTEM_API.New__",general_system_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM7/DATA");
      general_system_set.addRow(data);
   }
   public void okFindITEM8()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_component_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_component_blk);
      
   }
   public void newRowITEM8()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM8","GENERAL_COMPONENT_API.New__",general_component_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM8/DATA");
      general_component_set.addRow(data);
   }
   public void okFindITEM9()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_totality_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_totality_blk);
      
   }
   public void newRowITEM9()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM9","GENERAL_TOTALITY_API.New__",general_totality_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM9/DATA");
      general_totality_set.addRow(data);
   }
   public void okFindITEM10()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_particular_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_particular_blk);
      
   }
   public void newRowITEM10()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM10","GENERAL_PARTICULAR_API.New__",general_particular_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM10/DATA");
      general_particular_set.addRow(data);
   }
   public void okFindITEM11()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_room_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_room_blk);
      
   }
   public void newRowITEM11()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM11","GENERAL_ROOM_API.New__",general_room_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM11/DATA");
      general_room_set.addRow(data);
   }
   public void okFindITEM12()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_lot_blk);
      
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_lot_blk);
      
   }
   public void newRowITEM12()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM12","GENERAL_LOT_API.New__",general_lot_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM12/DATA");
      general_lot_set.addRow(data);
   }
   public void okFindITEM13()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_quality_grade_blk);
      q.includeMeta("ALL");
      
      mgr.querySubmit(trans,general_quality_grade_blk);
      
   }
   public void newRowITEM13()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM13","GENERAL_QUALITY_GRADE_API.New__",general_quality_grade_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM13/DATA");
      general_quality_grade_set.addRow(data);
   }
   
   public void okFindITEM14()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_factory_blk);
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      q.includeMeta("ALL");
      mgr.querySubmit(trans,general_factory_blk);
   }
   
   public void newRowITEM14()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","GENERAL_FACTORY_API.New__",general_factory_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_factory_set.addRow(data);
   }
   public void okFindITEM15()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_level_blk);
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      q.includeMeta("ALL");
      mgr.querySubmit(trans,general_level_blk);
   }
   public void newRowITEM15()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","GENERAL_LEVEL_API.New__",general_level_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      general_level_set.addRow(data);
   }
   public void okFindITEM16()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_material_list_blk);
      q.addWhereCondition("PROJ_NO = Person_Project_API.Get_Current_Def_Proj");
      q.includeMeta("ALL");
      mgr.querySubmit(trans,general_material_list_blk);
   }
   public void newRowITEM16()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM3","GENERAL_MATERIAL_LIST_API.New__",general_material_list_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      general_material_list_set.addRow(data);
   }
   

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

      disableConfiguration();
      
      headblk = mgr.newASPBlock("MAIN");
      headbar = mgr.newASPCommandBar(headblk);

      headbar.disableCommand(headbar.FIND);
      headbar.disableCommand(headbar.BACK);
      headbar.disableCommand(headbar.FORWARD);
      headbar.disableCommand(headbar.BACKWARD);
      headbar.disableCommand(headbar.NEWROW);

      headbar.addCustomCommand("activateProject", mgr.translate("GENBAWGENERALPROJECT: Project"));
      headbar.addCustomCommand("activateZone", mgr.translate("GENBAWGENERALZONE: Zone"));
      headbar.addCustomCommand("activateMachGrp", mgr.translate("GENBAWGENERALMACHGRP: Mach Grp"));
      headbar.addCustomCommand("activateSpecialty", mgr.translate("GENBAWGENERALSPECIALTY: Specialty"));
      headbar.addCustomCommand("activateCompTpye", mgr.translate("GENBAWGENERALCOMPTPYE: Comp Type"));
      headbar.addCustomCommand("activateStructure", mgr.translate("GENBAWGENERALSTRUCTURE: Structure"));
      headbar.addCustomCommand("activateSystem", mgr.translate("GENBAWGENERALSYSTEM: System"));
      headbar.addCustomCommand("activateComponent", mgr.translate("GENBAWGENERALCOMPONENT: Component"));
      headbar.addCustomCommand("activateTotality", mgr.translate("GENBAWGENERALTOTALITY: Totality"));
      headbar.addCustomCommand("activateParticular", mgr.translate("GENBAWGENERALPARTICULAR: Particular"));
      headbar.addCustomCommand("activateRoom", mgr.translate("GENBAWGENERALROOM: Room"));
      headbar.addCustomCommand("activateLot", mgr.translate("GENBAWGENERALLOT: Lot"));
      headbar.addCustomCommand("activateQualGrade", mgr.translate("GENBAWGENERALQUALGRADE: Qual Grade"));
      headbar.addCustomCommand("activateFactory", mgr.translate("GENBAWGENERALFACTORY: Factory"));
      headbar.addCustomCommand("activateLevel", mgr.translate("GENBAWGENERALLEVEL: Level"));
      headbar.addCustomCommand("activateMaterialList", mgr.translate("GENBAWGENERALMATERIALLIST: Material List"));
      
      headlay = headblk.getASPBlockLayout();
      headlay.setDialogColumns(2);
      headlay.setDefaultLayoutMode(headlay.SINGLE_LAYOUT);

      //
      // General Project
      // 
      general_project_blk = mgr.newASPBlock("ITEM1");
      general_project_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      general_project_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_project_blk.addField("PROJ_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALPROJECTPROJNO: Proj No").
      setSize(20);
      general_project_blk.addField("PROJ_DESC").
      setInsertable().
      setLabel("GENERALPROJECTPROJDESC: Proj Desc").
      setSize(50);
      general_project_blk.addField("NOTE").
      setInsertable().
      setLabel("GENERALPROJECTNOTE: Note").
      setSize(50);
      general_project_blk.setView("GENERAL_PROJECT");
      general_project_blk.defineCommand("GENERAL_PROJECT_API","New__,Modify__,Remove__");
      general_project_set = general_project_blk.getASPRowSet();
      general_project_bar = mgr.newASPCommandBar(general_project_blk);
      general_project_bar.defineCommand(general_project_bar.OKFIND, "okFindITEM1");
      general_project_bar.defineCommand(general_project_bar.NEWROW, "newRowITEM1");
      general_project_tbl = mgr.newASPTable(general_project_blk);
      general_project_tbl.setTitle("GENERALPROJECTITEMHEAD1: GeneralProject");
      general_project_tbl.enableRowSelect();
      general_project_tbl.setWrap();
      general_project_lay = general_project_blk.getASPBlockLayout();
      general_project_lay.setDefaultLayoutMode(general_project_lay.MULTIROW_LAYOUT);
      
      //
      // General Zone
      //
      
      general_zone_blk = mgr.newASPBlock("ITEM2");
      general_zone_blk.addField("ITEM1_OBJID").
      setHidden().
      setDbName("OBJID");
      general_zone_blk.addField("ITEM1_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_zone_blk.addField("ZONE_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALZONEZONENO: Zone No").
      setSize(20);
      
      general_zone_blk.addField("ZONE_DESC").
      setInsertable().
      setLabel("GENERALZONEZONEDESC: Zone Desc").
      setSize(50);
      
      general_zone_blk.addField("COMM_CODE").
      setInsertable().
      setLabel("GENERALZONECOMMCODE: Comm Code").
      setSize(20);
      
      general_zone_blk.addField("ITEM1_PROJ_NO").
      setDbName("PROJ_NO").
      setInsertable().
      setReadOnly().
      setLabel("GENERALZONEITEM1PROJNO: Proj No").
      setSize(20);
      
      general_zone_blk.addField("USED_IN_APPL").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENERALZONEUSEDINAPPL: Used In Application").
      setSize(5);
      
      general_zone_blk.addField("SHORT_DESC").
      setInsertable().
      setLabel("GENERALZONESHORTDESC: Short Desc").
      setSize(20);
      
      general_zone_blk.addField("ITEM1_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALZONEITEM1NOTE: Note").
      setSize(50);
      
      general_zone_blk.setView("GENERAL_ZONE");
      general_zone_blk.defineCommand("GENERAL_ZONE_API","New__,Modify__,Remove__");
      general_zone_set = general_zone_blk.getASPRowSet();
      general_zone_bar = mgr.newASPCommandBar(general_zone_blk);
      general_zone_bar.defineCommand(general_zone_bar.OKFIND, "okFindITEM2");
      general_zone_bar.defineCommand(general_zone_bar.NEWROW, "newRowITEM2");
      general_zone_tbl = mgr.newASPTable(general_zone_blk);
      general_zone_tbl.setTitle("GENERALZONEITEMHEAD2: GeneralZone");
      general_zone_tbl.enableRowSelect();
      general_zone_tbl.setWrap();
      general_zone_lay = general_zone_blk.getASPBlockLayout();
      general_zone_lay.setDefaultLayoutMode(general_zone_lay.MULTIROW_LAYOUT);
      
      //
      // General Zone AP1000 Creator Code
      //
      
      general_zone_creator_code_blk = mgr.newASPBlock("CREATOR");
      general_zone_creator_code_blk.addField("CREATOR_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_zone_creator_code_blk.addField("CREATOR_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_zone_creator_code_blk.addField("CREATOR_ZONE_NO").
      setDbName("ZONE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALZONECREATORCODEITEM0ZONENO: Zone No").
      setSize(20);
      
      general_zone_creator_code_blk.addField("PROJ_TYPE").
      enumerateValues("General_Project_Type_API").
      setSelectBox().
      setMandatory().
      setInsertable().
      setLabel("GENERALZONECREATORCODEPROJTYPE: Proj Type").
      setSize(10);
      
      general_zone_creator_code_blk.addField("CREATOR_CODE").
      setInsertable().
      setLabel("GENERALZONECREATORCODECREATORCODE: Creator Code").
      setSize(10);
      
      general_zone_creator_code_blk.setView("GENERAL_ZONE_CREATOR_CODE");
      general_zone_creator_code_blk.defineCommand("GENERAL_ZONE_CREATOR_CODE_API","New__,Modify__,Remove__");
      general_zone_creator_code_blk.setMasterBlock(general_zone_blk);
      general_zone_creator_code_set = general_zone_creator_code_blk.getASPRowSet();
      general_zone_creator_code_bar = mgr.newASPCommandBar(general_zone_creator_code_blk);
      general_zone_creator_code_bar.defineCommand(general_zone_creator_code_bar.OKFIND, "okFindCreator");
      general_zone_creator_code_bar.defineCommand(general_zone_creator_code_bar.NEWROW, "newRowCreator");
      general_zone_creator_code_tbl = mgr.newASPTable(general_zone_creator_code_blk);
      general_zone_creator_code_tbl.setTitle("GENERALZONECREATORCODEITEMHEAD1: GeneralZoneCreatorCode");
      general_zone_creator_code_tbl.enableRowSelect();
      general_zone_creator_code_tbl.setWrap();
      general_zone_creator_code_lay = general_zone_creator_code_blk.getASPBlockLayout();
      general_zone_creator_code_lay.setDefaultLayoutMode(general_zone_creator_code_lay.MULTIROW_LAYOUT);
      
      //
      // General Machine Group
      // 
      
      general_mach_group_blk = mgr.newASPBlock("ITEM3");
      general_mach_group_blk.addField("ITEM2_OBJID").
      setHidden().
      setDbName("OBJID");
      general_mach_group_blk.addField("ITEM2_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_mach_group_blk.addField("MACH_GRP_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALMACHGROUPMACHGRPNO: Mach Grp No").
      setSize(20);
      general_mach_group_blk.addField("MACH_GRP_DESC").
      setMandatory().
      setInsertable().
      setLabel("GENERALMACHGROUPMACHGRPDESC: Mach Grp Desc").
      setSize(50);
      general_mach_group_blk.addField("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALMACHGROUPTRANSLATEDESC: Translate Desc").
      setSize(50);
      general_mach_group_blk.addField("ITEM2_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALMACHGROUPITEM2NOTE: Note").
      setSize(50);
      general_mach_group_blk.setView("GENERAL_MACH_GROUP");
      general_mach_group_blk.defineCommand("GENERAL_MACH_GROUP_API","New__,Modify__,Remove__");
      general_mach_group_set = general_mach_group_blk.getASPRowSet();
      general_mach_group_bar = mgr.newASPCommandBar(general_mach_group_blk);
      general_mach_group_bar.defineCommand(general_mach_group_bar.OKFIND, "okFindITEM3");
      general_mach_group_bar.defineCommand(general_mach_group_bar.NEWROW, "newRowITEM3");
      general_mach_group_tbl = mgr.newASPTable(general_mach_group_blk);
      general_mach_group_tbl.setTitle("GENERALMACHGROUPITEMHEAD3: GeneralMachGroup");
      general_mach_group_tbl.enableRowSelect();
      general_mach_group_tbl.setWrap();
      general_mach_group_lay = general_mach_group_blk.getASPBlockLayout();
      general_mach_group_lay.setDefaultLayoutMode(general_mach_group_lay.MULTIROW_LAYOUT);
      
      //
      // General Specialty
      //
      
      general_specialty_blk = mgr.newASPBlock("ITEM4");
      general_specialty_blk.addField("ITEM3_OBJID").
      setHidden().
      setDbName("OBJID");
      general_specialty_blk.addField("ITEM3_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_specialty_blk.addField("ITEM3_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_specialty_blk.addField("SPECIALTY_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALSPECIALTYSPECIALTYNO: Specialty No").
      setSize(20);
      general_specialty_blk.addField("SPECIALTY_DESC").
      setInsertable().
      setLabel("GENERALSPECIALTYSPECIALTYDESC: Specialty Desc").
      setSize(50);
      general_specialty_blk.addField("ITEM3_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALSPECIALTYITEM3TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_specialty_blk.addField("ITEM3_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALSPECIALTYITEM3NOTE: Note").
      setSize(50);
      general_specialty_blk.setView("GENERAL_SPECIALTY");
      general_specialty_blk.defineCommand("GENERAL_SPECIALTY_API","New__,Modify__,Remove__");
      general_specialty_set = general_specialty_blk.getASPRowSet();
      general_specialty_bar = mgr.newASPCommandBar(general_specialty_blk);
      general_specialty_bar.defineCommand(general_specialty_bar.OKFIND, "okFindITEM4");
      general_specialty_bar.defineCommand(general_specialty_bar.NEWROW, "newRowITEM4");
      general_specialty_tbl = mgr.newASPTable(general_specialty_blk);
      general_specialty_tbl.setTitle("GENERALSPECIALTYITEMHEAD4: GeneralSpecialty");
      general_specialty_tbl.enableRowSelect();
      general_specialty_tbl.setWrap();
      general_specialty_lay = general_specialty_blk.getASPBlockLayout();
      general_specialty_lay.setDefaultLayoutMode(general_specialty_lay.MULTIROW_LAYOUT);
      
      //
      // General Component Type
      //
      
      general_component_type_blk = mgr.newASPBlock("ITEM5");
      general_component_type_blk.addField("ITEM4_OBJID").
      setHidden().
      setDbName("OBJID");
      general_component_type_blk.addField("ITEM4_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_component_type_blk.addField("ITEM4_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_component_type_blk.addField("COMPONENT_TYPE").
      setMandatory().
      setInsertable().
      setLabel("GENERALCOMPONENTTYPECOMPONENTTYPE: Component Type").
      setSize(20);
      general_component_type_blk.addField("COMPONENT_TYPE_DESC").
      setInsertable().
      setLabel("GENERALCOMPONENTTYPECOMPONENTTYPEDESC: Component Type Desc").
      setSize(50);
      general_component_type_blk.addField("ITEM4_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALCOMPONENTTYPEITEM4TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_component_type_blk.addField("ITEM4_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALCOMPONENTTYPEITEM4NOTE: Note").
      setSize(50);
      general_component_type_blk.setView("GENERAL_COMPONENT_TYPE");
      general_component_type_blk.defineCommand("GENERAL_COMPONENT_TYPE_API","New__,Modify__,Remove__");
      general_component_type_set = general_component_type_blk.getASPRowSet();
      general_component_type_bar = mgr.newASPCommandBar(general_component_type_blk);
      general_component_type_bar.defineCommand(general_component_type_bar.OKFIND, "okFindITEM5");
      general_component_type_bar.defineCommand(general_component_type_bar.NEWROW, "newRowITEM5");
      general_component_type_tbl = mgr.newASPTable(general_component_type_blk);
      general_component_type_tbl.setTitle("GENERALCOMPONENTTYPEITEMHEAD5: GeneralComponentType");
      general_component_type_tbl.enableRowSelect();
      general_component_type_tbl.setWrap();
      general_component_type_lay = general_component_type_blk.getASPBlockLayout();
      general_component_type_lay.setDefaultLayoutMode(general_component_type_lay.MULTIROW_LAYOUT);
      
      //
      // General Structure
      //
      
      general_structure_blk = mgr.newASPBlock("ITEM6");
      general_structure_blk.addField("ITEM5_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_structure_blk.addField("ITEM5_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_structure_blk.addField("ITEM5_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_structure_blk.addField("STRUCTURE_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALSTRUCTURESTRUCTURENO: Structure No").
      setSize(20);
      
      general_structure_blk.addField("STRUCTURE_DESC").
      setInsertable().
      setLabel("GENERALSTRUCTURESTRUCTUREDESC: Structure Desc").
      setSize(50);
      
      general_structure_blk.addField("ITEM5_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALSTRUCTUREITEM5TRANSLATEDESC: Translate Desc").
      setSize(50);
      
      general_structure_blk.addField("FACILITY").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENERALSTRUCTUREFACILITY: Facility").
      setSize(5);
      
      general_structure_blk.addField("ITEM5_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALSTRUCTUREITEM5NOTE: Note").
      setSize(50);
      
      general_structure_blk.setView("GENERAL_STRUCTURE");
      general_structure_blk.defineCommand("GENERAL_STRUCTURE_API","New__,Modify__,Remove__");
      general_structure_set = general_structure_blk.getASPRowSet();
      general_structure_bar = mgr.newASPCommandBar(general_structure_blk);
      general_structure_bar.defineCommand(general_structure_bar.OKFIND, "okFindITEM6");
      general_structure_bar.defineCommand(general_structure_bar.NEWROW, "newRowITEM6");
      general_structure_tbl = mgr.newASPTable(general_structure_blk);
      general_structure_tbl.setTitle("GENERALSTRUCTUREITEMHEAD6: GeneralStructure");
      general_structure_tbl.enableRowSelect();
      general_structure_tbl.setWrap();
      general_structure_lay = general_structure_blk.getASPBlockLayout();
      general_structure_lay.setDefaultLayoutMode(general_structure_lay.MULTIROW_LAYOUT);
      
      general_structure_bar.addCustomCommand("activateElev", "Elev");
      general_structure_bar.addCustomCommand("activateArea", "Area");
      
      //
      // General elevation of structure
      //
      
      general_elevation_blk = mgr.newASPBlock("ELEV");
      general_elevation_blk.addField("ELEV_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_elevation_blk.addField("ELEV_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_elevation_blk.addField("ELEV_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALELEVATIONELEVPROJNO: Proj No").
      setSize(20);
      
      general_elevation_blk.addField("ELEV_STRUCTURE_NO").
      setDbName("STRUCTURE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALELEVATIONELEVSTRUCTURENO: Structure No").
      setSize(20);
      
      // line 1
      general_elevation_blk.addField("ELEVATION_NO").
      setMandatory().
      setInsertable().
      setReadOnly().
      setLabel("GENERALELEVATIONELEVATIONNO: Elevation No").
      setSize(20);
      
      general_elevation_blk.addField("ELEVATION_DESC").
      setInsertable().
      setLabel("GENERALELEVATIONELEVATIONDESC: Elevation Desc").
      setSize(50);
      
      // line 2
      general_elevation_blk.addField("ELEV_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALELEVATIONELEVTRANSLATEDESC: Translate Desc").
      setSize(50);
      
      general_elevation_blk.addField("ELEV_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALELEVATIONELEVNOTE: Note").
      setSize(50);
      
      general_elevation_blk.setView("GENERAL_ELEVATION");
      general_elevation_blk.defineCommand("GENERAL_ELEVATION_API","New__,Modify__,Remove__");
      general_elevation_blk.setMasterBlock(general_structure_blk);
      general_elevation_set = general_elevation_blk.getASPRowSet();
      general_elevation_bar = mgr.newASPCommandBar(general_elevation_blk);
      general_elevation_bar.defineCommand(general_elevation_bar.OKFIND, "okFindELEV");
      general_elevation_bar.defineCommand(general_elevation_bar.NEWROW, "newRowELEV");
      general_elevation_tbl = mgr.newASPTable(general_elevation_blk);
      general_elevation_tbl.setTitle("GENERALELEVATIONITEMHEAD1: GeneralElevation");
      general_elevation_tbl.enableRowSelect();
      general_elevation_tbl.setWrap();
      general_elevation_lay = general_elevation_blk.getASPBlockLayout();
      general_elevation_lay.setDefaultLayoutMode(general_elevation_lay.MULTIROW_LAYOUT);
      
      //
      // General area of structure
      //
      
      general_area_blk = mgr.newASPBlock("AREA");
      general_area_blk.addField("AREA_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_area_blk.addField("AREA_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_area_blk.addField("AREA_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALAREAAREAPROJNO: Proj No").
      setSize(20);
      
      general_area_blk.addField("AREA_STRUCTURE_NO").
      setDbName("STRUCTURE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALAREAAREASTRUCTURENO: Structure No").
      setSize(20);
      
      // line 1
      general_area_blk.addField("AREA_NO").
      setMandatory().
      setInsertable().
      setReadOnly().
      setLabel("GENERALAREAAREANO: Area No").
      setSize(20);
      
      general_area_blk.addField("AREA_DESC").
      setInsertable().
      setLabel("GENERALAREAAREADESC: Area Desc").
      setSize(50);
      
      // line 2
      general_area_blk.addField("AREA_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALAREAAREATRANSLATEDESC: Translate Desc").
      setSize(50);
      
      general_area_blk.addField("AREA_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALAREAAREANOTE: Note").
      setSize(50);
      
      general_area_blk.setView("GENERAL_AREA");
      general_area_blk.defineCommand("GENERAL_AREA_API","New__,Modify__,Remove__");
      general_area_blk.setMasterBlock(general_structure_blk);
      general_area_set = general_area_blk.getASPRowSet();
      general_area_bar = mgr.newASPCommandBar(general_area_blk);
      general_area_bar.defineCommand(general_area_bar.OKFIND, "okFindAREA");
      general_area_bar.defineCommand(general_area_bar.NEWROW, "newRowAREA");
      general_area_tbl = mgr.newASPTable(general_area_blk);
      general_area_tbl.setTitle("GENERALAREAITEMHEAD2: GeneralArea");
      general_area_tbl.enableRowSelect();
      general_area_tbl.setWrap();
      general_area_lay = general_area_blk.getASPBlockLayout();
      general_area_lay.setDefaultLayoutMode(general_area_lay.MULTIROW_LAYOUT);
      
      //
      // General System
      //
      
      general_system_blk = mgr.newASPBlock("ITEM7");
      general_system_blk.addField("ITEM6_OBJID").
      setHidden().
      setDbName("OBJID");
      general_system_blk.addField("ITEM6_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_system_blk.addField("ITEM6_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_system_blk.addField("SYSTEM_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALSYSTEMSYSTEMNO: System No").
      setSize(20);
      general_system_blk.addField("SYSTEM_DESC").
      setInsertable().
      setLabel("GENERALSYSTEMSYSTEMDESC: System Desc").
      setSize(50);
      general_system_blk.addField("ITEM6_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALSYSTEMITEM6TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_system_blk.addField("ITEM6_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALSYSTEMITEM6NOTE: Note").
      setSize(50);
      general_system_blk.setView("GENERAL_SYSTEM");
      general_system_blk.defineCommand("GENERAL_SYSTEM_API","New__,Modify__,Remove__");
      general_system_set = general_system_blk.getASPRowSet();
      general_system_bar = mgr.newASPCommandBar(general_system_blk);
      general_system_bar.defineCommand(general_system_bar.OKFIND, "okFindITEM7");
      general_system_bar.defineCommand(general_system_bar.NEWROW, "newRowITEM7");
      general_system_tbl = mgr.newASPTable(general_system_blk);
      general_system_tbl.setTitle("GENERALSYSTEMITEMHEAD7: GeneralSystem");
      general_system_tbl.enableRowSelect();
      general_system_tbl.setWrap();
      general_system_lay = general_system_blk.getASPBlockLayout();
      general_system_lay.setDefaultLayoutMode(general_system_lay.MULTIROW_LAYOUT);
      
      //
      // General Component
      //
      
      general_component_blk = mgr.newASPBlock("ITEM8");
      general_component_blk.addField("ITEM7_OBJID").
      setHidden().
      setDbName("OBJID");
      general_component_blk.addField("ITEM7_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_component_blk.addField("ITEM7_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_component_blk.addField("COMPONENT_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALCOMPONENTCOMPONENTNO: Component No").
      setSize(20);
      general_component_blk.addField("COMPONENT_DESC").
      setInsertable().
      setLabel("GENERALCOMPONENTCOMPONENTDESC: Component Desc").
      setSize(50);
      general_component_blk.addField("ITEM7_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALCOMPONENTITEM7TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_component_blk.addField("ITEM7_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALCOMPONENTITEM7NOTE: Note").
      setSize(50);
      general_component_blk.setView("GENERAL_COMPONENT");
      general_component_blk.defineCommand("GENERAL_COMPONENT_API","New__,Modify__,Remove__");
      general_component_set = general_component_blk.getASPRowSet();
      general_component_bar = mgr.newASPCommandBar(general_component_blk);
      general_component_bar.defineCommand(general_component_bar.OKFIND, "okFindITEM8");
      general_component_bar.defineCommand(general_component_bar.NEWROW, "newRowITEM8");
      general_component_tbl = mgr.newASPTable(general_component_blk);
      general_component_tbl.setTitle("GENERALCOMPONENTITEMHEAD8: GeneralComponent");
      general_component_tbl.enableRowSelect();
      general_component_tbl.setWrap();
      general_component_lay = general_component_blk.getASPBlockLayout();
      general_component_lay.setDefaultLayoutMode(general_component_lay.MULTIROW_LAYOUT);
      
      //
      // General Totality
      //
      
      general_totality_blk = mgr.newASPBlock("ITEM9");
      general_totality_blk.addField("ITEM8_OBJID").
      setHidden().
      setDbName("OBJID");
      general_totality_blk.addField("ITEM8_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_totality_blk.addField("ITEM8_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_totality_blk.addField("TOTALITY_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALTOTALITYTOTALITYNO: Totality No").
      setSize(20);
      general_totality_blk.addField("TOTALITY_DESC").
      setInsertable().
      setLabel("GENERALTOTALITYTOTALITYDESC: Totality Desc").
      setSize(50);
      general_totality_blk.addField("ITEM8_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALTOTALITYITEM8TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_totality_blk.addField("ITEM8_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALTOTALITYITEM8NOTE: Note").
      setSize(50);
      general_totality_blk.setView("GENERAL_TOTALITY");
      general_totality_blk.defineCommand("GENERAL_TOTALITY_API","New__,Modify__,Remove__");
      general_totality_set = general_totality_blk.getASPRowSet();
      general_totality_bar = mgr.newASPCommandBar(general_totality_blk);
      general_totality_bar.defineCommand(general_totality_bar.OKFIND, "okFindITEM9");
      general_totality_bar.defineCommand(general_totality_bar.NEWROW, "newRowITEM9");
      general_totality_tbl = mgr.newASPTable(general_totality_blk);
      general_totality_tbl.setTitle("GENERALTOTALITYITEMHEAD9: GeneralTotality");
      general_totality_tbl.enableRowSelect();
      general_totality_tbl.setWrap();
      general_totality_lay = general_totality_blk.getASPBlockLayout();
      general_totality_lay.setDefaultLayoutMode(general_totality_lay.MULTIROW_LAYOUT);
      
      //
      // General Particular
      //
      
      general_particular_blk = mgr.newASPBlock("ITEM10");
      general_particular_blk.addField("ITEM9_OBJID").
      setHidden().
      setDbName("OBJID");
      general_particular_blk.addField("ITEM9_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_particular_blk.addField("ITEM9_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_particular_blk.addField("PARTICULAR_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALPARTICULARPARTICULARNO: Particular No").
      setSize(20);
      general_particular_blk.addField("PARTICULAR_DESC").
      setInsertable().
      setLabel("GENERALPARTICULARPARTICULARDESC: Particular Desc").
      setSize(50);
      general_particular_blk.addField("ITEM9_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALPARTICULARITEM9TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_particular_blk.addField("ITEM9_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALPARTICULARITEM9NOTE: Note").
      setSize(50);
      general_particular_blk.setView("GENERAL_PARTICULAR");
      general_particular_blk.defineCommand("GENERAL_PARTICULAR_API","New__,Modify__,Remove__");
      general_particular_set = general_particular_blk.getASPRowSet();
      general_particular_bar = mgr.newASPCommandBar(general_particular_blk);
      general_particular_bar.defineCommand(general_particular_bar.OKFIND, "okFindITEM10");
      general_particular_bar.defineCommand(general_particular_bar.NEWROW, "newRowITEM10");
      general_particular_tbl = mgr.newASPTable(general_particular_blk);
      general_particular_tbl.setTitle("GENERALPARTICULARITEMHEAD10: GeneralParticular");
      general_particular_tbl.enableRowSelect();
      general_particular_tbl.setWrap();
      general_particular_lay = general_particular_blk.getASPBlockLayout();
      general_particular_lay.setDefaultLayoutMode(general_particular_lay.MULTIROW_LAYOUT);
      
      //
      // General Room
      //
      
      general_room_blk = mgr.newASPBlock("ITEM11");
      general_room_blk.addField("ITEM10_OBJID").
      setHidden().
      setDbName("OBJID");
      general_room_blk.addField("ITEM10_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_room_blk.addField("ITEM10_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_room_blk.addField("ROOM_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALROOMROOMNO: Room No").
      setSize(20);
      general_room_blk.addField("ROOM_DESC").
      setInsertable().
      setLabel("GENERALROOMROOMDESC: Room Desc").
      setSize(50);
      general_room_blk.addField("ITEM10_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALROOMITEM10TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_room_blk.addField("ITEM10_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALROOMITEM10NOTE: Note").
      setSize(50);
      general_room_blk.setView("GENERAL_ROOM");
      general_room_blk.defineCommand("GENERAL_ROOM_API","New__,Modify__,Remove__");
      general_room_set = general_room_blk.getASPRowSet();
      general_room_bar = mgr.newASPCommandBar(general_room_blk);
      general_room_bar.defineCommand(general_room_bar.OKFIND, "okFindITEM11");
      general_room_bar.defineCommand(general_room_bar.NEWROW, "newRowITEM11");
      general_room_tbl = mgr.newASPTable(general_room_blk);
      general_room_tbl.setTitle("GENERALROOMITEMHEAD11: GeneralRoom");
      general_room_tbl.enableRowSelect();
      general_room_tbl.setWrap();
      general_room_lay = general_room_blk.getASPBlockLayout();
      general_room_lay.setDefaultLayoutMode(general_room_lay.MULTIROW_LAYOUT);
      
      //
      // General Lot
      //
      
      general_lot_blk = mgr.newASPBlock("ITEM12");
      general_lot_blk.addField("ITEM11_OBJID").
      setHidden().
      setDbName("OBJID");
      general_lot_blk.addField("ITEM11_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_lot_blk.addField("ITEM11_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setSize(10);
      
      general_lot_blk.addField("LOT_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALLOTLOTNO: Lot No").
      setSize(20);
      general_lot_blk.addField("LOT_DESC").
      setInsertable().
      setLabel("GENERALLOTLOTDESC: Lot Desc").
      setSize(50);
      general_lot_blk.addField("ITEM11_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALLOTITEM11TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_lot_blk.addField("ITEM11_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALLOTITEM11NOTE: Note").
      setSize(50);
      general_lot_blk.setView("GENERAL_LOT");
      general_lot_blk.defineCommand("GENERAL_LOT_API","New__,Modify__,Remove__");
      general_lot_set = general_lot_blk.getASPRowSet();
      general_lot_bar = mgr.newASPCommandBar(general_lot_blk);
      general_lot_bar.defineCommand(general_lot_bar.OKFIND, "okFindITEM12");
      general_lot_bar.defineCommand(general_lot_bar.NEWROW, "newRowITEM12");
      general_lot_tbl = mgr.newASPTable(general_lot_blk);
      general_lot_tbl.setTitle("GENERALLOTITEMHEAD12: GeneralLot");
      general_lot_tbl.enableRowSelect();
      general_lot_tbl.setWrap();
      general_lot_lay = general_lot_blk.getASPBlockLayout();
      general_lot_lay.setDefaultLayoutMode(general_lot_lay.MULTIROW_LAYOUT);
      
      //
      // General Quality Grade
      //
      
      general_quality_grade_blk = mgr.newASPBlock("ITEM13");
      general_quality_grade_blk.addField("ITEM12_OBJID").
      setHidden().
      setDbName("OBJID");
      general_quality_grade_blk.addField("ITEM12_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_quality_grade_blk.addField("GRADE_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALQUALITYGRADEGRADENO: Grade No").
      setSize(20);
      general_quality_grade_blk.addField("GRADE_DESC").
      setInsertable().
      setLabel("GENERALQUALITYGRADEGRADEDESC: Grade Desc").
      setSize(50);
      general_quality_grade_blk.addField("ITEM12_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALQUALITYGRADEITEM12TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_quality_grade_blk.addField("ITEM12_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALQUALITYGRADEITEM12NOTE: Note").
      setSize(50);
      general_quality_grade_blk.setView("GENERAL_QUALITY_GRADE");
      general_quality_grade_blk.defineCommand("GENERAL_QUALITY_GRADE_API","New__,Modify__,Remove__");
      general_quality_grade_set = general_quality_grade_blk.getASPRowSet();
      general_quality_grade_bar = mgr.newASPCommandBar(general_quality_grade_blk);
      general_quality_grade_bar.defineCommand(general_quality_grade_bar.OKFIND, "okFindITEM13");
      general_quality_grade_bar.defineCommand(general_quality_grade_bar.NEWROW, "newRowITEM13");
      general_quality_grade_tbl = mgr.newASPTable(general_quality_grade_blk);
      general_quality_grade_tbl.setTitle("GENERALQUALITYGRADEITEMHEAD13: GeneralQualityGrade");
      general_quality_grade_tbl.enableRowSelect();
      general_quality_grade_tbl.setWrap();
      general_quality_grade_lay = general_quality_grade_blk.getASPBlockLayout();
      general_quality_grade_lay.setDefaultLayoutMode(general_quality_grade_lay.MULTIROW_LAYOUT);
      
      general_factory_blk = mgr.newASPBlock("ITEM14");
      general_factory_blk.addField("ITEM14_OBJID").
      setHidden().
      setDbName("OBJID");
      general_factory_blk.addField("ITEM14_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_factory_blk.addField("ITEM14_PROJ_NO").
      setDbName("PROJ_NO").
      setHidden().
      setLabel("GENERALFACTORYITEM0PROJNO: Proj No").
      setSize(50);
      general_factory_blk.addField("FACTORY_CODE").
      setMandatory().
      setInsertable().
      setLabel("GENERALFACTORYFACTORYCODE: Factory Code").
      setSize(20);
      general_factory_blk.addField("FACTORY_DESC").
      setInsertable().
      setLabel("GENERALFACTORYFACTORYDESC: Factory Desc").
      setSize(50);
      general_factory_blk.addField("ITEM14_TRANSLATE_DESC").
      setInsertable().
      setDbName("TRANSLATE_DESC").
      setLabel("GENERALFACTORYTRANSLATEDESC: Translate Desc").
      setSize(50);
      general_factory_blk.addField("ITEM14_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALFACTORYITEM0NOTE: Note").
      setSize(50);
      
      general_factory_blk.setView("GENERAL_FACTORY");
      general_factory_blk.defineCommand("GENERAL_FACTORY_API","New__,Modify__,Remove__");
      general_factory_blk.setMasterBlock(headblk);
      general_factory_set = general_factory_blk.getASPRowSet();
      general_factory_bar = mgr.newASPCommandBar(general_factory_blk);
      general_factory_bar.defineCommand(general_factory_bar.OKFIND, "okFindITEM14");
      general_factory_bar.defineCommand(general_factory_bar.NEWROW, "newRowITEM14");
      general_factory_tbl = mgr.newASPTable(general_factory_blk);
      general_factory_tbl.setTitle("GENERALFACTORYITEMHEAD1: GeneralFactory");
      general_factory_tbl.enableRowSelect();
      general_factory_tbl.setWrap();
      general_factory_lay = general_factory_blk.getASPBlockLayout();
      general_factory_lay.setDefaultLayoutMode(general_factory_lay.MULTIROW_LAYOUT);

      general_level_blk = mgr.newASPBlock("ITEM15");
      general_level_blk.addField("ITEM15_OBJID").
      setHidden().
      setDbName("OBJID");
      general_level_blk.addField("ITEM15_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_level_blk.addField("ITEM15_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setHidden().
      setLabel("GENERALLEVELITEM1PROJNO: Proj No").
      setSize(20);
      general_level_blk.addField("LEVEL_CODE").
      setMandatory().
      setInsertable().
      setLabel("GENERALLEVELLEVELCODE: Level Code").
      setSize(20);
      general_level_blk.addField("LEVEL_DESC").
      setInsertable().
      setLabel("GENERALLEVELLEVELDESC: Level Desc").
      setSize(50);
      general_level_blk.addField("ITEM15_TRANSLATE_DESC").
      setDbName("TRANSLATE_DESC").
      setInsertable().
      setLabel("GENERALLEVELITEM1TRANSLATEDESC: Translate Desc").
      setSize(50);
      general_level_blk.addField("ITEM15_NOTE").
      setDbName("NOTE").
      setInsertable().
      setLabel("GENERALLEVELITEM1NOTE: Note").
      setSize(50);
      general_level_blk.setView("GENERAL_LEVEL");
      general_level_blk.defineCommand("GENERAL_LEVEL_API","New__,Modify__,Remove__");
      general_level_blk.setMasterBlock(headblk);
      general_level_set = general_level_blk.getASPRowSet();
      general_level_bar = mgr.newASPCommandBar(general_level_blk);
      general_level_bar.defineCommand(general_level_bar.OKFIND, "okFindITEM15");
      general_level_bar.defineCommand(general_level_bar.NEWROW, "newRowITEM15");
      general_level_tbl = mgr.newASPTable(general_level_blk);
      general_level_tbl.setTitle("GENERALLEVELITEMHEAD2: GeneralLevel");
      general_level_tbl.enableRowSelect();
      general_level_tbl.setWrap();
      general_level_lay = general_level_blk.getASPBlockLayout();
      general_level_lay.setDefaultLayoutMode(general_level_lay.MULTIROW_LAYOUT);

      general_material_list_blk = mgr.newASPBlock("ITEM16");
      general_material_list_blk.addField("ITEM16_OBJID").
      setHidden().
      setDbName("OBJID");
      general_material_list_blk.addField("ITEM16_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      general_material_list_blk.addField("ITEM16_PROJ_NO").
      setDbName("PROJ_NO").
      setMandatory().
      setHidden().
      setLabel("GENERALMATERIALLISTITEM2PROJNO: Proj No").
      setSize(20);
      general_material_list_blk.addField("MATERIAL_CODE").
      setMandatory().
      setInsertable().
      setLabel("GENERALMATERIALLISTMATERIALCODE: Material Code").
      setSize(20);
      general_material_list_blk.addField("MATERIAL_NAME").
      setInsertable().
      setLabel("GENERALMATERIALLISTMATERIALNAME: Material Name").
      setSize(50);
      general_material_list_blk.addField("MATERIAL_TYPE").
      setInsertable().
      setLabel("GENERALMATERIALLISTMATERIALTYPE: Material Type").
      setSize(50);
      general_material_list_blk.addField("MATERIAL_UNIT").
      setInsertable().
      setLabel("GENERALMATERIALLISTMATERIALUNIT: Material Unit").
      setSize(50);
      general_material_list_blk.addField("MATERIAL_NOTE").
      setInsertable().
      setLabel("GENERALMATERIALLISTMATERIALNOTE: Material Note").
      setSize(50);
      general_material_list_blk.setView("GENERAL_MATERIAL_LIST");
      general_material_list_blk.defineCommand("GENERAL_MATERIAL_LIST_API","New__,Modify__,Remove__");
      general_material_list_blk.setMasterBlock(headblk);
      general_material_list_set = general_material_list_blk.getASPRowSet();
      general_material_list_bar = mgr.newASPCommandBar(general_material_list_blk);
      general_material_list_bar.defineCommand(general_material_list_bar.OKFIND, "okFindITEM16");
      general_material_list_bar.defineCommand(general_material_list_bar.NEWROW, "newRowITEM16");
      general_material_list_tbl = mgr.newASPTable(general_material_list_blk);
      general_material_list_tbl.setTitle("GENERALMATERIALLISTITEMHEAD3: GeneralMaterialList");
      general_material_list_tbl.enableRowSelect();
      general_material_list_tbl.setWrap();
      general_material_list_lay = general_material_list_blk.getASPBlockLayout();
      general_material_list_lay.setDefaultLayoutMode(general_material_list_lay.MULTIROW_LAYOUT);

      tabs = mgr.newASPTabContainer();
      
      tabs.addTab(mgr.translate("GENBAWGENERALPROJECT: Project"),"javascript:commandSet('MAIN.activateProject','')");
      tabs.addTab(mgr.translate("GENBAWGENERALZONE: Zone"),"javascript:commandSet('MAIN.activateZone','')");
      tabs.addTab(mgr.translate("GENBAWGENERALMACHGRP: Mach Grp"),"javascript:commandSet('MAIN.activateMachGrp','')");
      tabs.addTab(mgr.translate("GENBAWGENERALSPECIALTY: Specialty"),"javascript:commandSet('MAIN.activateSpecialty','')");
      tabs.addTab(mgr.translate("GENBAWGENERALSTRUCTURE: Structure"),"javascript:commandSet('MAIN.activateStructure','')");
      tabs.addTab(mgr.translate("GENBAWGENERALROOM: Room"),"javascript:commandSet('MAIN.activateRoom','')");
      tabs.addTab(mgr.translate("GENBAWGENERALSYSTEM: System"),"javascript:commandSet('MAIN.activateSystem','')");
      tabs.addTab(mgr.translate("GENBAWGENERALCOMPTPYE: Comp Type"),"javascript:commandSet('MAIN.activateCompTpye','')");
      tabs.addTab(mgr.translate("GENBAWGENERALCOMPONENT: Component"),"javascript:commandSet('MAIN.activateComponent','')");
      tabs.addTab(mgr.translate("GENBAWGENERALTOTALITY: Totality"),"javascript:commandSet('MAIN.activateTotality','')");
      tabs.addTab(mgr.translate("GENBAWGENERALPARTICULAR: Particular"),"javascript:commandSet('MAIN.activateParticular','')");
      tabs.addTab(mgr.translate("GENBAWGENERALLOT: Lot"),"javascript:commandSet('MAIN.activateLot','')");
      tabs.addTab(mgr.translate("GENBAWGENERALQUALGRADE: Qual Grade"),"javascript:commandSet('MAIN.activateQualGrade','')");
      tabs.addTab(mgr.translate("GENBAWGENERALQUALFACTORY: Factory"),"javascript:commandSet('MAIN.activateFactory','')");
      tabs.addTab(mgr.translate("GENBAWGENERALLEVEL: Level"),"javascript:commandSet('MAIN.activateLevel','')");
      tabs.addTab(mgr.translate("GENBAWGENERALMATERIALLIST: Material List"),"javascript:commandSet('MAIN.activateMaterialList','')");
      
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);

      //
      // Tabs of general structure
      //
      
      tabs1 = mgr.newASPTabContainer();
      
      tabs1.addTab(mgr.translate("GENBAWGENERALELEV: Elev"),"javascript:commandSet('ITEM6.activateElev','')");
      tabs1.addTab(mgr.translate("GENBAWGENERALAREA: Area"),"javascript:commandSet('ITEM6.activateArea','')");
      tabs1.setContainerWidth(700);
      tabs1.setLeftTabSpace(1);
      tabs1.setContainerSpace(5);
      tabs1.setTabWidth(100);
   }

   public void activateElev()
   {
      tabs1.setActiveTab(1);
      okFindELEV();
   }
   
   public void activateArea()
   {
      tabs1.setActiveTab(2);
      okFindAREA();
   }
   
   public void activateProject()
   {
      tabs.setActiveTab(1);
      okFindITEM1();
   }
   
   public void activateZone()
   {
      tabs.setActiveTab(2);
      okFindITEM2();
   }
   
   public void activateMachGrp()
   {
      tabs.setActiveTab(3);
      okFindITEM3();
   }
   
   public void activateSpecialty()
   {
      tabs.setActiveTab(4);
      okFindITEM4();
   }
   
   public void activateStructure()
   {
      tabs.setActiveTab(5);
      okFindITEM6();
   }
   
   public void activateRoom()
   {
      tabs.setActiveTab(6);
      okFindITEM11();
   }
   
   public void activateSystem()
   {
      tabs.setActiveTab(7);
      okFindITEM7();
   }
   
   public void activateCompTpye()
   {
      tabs.setActiveTab(8);
      okFindITEM5();
   }
   
   public void activateComponent()
   {
      tabs.setActiveTab(9);
      okFindITEM8();
   }
   
   public void activateTotality()
   {
      tabs.setActiveTab(10);
      okFindITEM9();
   }
   
   public void activateParticular()
   {
      tabs.setActiveTab(11);
      okFindITEM10();
   }
   
   public void activateLot()
   {
      tabs.setActiveTab(12);
      okFindITEM12();
   }
   
   public void activateQualGrade()
   {
      tabs.setActiveTab(13);
      okFindITEM13();
   }
   public void activateFactory()
   {
      tabs.setActiveTab(14);
      okFindITEM14();
   }
   public void activateLevel()
   {
      tabs.setActiveTab(15);
      okFindITEM15();
   }
   public void activateMaterialList()
   {
      tabs.setActiveTab(16);
      okFindITEM16();
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENBAWGENERALBASICDATADESC: General Basic Data";
   }


   protected String getTitle()
   {
      return getDescription();
   }


   protected void printContents() throws FndException
   {
      super.printContents();
      ASPManager mgr = getASPManager();
      appendToHTML(tabs.showTabsInit());
      
      if  (tabs.getActiveTab() == 1)
         appendToHTML(general_project_lay.show());
      else if (tabs.getActiveTab() == 2)
      {
         if (general_zone_lay.isVisible())
            appendToHTML(general_zone_lay.show());
         else
         {
            general_zone_lay.setLayoutMode(general_zone_lay.CUSTOM_LAYOUT);
            appendToHTML(general_zone_lay.show());
         }
         if (general_zone_set.countRows() > 0 && (general_zone_lay.isCustomLayout() || general_zone_lay.isSingleLayout()))
            appendToHTML(general_zone_creator_code_lay.show());
      }
      else if (tabs.getActiveTab() == 3)
         appendToHTML(general_mach_group_lay.show());
      else if (tabs.getActiveTab() == 4)
         appendToHTML(general_specialty_lay.show());
      else if (tabs.getActiveTab() == 5)
      {
         if (general_structure_lay.isVisible())
            appendToHTML(general_structure_lay.show());
         else
         {
            general_structure_lay.setLayoutMode(general_structure_lay.CUSTOM_LAYOUT);
            appendToHTML(general_structure_lay.show());
         }
         if (general_structure_set.countRows() > 0 && (general_structure_lay.isCustomLayout() || general_structure_lay.isSingleLayout()))
         {
            appendToHTML(tabs1.showTabsInit());
            if (tabs1.getActiveTab() == 1)
               appendToHTML(general_elevation_lay.show());
            else if (tabs1.getActiveTab() == 2)
               appendToHTML(general_area_lay.show());
            appendToHTML(tabs1.showTabsFinish());
         }
      }
      else if (tabs.getActiveTab() == 6)
         appendToHTML(general_room_lay.show());
      else if (tabs.getActiveTab() == 7)
         appendToHTML(general_system_lay.show());
      else if (tabs.getActiveTab() == 8)
         appendToHTML(general_component_type_lay.show());
      else if (tabs.getActiveTab() == 9)
         appendToHTML(general_component_lay.show());
      else if (tabs.getActiveTab() == 10)
         appendToHTML(general_totality_lay.show());
      else if (tabs.getActiveTab() == 11)
         appendToHTML(general_particular_lay.show());
      else if (tabs.getActiveTab() == 12)
         appendToHTML(general_lot_lay.show());
      else if (tabs.getActiveTab() == 13)
         appendToHTML(general_quality_grade_lay.show());
      else if (tabs.getActiveTab() == 14)
         appendToHTML(general_factory_lay.show());
      else if (tabs.getActiveTab() == 15)
         appendToHTML(general_level_lay.show());
      else if (tabs.getActiveTab() == 16)
         appendToHTML(general_material_list_lay.show());
      
      appendToHTML(tabs.showTabsFinish());
   }
}
