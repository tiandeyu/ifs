/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.util.Str;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralNotification extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralNotification");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   protected ASPBlock headblk;
   protected ASPRowSet headset;
   protected ASPCommandBar headbar;
   protected ASPTable headtbl;
   protected ASPBlockLayout headlay;
   
   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   protected ASPBlock general_notification_exc_blk;
   protected ASPRowSet general_notification_exc_set;
   protected ASPCommandBar general_notification_exc_bar;
   protected ASPTable general_notification_exc_tbl;
   protected ASPBlockLayout general_notification_exc_lay;
   
   protected String root_path;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralNotification (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
      super.run();
      
      ASPManager mgr = getASPManager();

      root_path = mgr.getConfigParameter("APPLICATION/LOCATION/ROOT");

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("NOTIFICATION_NO")) )
      {
         headlay.setLayoutMode(headlay.SINGLE_LAYOUT);
         okFind();
      }
      adjust();
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      
      q.addWhereCondition("CREATE_PERSON = Person_Info_API.Get_Id_For_User(Fnd_Session_API.Get_Fnd_User)");
      
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENERALNOTIFICATIONNODATA: No data found.");
         headset.clear();
      }
      else
         okFindITEM1();
   }

   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      
      q.addWhereCondition("CREATE_PERSON = Person_Info_API.Get_Id_For_User(Fnd_Session_API.Get_Fnd_User)");
      
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }

   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","GENERAL_NOTIFICATION_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Perform Header and Item functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void  performHEAD( String command)
   {
      int currow;
      
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();

      currow = headset.getCurrentRowNo();
      if(headlay.isMultirowLayout())
         headset.storeSelections();
      else
         headset.selectRow();
      headset.markSelectedRows( command );
      mgr.submit(trans);
      headset.goTo(currow);
   }
   
   public void  close()
   {
      performHEAD( "Close__" );
   }
   
   public void  open()
   {
      performHEAD( "Open__" );
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      
      if (headset.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_notification_exc_blk);
      q.addWhereCondition("NOTIFICATION_NO = ?");
      q.addParameter("NOTIFICATION_NO", headset.getValue("NOTIFICATION_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_notification_exc_blk);
      headset.goTo(headrowno);
   }
   
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM1","GENERAL_NOTIFICATION_EXC_API.New__",general_notification_exc_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_NOTIFICATION_NO", headset.getValue("NOTIFICATION_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_notification_exc_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //-------------------  Predefines Head and Item functions ---------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
      setHidden();
      headblk.addField("OBJVERSION").
      setHidden();
      headblk.addField("OBJSTATE").
      setHidden();
      headblk.addField("OBJEVENTS").
      setHidden();

      // line 1
      headblk.addField("NOTIFICATION_NO").
      unsetInsertable().
      setReadOnly().
      setLabel("GENERALNOTIFICATIONNOTIFICATIONNO: Notification No").
      setSize(20);
      
      headblk.addField("STATE").
      setReadOnly().
      setLabel("GENERALNOTIFICATIONSTATE: State").
      setSize(20);
      
      // line 2
      headblk.addField("TITLE").
      setInsertable().
      setLabel("GENERALNOTIFICATIONTITLE: Title").
      setSize(100);

      // line 3
      headblk.addField("SCOPE_TYPE").
      enumerateValues("General_Nofification_Type_API").
      setSelectBox().
      setInsertable().
      setMandatory().
      setLabel("GENERALNOTIFICATIONSCOPETYPE: Scope Type").
      setSize(20);
      
      headblk.addField("SCOPE_TYPE_DB").
      setFunction("GENERAL_NOFIFICATION_TYPE_API.Encode(:SCOPE_TYPE)").
      setHidden();
      mgr.getASPField("SCOPE_TYPE").setValidation("SCOPE_TYPE_DB");
      
      // line 4
      headblk.addField("SCOPE").
      setInsertable().
      setDynamicLOV("GENERAL_PROJECT", "", 500, 550, true, true).
      setLabel("GENERALNOTIFICATIONSCOPE: Scope").
      setSize(100);

      // line 5
      headblk.addField("EMERGENCY").
      enumerateValues("General_Notification_Emerg_API").
      setSelectBox().
      setInsertable().
      setLabel("GENERALNOTIFICATIONEMERGENCY: Emergency").
      setSize(20);
      
      headblk.addField("VALID_DATE","Date").
      setInsertable().
      setLabel("GENERALNOTIFICATIONVALIDDATE: Valid Date").
      setSize(20);
      
      // line 6
      headblk.addField("MAIN_CONTENT").
      setInsertable().
      setLabel("GENERALNOTIFICATIONMAINCONTENT: Main Content").
      setSize(100).
      setHeight(5);
      
      // line 7
      headblk.addField("CREATE_PERSON").
      unsetInsertable().
      setReadOnly().
      setLabel("GENERALNOTIFICATIONCREATEPERSON: Create Person").
      setSize(20);
      
      headblk.addField("CREATE_PERSON_NAME").
      setReadOnly().
      setFunction("PERSON_INFO_API.GET_NAME(:CREATE_PERSON)").
      setLabel("GENERALNOTIFICATIONCREATEPERSONNAME: Create Person Name").
      setSize(20);
      mgr.getASPField("CREATE_PERSON").setValidation("CREATE_PERSON_NAME");
      
      headblk.addField("CREATE_DATE","Date").
      unsetInsertable().
      setReadOnly().
      setLabel("GENERALNOTIFICATIONCREATEDATE: Create Date").
      setSize(20);
      
      // line 8
      headblk.addField("CREATOR_UNIT").
      unsetInsertable().
      setReadOnly().
      setLabel("GENERALNOTIFICATIONCREATORUNIT: Creator Unit").
      setSize(20);
      
      headblk.addField("CREATOR_UNIT_NAME").
      setReadOnly().
      setFunction("GENERAL_ZONE_API.GET_ZONE_DESC(:CREATOR_UNIT)").
      setLabel("GENERALNOTIFICATIONCREATORUNITNAME: Creator Unit Name").
      setSize(20);
      mgr.getASPField("CREATOR_UNIT").setValidation("CREATOR_UNIT_NAME");
      
      // line 9
      headblk.addField("NOTE").
      setInsertable().
      setLabel("GENERALNOTIFICATIONNOTE: Note").
      setSize(100).
      setClientFunc(" style=\"ime-mode:disabled\" onkeypress=\"event.returnValue = false;\" onpaste=\"return false;\" ").
      setHeight(5);
      
      // line 9
      headblk.addField("VIEW_BUSINESS").
      setFunction("''").
      setLabel("GENERALNOTIFICATIONVIEWBUSINESS: Business").
      setAsImageField().
      setHyperlink("GenbawIntermediatePage.page", "CONNECTED_PAGE_URL,CONNECTED_KEY_REF").
      setSize(10);
      
      // Hidden Fields
      headblk.addField("CONNECTED_LU_NAME").
      setHidden().
      setLabel("GENERALNOTIFICATIONCONNECTEDLUNAME: Connected Lu Name").
      setSize(50);
      headblk.addField("CONNECTED_KEY_REF").
      setHidden().
      setLabel("GENERALNOTIFICATIONCONNECTEDKEYREF: Connected Key Ref").
      setSize(50);
      headblk.addField("CONNECTED_PAGE_URL").
      setHidden().
      setLabel("GENERALNOTIFICATIONCONNECTEDPAGEURL: Connected Page Url").
      setSize(50);
      
      headblk.setView("GENERAL_NOTIFICATION");
      headblk.defineCommand("GENERAL_NOTIFICATION_API","New__,Modify__,Remove__,Close__,Open__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      
      headbar.addSecureCustomCommand("CreateExcPerson", "GENERALNOTIFICATIONCREATEEXCPERSON: Create Exc Person...", "GENERAL_NOTIFICATION_EXC_API.Create_Exc_Notification", "../common/images/toolbar/" + mgr.getLanguageCode() + "/addUser.gif", true);
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_VIEW, "PERSON_INFO_LOV");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_PARPA, "NOTIFICATION_NO");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_FIEPA, "PERSON_ID");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_TARG_FIE, "EXC_PERSON");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_TARG_PKG, "GENERAL_NOTIFICATION_EXC_API");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_TARG_FUN, "Create_Exc_Notification");
      headbar.setCmdProperty("CreateExcPerson", headbar.CMD_PRO_ADD_TAR_VIEW, "GENERAL_NOTIFICATION_EXC");
      headbar.removeFromMultirowAction("CreateExcPerson");
      headbar.addCommandValidConditions("CreateExcPerson", "OBJSTATE", "Enable", "Opened");
      headbar.addCustomCommandSeparator();
      
      headbar.addSecureCustomCommand("Close", "GENERALNOTIFICATIONCLOSE: Close", "GENERAL_NOTIFICATION_API.Close__");
      headbar.addSecureCustomCommand("Open", "GENERALNOTIFICATIONOPEN: Open", "GENERAL_NOTIFICATION_API.Open__");

      headbar.addCommandValidConditions("Close", "OBJSTATE", "Enable", "Opened");
      headbar.addCommandValidConditions("Open", "OBJSTATE", "Enable", "Closed");
      
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("GENERALNOTIFICATIONTBLHEAD: General Notifications");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setSimple("CREATE_PERSON_NAME");
      headlay.setSimple("CREATOR_UNIT_NAME");
      headlay.setDataSpan("TITLE", 5);
      headlay.setDataSpan("SCOPE_TYPE", 5);
      headlay.setDataSpan("SCOPE", 5);
      headlay.setDataSpan("MAIN_CONTENT", 5);
      headlay.setDataSpan("CREATOR_UNIT", 5);
      headlay.setDataSpan("NOTE", 5);
      
      
      //
      // Exclude Person
      //
      
      general_notification_exc_blk = mgr.newASPBlock("ITEM1");
      general_notification_exc_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_notification_exc_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_notification_exc_blk.addField("ITEM0_NOTIFICATION_NO").
      setDbName("NOTIFICATION_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALNOTIFICATIONEXCITEM0NOTIFICATIONNO: Notification No").
      setSize(20);
      
      general_notification_exc_blk.addField("EXC_PERSON").
      setMandatory().
      setInsertable().
      setLabel("GENERALNOTIFICATIONEXCEXCPERSON: Exc Person").
      setSize(10);
      
      general_notification_exc_blk.addField("EXC_PERSON_NAME").
      setFunction("PERSON_INFO_API.GET_NAME(:EXC_PERSON)").
      setReadOnly().
      setLabel("GENERALNOTIFICATIONEXCEXCPERSONNAME: Exc Person Name").
      setSize(10);
      mgr.getASPField("EXC_PERSON").setValidation("EXC_PERSON_NAME");
      
      general_notification_exc_blk.setView("GENERAL_NOTIFICATION_EXC");
      general_notification_exc_blk.defineCommand("GENERAL_NOTIFICATION_EXC_API", "New__,Modify__,Remove__");
      general_notification_exc_blk.setMasterBlock(headblk);
      general_notification_exc_set = general_notification_exc_blk.getASPRowSet();
      general_notification_exc_bar = mgr.newASPCommandBar(general_notification_exc_blk);
      general_notification_exc_bar.defineCommand(general_notification_exc_bar.OKFIND, "okFindITEM1");
      general_notification_exc_bar.defineCommand(general_notification_exc_bar.NEWROW, "newRowITEM1");
      general_notification_exc_tbl = mgr.newASPTable(general_notification_exc_blk);
      general_notification_exc_tbl.setTitle("GENERALNOTIFICATIONEXCITEMHEAD1: GeneralNotificationExc");
      general_notification_exc_tbl.enableRowSelect();
      general_notification_exc_tbl.setWrap();
      general_notification_exc_lay = general_notification_exc_blk.getASPBlockLayout();
      general_notification_exc_lay.setDefaultLayoutMode(general_notification_exc_lay.MULTIROW_LAYOUT);
      general_notification_exc_lay.setSimple("EXC_PERSON_NAME");
   }

   protected String getImageFieldTag(ASPField imageField, ASPRowSet rowset, int rowNum) throws FndException
   {
      ASPManager mgr = getASPManager();
      String imgSrc = mgr.getASPConfig().getImagesLocation();
      if (rowset.countRows() > 0)
      {
         if ("VIEW_BUSINESS".equals(imageField.getName()))
         {
            if (!Str.isEmpty(rowset.getValueAt(rowNum, "CONNECTED_KEY_REF")) && !Str.isEmpty(rowset.getValueAt(rowNum, "CONNECTED_PAGE_URL")))
            {
               imgSrc += "app_view.gif";
               return "<img src=\"" + imgSrc + "\" height=\"16\" width=\"16\" border=\"0\">";
            }
         }
      }
      return "";
   }
   
   public void adjust() throws FndException
   {
      super.adjust();
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENERALNOTIFICATIONDESC: General Notification";
   }


   protected String getTitle()
   {
      return getDescription();
   }

   protected void printContents() throws FndException
   {
      super.printContents();

      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }
      
      if (headset.countRows() > 0 && (headlay.isSingleLayout() || headlay.isCustomLayout()))
      {
         appendToHTML(general_notification_exc_lay.show());
      }
      
      appendDirtyJavaScript("function lovScope(i)\n");
      appendDirtyJavaScript("{\n");
      appendDirtyJavaScript("   var scope_type_db = getValue_('SCOPE_TYPE_DB',i);\n");
      appendDirtyJavaScript("   var scope_lov_view = '';\n");
      appendDirtyJavaScript("   if (scope_type_db == 'PROJ')\n");
      appendDirtyJavaScript("      scope_lov_view = 'GENERAL_PROJECT';\n");
      appendDirtyJavaScript("   else if (scope_type_db == 'ZONE')\n");
      appendDirtyJavaScript("      scope_lov_view = 'GENERAL_ZONE_LOV';\n");
      appendDirtyJavaScript("   else if (scope_type_db == 'DEPT')\n");
      appendDirtyJavaScript("      scope_lov_view = 'GENERAL_DEPARTMENT_CU_LOV';\n");
      appendDirtyJavaScript("   else if (scope_type_db == 'PERS')\n");
      appendDirtyJavaScript("      scope_lov_view = 'PERSON_INFO_LOV';\n");
      appendDirtyJavaScript("   else if (scope_type_db == 'GROU')\n");
      appendDirtyJavaScript("      scope_lov_view = 'GENERAL_APP_GRP';\n");
      appendDirtyJavaScript("   else if (scope_type_db == 'POSI')\n");
      appendDirtyJavaScript("      scope_lov_view = 'GENERAL_POSITION';\n");
      appendDirtyJavaScript("   openLOVWindow('SCOPE',i,\n");
      appendDirtyJavaScript("        '");
      appendDirtyJavaScript(root_path);
      appendDirtyJavaScript("common/scripts/DynamicLov.page?__DYNAMIC_LOV_VIEW=' + scope_lov_view + '&MULTICHOICE=true&__FIELD="+mgr.URLEncode(mgr.translate("GENERALNOTIFICATIONSCOPE: Notification Scope"))+"'\n");
      appendDirtyJavaScript("        ,500,500,'validateScope');\n");
      appendDirtyJavaScript("}\n");
   }
}
