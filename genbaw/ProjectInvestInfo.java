/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class ProjectInvestInfo extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.ProjectInvestInfo");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock project_invest_app_blk;
   private ASPRowSet project_invest_app_set;
   private ASPCommandBar project_invest_app_bar;
   private ASPTable project_invest_app_tbl;
   private ASPBlockLayout project_invest_app_lay;

   private ASPBlock project_invest_idea_blk;
   private ASPRowSet project_invest_idea_set;
   private ASPCommandBar project_invest_idea_bar;
   private ASPTable project_invest_idea_tbl;
   private ASPBlockLayout project_invest_idea_lay;

   private ASPBlock project_invest_tech_blk;
   private ASPRowSet project_invest_tech_set;
   private ASPCommandBar project_invest_tech_bar;
   private ASPTable project_invest_tech_tbl;
   private ASPBlockLayout project_invest_tech_lay;
   
   private ASPTabContainer tabs;  


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  ProjectInvestInfo (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("APPLY_NO")) )
         okFind();
      else
         okFind();
      tabs.saveActiveTab();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("PROJECTINVESTINFONODATA: No data found.");
         headset.clear();
      }
      eval( project_invest_app_set.syncItemSets() );
      eval( project_invest_idea_set.syncItemSets() );
      eval( project_invest_tech_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","PROJECT_INVEST_INFO_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(project_invest_app_blk);
      q.addWhereCondition("APPLY_NO = ?");
      q.addParameter("APPLY_NO", headset.getValue("APPLY_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,project_invest_app_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","PROJECT_INVEST_APP_API.New__",project_invest_app_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_APPLY_NO", headset.getValue("APPLY_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      project_invest_app_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(project_invest_idea_blk);
      q.addWhereCondition("APPLY_NO = ?");
      q.addParameter("APPLY_NO", headset.getValue("APPLY_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,project_invest_idea_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","PROJECT_INVEST_IDEA_API.New__",project_invest_idea_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM1_APPLY_NO", headset.getValue("APPLY_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      project_invest_idea_set.addRow(data);
   }
   public void okFindITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(project_invest_tech_blk);
      q.addWhereCondition("APPLY_NO = ?");
      q.addParameter("APPLY_NO", headset.getValue("APPLY_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,project_invest_tech_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM3","PROJECT_INVEST_TECH_API.New__",project_invest_tech_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM2_APPLY_NO", headset.getValue("APPLY_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      project_invest_tech_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Perform Header and Item functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void  performHEAD( String command)
   {
      int currow;
      
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      

      currow = headset.getCurrentRowNo();
      if(headlay.isMultirowLayout())
         headset.storeSelections();
      else
         headset.selectRow();
      headset.markSelectedRows( command );
      mgr.submit(trans);
      headset.goTo(currow);
   }
   public void  commit()
   {

      performHEAD( "Commit__" );
   }
   public void  confirm()
   {

      performHEAD( "Confirm__" );
   }
   public void  cancel()
   {

      performHEAD( "Cancel__" );
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("OBJSTATE").
              setHidden();
      headblk.addField("OBJEVENTS").
              setHidden();
      headblk.addField("APPLY_NO").
              setMandatory().
              setInsertable().
              setLabel("PROJECTINVESTINFOAPPLYNO: Apply No").
              setSize(15);
      headblk.addField("APPLY_NAME").
              setInsertable().
              setLabel("PROJECTINVESTINFOAPPLYNAME: Apply Name").
              setSize(20);
      headblk.addField("PROJECT_NO").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTNO: Project No").
              setSize(20);
      headblk.addField("PROJECT_PHASE").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTPHASE: Project Phase").
              setSize(30);
      headblk.addField("PROJECT_AREA").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTAREA: Project Area").
              setSize(30);
      headblk.addField("PROJECT_ADD").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTADD: Project Add").
              setSize(30);
      headblk.addField("PROJECT_SIZE").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTSIZE: Project Size").
              setSize(30);
      headblk.addField("PROJECT_SIZE_DESC").
              setInsertable().
              setLabel("PROJECTINVESTINFOPROJECTSIZEDESC: Project Size Desc").
              setSize(30);
      headblk.addField("MESSAGE_PERSON").
              setInsertable().
              setLabel("PROJECTINVESTINFOMESSAGEPERSON: Message Person").
              setSize(30);
      headblk.addField("INVEST_STATE").
              setInsertable().
              setLabel("PROJECTINVESTINFOINVESTSTATE: Invest State").
              setSize(20);
      headblk.addField("ALLOW_DESC").
              setInsertable().
              setLabel("PROJECTINVESTINFOALLOWDESC: Allow Desc").
              setSize(30);
      headblk.addField("REPORT_DATE","Date").
              setInsertable().
              setLabel("PROJECTINVESTINFOREPORTDATE: Report Date").
              setSize(20);
      headblk.addField("CONFIRM_DATE","Date").
              setInsertable().
              setLabel("PROJECTINVESTINFOCONFIRMDATE: Confirm Date").
              setSize(20);
      headblk.addField("CANCEL_DATE","Date").
              setInsertable().
              setLabel("PROJECTINVESTINFOCANCELDATE: Cancel Date").
              setSize(20);
      headblk.addField("NOTE").
              setInsertable().
              setLabel("PROJECTINVESTINFONOTE: Note").
              setSize(30);
      headblk.addField("STATE").
              setLabel("PROJECTINVESTINFOSTATE: State").
              setSize(15);
      headblk.setView("PROJECT_INVEST_INFO");
      headblk.defineCommand("PROJECT_INVEST_INFO_API","New__,Modify__,Remove__,Commit__,Confirm__,Cancel__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headbar.addCustomCommand("Commit","PROJECTINVESTINFOCOMMIT: Commit Project Invest Info");
      headbar.addCustomCommand("Confirm","PROJECTINVESTINFOCONFIRM: Confirm Project Invest Info");
      headbar.addCustomCommand("Cancel","PROJECTINVESTINFOCANCEL: Cancel Project Invest Info");

      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("PROJECTINVESTINFOTBLHEAD: Project Invest Infos");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      
      headbar.addCustomCommand("activateITEM1", "Invest App");
      headbar.addCustomCommand("activateITEM2", "Invest Idea");
      headbar.addCustomCommand("activateITEM3", "Invest Tech");
 


      project_invest_app_blk = mgr.newASPBlock("ITEM1");
      project_invest_app_blk.addField("ITEM0_OBJID").
                             setHidden().
                             setDbName("OBJID");
      project_invest_app_blk.addField("ITEM0_OBJVERSION").
                             setHidden().
                             setDbName("OBJVERSION");
      project_invest_app_blk.addField("ITEM0_APPLY_NO").
                             setDbName("APPLY_NO").
                             setMandatory().
                             setInsertable().
                             setHidden().
                             setLabel("PROJECTINVESTAPPITEM0APPLYNO: Apply No").
                             setSize(10);
      project_invest_app_blk.addField("LINE_NO").
                             setMandatory().
                             setInsertable().
                             setLabel("PROJECTINVESTAPPLINENO: Line No").
                             setSize(15);
      project_invest_app_blk.addField("PROJECT_FILE_TYPE").
                             setInsertable().
                             setLabel("PROJECTINVESTAPPPROJECTFILETYPE: Project File Type").
                             setSize(20);
      project_invest_app_blk.addField("FILE_NO").
                             setInsertable().
                             setLabel("PROJECTINVESTAPPFILENO: File No").
                             setSize(20);
      project_invest_app_blk.addField("FILE_NAME").
                             setInsertable().
                             setLabel("PROJECTINVESTAPPFILENAME: File Name").
                             setSize(30);
      project_invest_app_blk.addField("FILE_DATE","Date").
                             setInsertable().
                             setLabel("PROJECTINVESTAPPFILEDATE: File Date").
                             setSize(20);
      project_invest_app_blk.addField("IS_FILE").
                             setInsertable().
                             setLabel("PROJECTINVESTAPPISFILE: Is File").
                             setSize(10);
      project_invest_app_blk.setView("PROJECT_INVEST_APP");
      project_invest_app_blk.defineCommand("PROJECT_INVEST_APP_API","New__,Modify__,Remove__");
      project_invest_app_blk.setMasterBlock(headblk);
      project_invest_app_set = project_invest_app_blk.getASPRowSet();
      project_invest_app_bar = mgr.newASPCommandBar(project_invest_app_blk);
      project_invest_app_bar.defineCommand(project_invest_app_bar.OKFIND, "okFindITEM1");
      project_invest_app_bar.defineCommand(project_invest_app_bar.NEWROW, "newRowITEM1");
      project_invest_app_tbl = mgr.newASPTable(project_invest_app_blk);
      project_invest_app_tbl.setTitle("PROJECTINVESTAPPITEMHEAD1: ProjectApp");
      project_invest_app_tbl.enableRowSelect();
      project_invest_app_tbl.setWrap();
      project_invest_app_lay = project_invest_app_blk.getASPBlockLayout();
      project_invest_app_lay.setDefaultLayoutMode(project_invest_app_lay.MULTIROW_LAYOUT);

      project_invest_idea_blk = mgr.newASPBlock("ITEM2");
      project_invest_idea_blk.addField("ITEM1_OBJID").
                              setHidden().
                              setDbName("OBJID");
      project_invest_idea_blk.addField("ITEM1_OBJVERSION").
                              setHidden().
                              setDbName("OBJVERSION");
      project_invest_idea_blk.addField("ITEM1_APPLY_NO").
                              setDbName("APPLY_NO").
                              setMandatory().
                              setHidden().
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAITEM1APPLYNO: Apply No").
                              setSize(10);
      project_invest_idea_blk.addField("ITEM1_LINE_NO").
                              setDbName("LINE_NO").
                              setMandatory().
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAITEM1LINENO: Line No").
                              setSize(15);
      project_invest_idea_blk.addField("IDEA_DESC").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAIDEADESC: Idea Desc").
                              setSize(20);
      project_invest_idea_blk.addField("IDEA_RESULT").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAIDEARESULT: Idea Result").
                              setSize(30);
      project_invest_idea_blk.addField("MEETING_TIME","Date").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAMEETINGTIME: Meeting Time").
                              setSize(20);
      project_invest_idea_blk.addField("MEETING_ORDER","Number").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAMEETINGORDER: Meeting Order").
                              setSize(20);
      project_invest_idea_blk.addField("IDEA_TYPE").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAIDEATYPE: Idea Type").
                              setSize(20);
      project_invest_idea_blk.addField("ITEM1_IS_FILE").
                              setDbName("IS_FILE").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAITEM1ISFILE: Is File").
                              setSize(10);
      project_invest_idea_blk.addField("ITEM1_NOTE").
                              setDbName("NOTE").
                              setInsertable().
                              setLabel("PROJECTINVESTIDEAITEM1NOTE: Note").
                              setSize(30);
      project_invest_idea_blk.setView("PROJECT_INVEST_IDEA");
      project_invest_idea_blk.defineCommand("PROJECT_INVEST_IDEA_API","New__,Modify__,Remove__");
      project_invest_idea_blk.setMasterBlock(headblk);
      project_invest_idea_set = project_invest_idea_blk.getASPRowSet();
      project_invest_idea_bar = mgr.newASPCommandBar(project_invest_idea_blk);
      project_invest_idea_bar.defineCommand(project_invest_idea_bar.OKFIND, "okFindITEM2");
      project_invest_idea_bar.defineCommand(project_invest_idea_bar.NEWROW, "newRowITEM2");
      project_invest_idea_tbl = mgr.newASPTable(project_invest_idea_blk);
      project_invest_idea_tbl.setTitle("PROJECTINVESTIDEAITEMHEAD2: ProjectIdea");
      project_invest_idea_tbl.enableRowSelect();
      project_invest_idea_tbl.setWrap();
      project_invest_idea_lay = project_invest_idea_blk.getASPBlockLayout();
      project_invest_idea_lay.setDefaultLayoutMode(project_invest_idea_lay.MULTIROW_LAYOUT);

      project_invest_tech_blk = mgr.newASPBlock("ITEM3");
      project_invest_tech_blk.addField("ITEM2_OBJID").
                              setHidden().
                              setDbName("OBJID");
      project_invest_tech_blk.addField("ITEM2_OBJVERSION").
                              setHidden().
                              setDbName("OBJVERSION");
      project_invest_tech_blk.addField("ITEM2_APPLY_NO").
                              setDbName("APPLY_NO").
                              setMandatory().
                              setHidden().
                              setInsertable().
                              setLabel("PROJECTINVESTTECHITEM2APPLYNO: Apply No").
                              setSize(100);
      project_invest_tech_blk.addField("ITEM2_LINE_NO").
                              setDbName("LINE_NO").
                              setMandatory().
                              setInsertable().
                              setLabel("PROJECTINVESTTECHITEM2LINENO: Line No").
                              setSize(10);
      project_invest_tech_blk.addField("TECH_NAME").
                              setInsertable().
                              setLabel("PROJECTINVESTTECHTECHNAME: Tech Name").
                              setSize(30);
      project_invest_tech_blk.addField("REPORT_VALUE","Number").
                              setInsertable().
                              setLabel("PROJECTINVESTTECHREPORTVALUE: Report Value").
                              setSize(20);
      project_invest_tech_blk.addField("EVAL_VALUE","Number").
                              setInsertable().
                              setLabel("PROJECTINVESTTECHEVALVALUE: Eval Value").
                              setSize(20);
      project_invest_tech_blk.setView("PROJECT_INVEST_TECH");
      project_invest_tech_blk.defineCommand("PROJECT_INVEST_TECH_API","New__,Modify__,Remove__");
      project_invest_tech_blk.setMasterBlock(headblk);
      project_invest_tech_set = project_invest_tech_blk.getASPRowSet();
      project_invest_tech_bar = mgr.newASPCommandBar(project_invest_tech_blk);
      project_invest_tech_bar.defineCommand(project_invest_tech_bar.OKFIND, "okFindITEM3");
      project_invest_tech_bar.defineCommand(project_invest_tech_bar.NEWROW, "newRowITEM3");
      project_invest_tech_tbl = mgr.newASPTable(project_invest_tech_blk);
      project_invest_tech_tbl.setTitle("PROJECTINVESTTECHITEMHEAD3: ProjectTech");
      project_invest_tech_tbl.enableRowSelect();
      project_invest_tech_tbl.setWrap();
      project_invest_tech_lay = project_invest_tech_blk.getASPBlockLayout();
      project_invest_tech_lay.setDefaultLayoutMode(project_invest_tech_lay.MULTIROW_LAYOUT);
      
      tabs = mgr.newASPTabContainer();
      tabs.setDirtyFlagEnabled(false);
      tabs.addTab(mgr.translate("PROJECTINVESTAPPTITLE: Invest App"), "javascript:commandSet('MAIN.activateITEM1','')");
      tabs.addTab(mgr.translate("PROJECTINVESTIDEATITLE:  Invest Idea"), "javascript:commandSet('MAIN.activateITEM2','')"); 
      tabs.addTab(mgr.translate("PROJECTINVESTTECHTITLE:  Invest Tech"), "javascript:commandSet('MAIN.activateITEM3','')"); 
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);



   }
   
   
   public void activateITEM1()
   {
	   tabs.setActiveTab(1);
   }
   
   public void activateITEM2()
   {
	   tabs.setActiveTab(2);
   }

   public void activateITEM3()
   {
	   tabs.setActiveTab(3);
   }


   public void  adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "PROJECTINVESTINFODESC: Project Invest Info";
   }


   protected String getTitle()
   {
      return "PROJECTINVESTINFOTITLE: Project Invest Info";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else{
    	  headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
    	  appendToHTML(headlay.show());
      }
      
      
      if((headlay.isSingleLayout() && headset.countRows() > 0) || headlay.isCustomLayout())
      {
    	  appendToHTML(tabs.showTabsInit());
          if(tabs.getActiveTab() == 1)
          {
        	  appendToHTML(project_invest_app_lay.show());
          }
          else if(tabs.getActiveTab() == 2)
          {
        	  appendToHTML(project_invest_idea_lay.show());
          }       
          else if(tabs.getActiveTab() == 3)
          {
        	  appendToHTML(project_invest_tech_lay.show());
          }               
      }       

   }
}
