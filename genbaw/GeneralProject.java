/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralProject extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralProject");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock general_project_invest_blk;
   private ASPRowSet general_project_invest_set;
   private ASPCommandBar general_project_invest_bar;
   private ASPTable general_project_invest_tbl;
   private ASPBlockLayout general_project_invest_lay;

   private ASPBlock general_project_person_blk;
   private ASPRowSet general_project_person_set;
   private ASPCommandBar general_project_person_bar;
   private ASPTable general_project_person_tbl;
   private ASPBlockLayout general_project_person_lay;

   private ASPBlock general_project_summary_blk;
   private ASPRowSet general_project_summary_set;
   private ASPCommandBar general_project_summary_bar;
   private ASPTable general_project_summary_tbl;
   private ASPBlockLayout general_project_summary_lay;

   private ASPBlock general_project_machine_blk;
   private ASPRowSet general_project_machine_set;
   private ASPCommandBar general_project_machine_bar;
   private ASPTable general_project_machine_tbl;
   private ASPBlockLayout general_project_machine_lay;

   private ASPBlock general_project_time_blk;
   private ASPRowSet general_project_time_set;
   private ASPCommandBar general_project_time_bar;
   private ASPTable general_project_time_tbl;
   private ASPBlockLayout general_project_time_lay;

   private ASPBlock general_project_investdec_blk;
   private ASPRowSet general_project_investdec_set;
   private ASPCommandBar general_project_investdec_bar;
   private ASPTable general_project_investdec_tbl;
   private ASPBlockLayout general_project_investdec_lay;
   
   private ASPTabContainer tabs;


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralProject (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("PROJ_NO")) )
         okFind();
      else
         okFind();
      tabs.saveActiveTab();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENERALPROJECTNODATA: No data found.");
         headset.clear();
      }
      eval( general_project_invest_set.syncItemSets() );
      eval( general_project_person_set.syncItemSets() );
      eval( general_project_summary_set.syncItemSets() );
      eval( general_project_machine_set.syncItemSets() );
      eval( general_project_time_set.syncItemSets() );
      eval( general_project_investdec_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","GENERAL_PROJECT_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_invest_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_invest_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","GENERAL_PROJECT_INVEST_API.New__",general_project_invest_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_project_invest_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_person_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_person_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","GENERAL_PROJECT_PERSON_API.New__",general_project_person_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM1_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      general_project_person_set.addRow(data);
   }
   public void okFindITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_summary_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_summary_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM3","GENERAL_PROJECT_SUMMARY_API.New__",general_project_summary_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM2_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      general_project_summary_set.addRow(data);
   }
   public void okFindITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_machine_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_machine_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM4()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM4","GENERAL_PROJECT_MACHINE_API.New__",general_project_machine_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM3_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM4/DATA");
      general_project_machine_set.addRow(data);
   }
   public void okFindITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_time_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_time_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM5()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM5","GENERAL_PROJECT_TIME_API.New__",general_project_time_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM4_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM5/DATA");
      general_project_time_set.addRow(data);
   }
   public void okFindITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_project_investdec_blk);
      q.addWhereCondition("PROJ_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_project_investdec_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM6()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM6","GENERAL_PROJECT_INVESTDEC_API.New__",general_project_investdec_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM5_PROJ_NO", headset.getValue("PROJ_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM6/DATA");
      general_project_investdec_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Perform Header and Item functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void  performHEAD( String command)
   {
      int currow;
      
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      

      currow = headset.getCurrentRowNo();
      if(headlay.isMultirowLayout())
         headset.storeSelections();
      else
         headset.selectRow();
      headset.markSelectedRows( command );
      mgr.submit(trans);
      headset.goTo(currow);
   }
   public void  close()
   {

      performHEAD( "Close__" );
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("OBJSTATE").
              setHidden();
      headblk.addField("OBJEVENTS").
              setHidden();
      headblk.addField("PROJ_NO").
              setReadOnly().
              setLabel("GENERALPROJECTPROJNO: Proj No").
              setSize(20);
      headblk.addField("PROJECT_FULL_DESC").
              setInsertable().
              setLabel("GENERALPROJECTPROJECTFULLDESC: Project Full Desc").
              setSize(30);
      headblk.addField("PROJ_DESC").
              setInsertable().
              setLabel("GENERALPROJECTPROJDESC: Proj Desc").
              setSize(30);
      headblk.addField("PROJECT_FORMAL_NO").
              setInsertable().
              setLabel("GENERALPROJECTPROJECTFORMALNO: Project Formal No").
              setSize(20);
      
      headblk.addField("PROJECT_SORT").
              setInsertable().
              setDynamicLOV("PROJECT_SORT").
              setLabel("GENERALPROJECTPROJECTSORT: Project Sort").
              setSize(10);
      headblk.addField("PROJECT_SORT_NAME").
		      setReadOnly().
		      setFunction("PROJECT_SORT_API.Get_PROJECT_SORT_NAME(:PROJECT_SORT)").
		      setLabel("GENERALPROJECTPROJECTSORTNAME: Project Sort Name").
		      setSize(20);
      mgr.getASPField("PROJECT_SORT").setValidation("PROJECT_SORT_NAME");
      
      headblk.addField("PROJECT_TYPE").
              setMandatory().
              setInsertable().
              setDynamicLOV("PROJECT_TYPE").
              setLabel("GENERALPROJECTPROJECTTYPE: Project Type").
              setSize(10);
      headblk.addField("PROJECT_TYPE_NAME").
      		  setReadOnly().
		      setFunction("PROJECT_TYPE_API.Get_PROJECT_TYPE_NAME(:PROJECT_TYPE)").
		      setLabel("GENERALPROJECTPROJECTTYPENAME: Project Type Name").
		      setSize(20);
      mgr.getASPField("PROJECT_TYPE").setValidation("PROJECT_TYPE_NAME");
      
      headblk.addField("PROJECT_PHASE").
              setInsertable().
              setDynamicLOV("PROJECT_PHASE_LINE","PROJECT_TYPE PROJECT_TYPE_NO").
              setLabel("GENERALPROJECTPROJECTPHASE: Project Phase").
              setSize(10);
      headblk.addField("PROJECT_PHASE_NAME").
		      setReadOnly().
		      setFunction("PROJECT_PHASE_LINE_API.Get_PROJECT_PHASE_NAME(:PROJECT_TYPE,:PROJECT_PHASE)").
		      setLabel("GENERALPROJECTPROJECTPHASENAME: Project Phase Name").
		      setSize(20);
      
      headblk.addField("IS_PROPHASE").
              setInsertable().
              setCheckBox("FALSE,TRUE").
              setLabel("GENERALPROJECTISPROPHASE: Is Prophase").
              setSize(20);
      headblk.addField("PROJECT_AREA").
              setInsertable().
              setLabel("GENERALPROJECTPROJECTAREA: Project Area").
              setSize(30);
      headblk.addField("PROVINCE").
              setInsertable().
              setHidden().
              setLabel("GENERALPROJECTPROVINCE: Province").
              setSize(20);
      headblk.addField("CITY").
              setInsertable().
              setHidden().
              setLabel("GENERALPROJECTCITY: City").
              setSize(20);
      headblk.addField("AREA").
              setInsertable().
              setMandatory().
              setDynamicLOV("GENERAL_AREA_DATA").
              setLabel("GENERALPROJECTAREA: Area").
              setSize(20);
      headblk.addField("AREA_NAME").  
              setReadOnly().
              setFunction("GENERAL_AREA_DATA_API.Get_Area_Desc(:AREA)").
              setLabel("GENERALPROJECTAREANAME: Area Name").        
              setSize(20);
      mgr.getASPField("AREA").setValidation("AREA_NAME");
      
      headblk.addField("CHILD_COMPANY").
              setInsertable().
              setDynamicLOV("GENERAL_ZONE").
              setLabel("GENERALPROJECTCHILDCOMPANY: Child Company").
              setSize(30);
      headblk.addField("CHILD_COMPANY_NAME").  
              setReadOnly().
              setFunction("GENERAL_ZONE_API.Get_Zone_Desc(:CHILD_COMPANY)").
              setLabel("GENERALPROJECTCHILDCOMPANYNAME: Child Company Name").        
              setSize(20);
      mgr.getASPField("CHILD_COMPANY").setValidation("CHILD_COMPANY_NAME");
      headblk.addField("PROJECT_DEPT_NO").
              setMandatory().
              setInsertable().
              setDynamicLOV("GENERAL_ZONE").
              setLabel("GENERALPROJECTPROJECTDEPTNO: Project Dept No").
              setSize(20);
      headblk.addField("PROJECT_DEPT_NAME").  
              setReadOnly().
              setFunction("GENERAL_ZONE_API.Get_Zone_Desc(:PROJECT_DEPT_NO)").
              setLabel("GENERALPROJECTPROJECTDEPTNAME: Project Dept Name").        
              setSize(20);
      mgr.getASPField("PROJECT_DEPT_NO").setValidation("PROJECT_DEPT_NAME");
      headblk.addField("PROJECT_MES_ADD").
              setInsertable().
              setLabel("GENERALPROJECTPROJECTMESADD: Project Mes Add").
              setSize(30);
      headblk.addField("POST_CODE").
              setInsertable().
              setLabel("GENERALPROJECTPOSTCODE: Post Code").
              setSize(20);
      headblk.addField("PHONE").
              setInsertable().
              setLabel("GENERALPROJECTPHONE: Phone").
              setSize(20);
      headblk.addField("FAX").
              setInsertable().
              setLabel("GENERALPROJECTFAX: Fax").
              setSize(20);
      headblk.addField("MAIL").
              setInsertable().
              setLabel("GENERALPROJECTMAIL: Mail").
              setSize(20);
      headblk.addField("AREA_NO").
              setInsertable().
              setLabel("GENERALPROJECTAREANO: Area No").
              setSize(20);
      headblk.addField("IS_ALLOW").
              setInsertable().
              setCheckBox("FALSE,TRUE").
              setLabel("GENERALPROJECTISALLOW: Is Allow").
              setSize(10);
      headblk.addField("ALLOW_NO").
              setInsertable().
              setLabel("GENERALPROJECTALLOWNO: Allow No").
              setSize(20);
      headblk.addField("ALLOW_TIME","Date").
              setInsertable().
              setLabel("GENERALPROJECTALLOWTIME: Allow Time").
              setSize(30);
      headblk.addField("IS_ISSUE").
              setInsertable().
              setCheckBox("FALSE,TRUE").
              setLabel("GENERALPROJECTISISSUE: Is Issue").
              setSize(10);
      headblk.addField("ISSUE_NO").
              setInsertable().
              setLabel("GENERALPROJECTISSUENO: Issue No").
              setSize(20);
      headblk.addField("ISSUE_DATE","Date").
              setInsertable().
              setLabel("GENERALPROJECTISSUEDATE: Issue Date").
              setSize(20);
      headblk.addField("CHILD_COMPAY_DEC").
              setInsertable().
              setLabel("GENERALPROJECTCHILDCOMPAYDEC: Child Compay Dec").
              setSize(20);
      headblk.addField("CHILD_COMPANY_ORDER").
              setInsertable().
              setLabel("GENERALPROJECTCHILDCOMPANYORDER: Child Company Order").
              setSize(20);
      headblk.addField("CHILD_COMPANY_DATE","Date").
              setInsertable().
              setLabel("GENERALPROJECTCHILDCOMPANYDATE: Child Company Date").
              setSize(20);
      headblk.addField("GROUP_COMPANY_DEC").
              setInsertable().
              setLabel("GENERALPROJECTGROUPCOMPANYDEC: Group Company Dec").
              setSize(20);
      headblk.addField("GROUP_COMPANY_ORDER").
              setInsertable().
              setLabel("GENERALPROJECTGROUPCOMPANYORDER: Group Company Order").
              setSize(20);
      headblk.addField("GROUP_COMPANY_DATE","Date").
              setInsertable().
              setLabel("GENERALPROJECTGROUPCOMPANYDATE: Group Company Date").
              setSize(20);
      headblk.addField("RIGHT_TYPE").
              setInsertable().
              setLabel("GENERALPROJECTRIGHTTYPE: Right Type").
              setSize(20);
      headblk.addField("NOTE").
              setInsertable().
              setLabel("GENERALPROJECTNOTE: Note").
              setSize(30);
      headblk.addField("STATE").
              setLabel("GENERALPROJECTSTATE: State").
              setReadOnly().
              setSize(15);
      headblk.setView("GENERAL_PROJECT");
      headblk.defineCommand("GENERAL_PROJECT_API","New__,Modify__,Remove__,Close__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headbar.addCustomCommand("Close","GENERALPROJECTCLOSE: Close General Project");
      headbar.addCommandValidConditions("Close", "OBJSTATE",    "Enable",      "Initialized"); 
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("GENERALPROJECTTBLHEAD: General Projects");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      
      headbar.addCustomCommand("activateITEM1", "Project Invest");
      headbar.addCustomCommand("activateITEM2", "Project Person");
      headbar.addCustomCommand("activateITEM3", "Project Summary");
      headbar.addCustomCommand("activateITEM4", "Project Machine");
      headbar.addCustomCommand("activateITEM5", "Project Time");
      headbar.addCustomCommand("activateITEM6", "Project Investdec");
      
      headlay.setSimple("PROJECT_SORT_NAME");
      headlay.setSimple("PROJECT_TYPE_NAME");
      headlay.setSimple("PROJECT_PHASE_NAME");
      headlay.setSimple("CHILD_COMPANY_NAME");
      headlay.setSimple("AREA_NAME");
      headlay.setSimple("PROJECT_SORT_NAME");
      headlay.setSimple("PROJECT_DEPT_NAME");

 


      general_project_invest_blk = mgr.newASPBlock("ITEM1");
      general_project_invest_blk.addField("ITEM0_OBJID").
                                 setHidden().
                                 setDbName("OBJID");
      general_project_invest_blk.addField("ITEM0_OBJVERSION").
                                 setHidden().
                                 setDbName("OBJVERSION");
      general_project_invest_blk.addField("ITEM0_PROJ_NO").
                                 setDbName("PROJ_NO").
                                 setMandatory().
                                 setHidden().
                                 setInsertable().
                                 setLabel("GENERALPROJECTINVESTITEM0PROJNO: Proj No").
                                 setSize(10);
      general_project_invest_blk.addField("LINE_NO").
                                // setMandatory().
      						     setHidden().
                                 setReadOnly().
                                 setLabel("GENERALPROJECTINVESTLINENO: Line No").
                                 setSize(10);
      general_project_invest_blk.addField("INVEST_NAME").
                                 setInsertable().
                                 setLabel("GENERALPROJECTINVESTINVESTNAME: Invest Name").
                                 setSize(30);
      general_project_invest_blk.addField("INVEST_RATE","Number").
                                 setInsertable().
                                 setLabel("GENERALPROJECTINVESTINVESTRATE: Invest Rate").
                                 setSize(15);
      general_project_invest_blk.addField("MODIFY_VER","Number").
                                 setInsertable().
                                 setHidden().
                                 setLabel("GENERALPROJECTINVESTMODIFYVER: Modify Ver").
                                 setSize(15);
      general_project_invest_blk.addField("MODEFY_DATE","Date").
                                 setInsertable().
                                 setLabel("GENERALPROJECTINVESTMODEFYDATE: Modefy Date").
                                 setSize(10);
      general_project_invest_blk.addField("ITEM0_NOTE").
                                 setDbName("NOTE").
                                 setInsertable().
                                 setLabel("GENERALPROJECTINVESTITEM0NOTE: Note").
                                 setSize(30);
      general_project_invest_blk.setView("GENERAL_PROJECT_INVEST");
      general_project_invest_blk.defineCommand("GENERAL_PROJECT_INVEST_API","New__,Modify__,Remove__");
      general_project_invest_blk.setMasterBlock(headblk);
      general_project_invest_set = general_project_invest_blk.getASPRowSet();
      general_project_invest_bar = mgr.newASPCommandBar(general_project_invest_blk);
      general_project_invest_bar.defineCommand(general_project_invest_bar.OKFIND, "okFindITEM1");
      general_project_invest_bar.defineCommand(general_project_invest_bar.NEWROW, "newRowITEM1");
      general_project_invest_tbl = mgr.newASPTable(general_project_invest_blk);
      general_project_invest_tbl.setTitle("GENERALPROJECTINVESTITEMHEAD1: ProjectInvest");
      general_project_invest_tbl.enableRowSelect();
      general_project_invest_tbl.setWrap();
      general_project_invest_lay = general_project_invest_blk.getASPBlockLayout();
      general_project_invest_lay.setDefaultLayoutMode(general_project_invest_lay.MULTIROW_LAYOUT);

      general_project_person_blk = mgr.newASPBlock("ITEM2");
      general_project_person_blk.addField("ITEM1_OBJID").
                                 setHidden().
                                 setDbName("OBJID");
      general_project_person_blk.addField("ITEM1_OBJVERSION").
                                 setHidden().
                                 setDbName("OBJVERSION");
      general_project_person_blk.addField("ITEM1_PROJ_NO").
                                 setDbName("PROJ_NO").
                                 setMandatory().
                                 setHidden().
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONITEM1PROJNO: Proj No").
                                 setSize(10);
      
      general_project_person_blk.addField("PERSON_NO").
                                 setMandatory().
                                 setInsertable().
                                 setDynamicLOV("PERSON_INFO_LOV").
                                 setLabel("GENERALPROJECTPERSONPERSONNO: Person No").
                                 setSize(10);
      general_project_person_blk.addField("PERSON_NAME").
							     setReadOnly().
							     setFunction("PERSON_INFO_API.GET_NAME(:PERSON_NO)").
							     setLabel("GENERALPROJECTPERSONPERSONNAME: Person Name").
							     setSize(15);
      mgr.getASPField("PERSON_NO").setValidation("PERSON_NAME");
      
      general_project_person_blk.addField("PERSON_TYPE").
                                 setInsertable().
                                 setDynamicLOV("GENERAL_POSITION").
                                 setLabel("GENERALPROJECTPERSONPERSONTYPE: Person Type").
                                 setSize(15);
      general_project_person_blk.addField("PERSON_TYPE_NAME").
                                 setReadOnly().
                                 setFunction("GENERAL_POSITION_API.Get_Pos_Desc(:PERSON_TYPE)").
                                 setLabel("GENERALPROJECTPERSONPERSONTYPENAME: Person Type Name").
                                 setSize(20);
      mgr.getASPField("PERSON_TYPE").setValidation("PERSON_TYPE_NAME");
      general_project_person_blk.addField("OFFICE_PHONE").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONOFFICEPHONE: Office Phone").
                                 setSize(20);
      general_project_person_blk.addField("ITEM1_PHONE").
                                 setDbName("PHONE").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONITEM1PHONE: Phone").
                                 setSize(20);
      general_project_person_blk.addField("ITEM1_MAIL").
                                 setDbName("MAIL").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONITEM1MAIL: Mail").
                                 setSize(20);
      general_project_person_blk.addField("ITEM1_MODIFY_VER","Number").
                                 setDbName("MODIFY_VER").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONITEM1MODIFYVER: Modify Ver").
                                 setSize(20);
      general_project_person_blk.addField("MODIFY_DATE","Date").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONMODIFYDATE: Modify Date").
                                 setSize(20);
      general_project_person_blk.addField("ITEM1_NOTE").
                                 setDbName("NOTE").
                                 setInsertable().
                                 setLabel("GENERALPROJECTPERSONITEM1NOTE: Note").
                                 setSize(30);
      general_project_person_blk.setView("GENERAL_PROJECT_PERSON");
      general_project_person_blk.defineCommand("GENERAL_PROJECT_PERSON_API","New__,Modify__,Remove__");
      general_project_person_blk.setMasterBlock(headblk);
      general_project_person_set = general_project_person_blk.getASPRowSet();
      general_project_person_bar = mgr.newASPCommandBar(general_project_person_blk);
      general_project_person_bar.defineCommand(general_project_person_bar.OKFIND, "okFindITEM2");
      general_project_person_bar.defineCommand(general_project_person_bar.NEWROW, "newRowITEM2");
      general_project_person_tbl = mgr.newASPTable(general_project_person_blk);
      general_project_person_tbl.setTitle("GENERALPROJECTPERSONITEMHEAD2: ProjectPerson");
      general_project_person_tbl.enableRowSelect();
      general_project_person_tbl.setWrap();
      general_project_person_lay = general_project_person_blk.getASPBlockLayout();
      general_project_person_lay.setDefaultLayoutMode(general_project_person_lay.MULTIROW_LAYOUT);
      general_project_person_lay.setSimple("PERSON_TYPE_NAME");
      
      general_project_person_lay.setSimple("PERSON_NAME");

      general_project_summary_blk = mgr.newASPBlock("ITEM3");
      general_project_summary_blk.addField("ITEM2_OBJID").
                                  setHidden().
                                  setDbName("OBJID");
      general_project_summary_blk.addField("ITEM2_OBJVERSION").
                                  setHidden().
                                  setDbName("OBJVERSION");
      general_project_summary_blk.addField("ITEM2_PROJ_NO").
                                  setDbName("PROJ_NO").
                                  setMandatory().
                                  setInsertable().
                                  setHidden().
                                  setLabel("GENERALPROJECTSUMMARYITEM2PROJNO: Proj No").
                                  setSize(10);
      general_project_summary_blk.addField("SUMMARY_NO").
                                  setMandatory().
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYSUMMARYNO: Summary No").
                                  setSize(10);
      general_project_summary_blk.addField("SUMMARY_NAME").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYSUMMARYNAME: Summary Name").
                                  setSize(30);
      general_project_summary_blk.addField("INFO_TYPE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYINFOTYPE: Info Type").
                                  setSize(20);
      general_project_summary_blk.addField("DATA_TYPE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYDATATYPE: Data Type").
                                  setSize(20);
      general_project_summary_blk.addField("PROJECT_UNIT").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYPROJECTUNIT: Project Unit").
                                  setSize(20);
      general_project_summary_blk.addField("INFO_NOTE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYINFONOTE: Info Note").
                                  setSize(30);
      general_project_summary_blk.addField("INDEX_NO").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYINDEXNO: Index No").
                                  setSize(20);
      general_project_summary_blk.addField("ITEM2_NOTE").
                                  setDbName("NOTE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTSUMMARYITEM2NOTE: Note").
                                  setSize(30);
      general_project_summary_blk.setView("GENERAL_PROJECT_SUMMARY");
      general_project_summary_blk.defineCommand("GENERAL_PROJECT_SUMMARY_API","New__,Modify__,Remove__");
      general_project_summary_blk.setMasterBlock(headblk);
      general_project_summary_set = general_project_summary_blk.getASPRowSet();
      general_project_summary_bar = mgr.newASPCommandBar(general_project_summary_blk);
      general_project_summary_bar.defineCommand(general_project_summary_bar.OKFIND, "okFindITEM3");
      general_project_summary_bar.defineCommand(general_project_summary_bar.NEWROW, "newRowITEM3");
      general_project_summary_tbl = mgr.newASPTable(general_project_summary_blk);
      general_project_summary_tbl.setTitle("GENERALPROJECTSUMMARYITEMHEAD3: ProjectSummary");
      general_project_summary_tbl.enableRowSelect();
      general_project_summary_tbl.setWrap();
      general_project_summary_lay = general_project_summary_blk.getASPBlockLayout();
      general_project_summary_lay.setDefaultLayoutMode(general_project_summary_lay.MULTIROW_LAYOUT);
      

      general_project_machine_blk = mgr.newASPBlock("ITEM4");
      general_project_machine_blk.addField("ITEM3_OBJID").
                                  setHidden().
                                  setDbName("OBJID");
      general_project_machine_blk.addField("ITEM3_OBJVERSION").
                                  setHidden().
                                  setDbName("OBJVERSION");
      general_project_machine_blk.addField("ITEM3_PROJ_NO").
                                  setDbName("PROJ_NO").
                                  setMandatory().
                                  setHidden().
                                  setInsertable().
                                  setLabel("GENERALPROJECTMACHINEITEM3PROJNO: Proj No").
                                  setSize(10);
      general_project_machine_blk.addField("MACHINE_NO").
                                  setMandatory().
                                  setDynamicLOV("GENERAL_MACH_GROUP").
                                  setInsertable().
                                  setLabel("GENERALPROJECTMACHINEMACHINENO: Machine No").
                                  setSize(15);
      general_project_machine_blk.addField("MACHINE_NAME").
                                    setReadOnly().
                                    setFunction("GENERAL_MACH_GROUP_API.Get_Mach_Grp_Desc(:MACHINE_NO)").
                                    setLabel("GENERALPROJECTMACHINEMACHINENAME: Machine Name").
                                    setSize(20);
      mgr.getASPField("MACHINE_NO").setValidation("MACHINE_NAME");
      general_project_machine_blk.addField("MACHINE_SPACE","Number").
                                  setInsertable().
                                  setLabel("GENERALPROJECTMACHINEMACHINESPACE: Machine Space").
                                  setSize(20);
      general_project_machine_blk.addField("MACHINE_STATE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTMACHINEMACHINESTATE: Machine State").
                                  setSize(20);
      general_project_machine_blk.addField("ITEM3_NOTE").
                                  setDbName("NOTE").
                                  setInsertable().
                                  setLabel("GENERALPROJECTMACHINEITEM3NOTE: Note").
                                  setSize(30);
      general_project_machine_blk.setView("GENERAL_PROJECT_MACHINE");
      general_project_machine_blk.defineCommand("GENERAL_PROJECT_MACHINE_API","New__,Modify__,Remove__");
      general_project_machine_blk.setMasterBlock(headblk);
      general_project_machine_set = general_project_machine_blk.getASPRowSet();
      general_project_machine_bar = mgr.newASPCommandBar(general_project_machine_blk);
      general_project_machine_bar.defineCommand(general_project_machine_bar.OKFIND, "okFindITEM4");
      general_project_machine_bar.defineCommand(general_project_machine_bar.NEWROW, "newRowITEM4");
      general_project_machine_tbl = mgr.newASPTable(general_project_machine_blk);
      general_project_machine_tbl.setTitle("GENERALPROJECTMACHINEITEMHEAD4: ProjectMachine");
      general_project_machine_tbl.enableRowSelect();
      general_project_machine_tbl.setWrap();
      general_project_machine_lay = general_project_machine_blk.getASPBlockLayout();
      general_project_machine_lay.setDefaultLayoutMode(general_project_machine_lay.MULTIROW_LAYOUT);
      general_project_machine_lay.setSimple("MACHINE_NAME");

      general_project_time_blk = mgr.newASPBlock("ITEM5");
      general_project_time_blk.addField("ITEM4_OBJID").
                               setHidden().
                               setDbName("OBJID");
      general_project_time_blk.addField("ITEM4_OBJVERSION").
                               setHidden().
                               setDbName("OBJVERSION");
      general_project_time_blk.addField("ITEM4_PROJ_NO").
                               setDbName("PROJ_NO").
                               setMandatory().
                               setHidden().
                               setInsertable().
                               setLabel("GENERALPROJECTTIMEITEM4PROJNO: Proj No").
                               setSize(10);
      general_project_time_blk.addField("ITEM4_LINE_NO").
                               setDbName("LINE_NO").
                               setMandatory().
                               setInsertable().
                               setLabel("GENERALPROJECTTIMEITEM4LINENO: Line No").
                               setSize(10);
      general_project_time_blk.addField("TIME_TYPE").
                               setInsertable().
                               setLabel("GENERALPROJECTTIMETIMETYPE: Time Type").
                               setSize(20);
      general_project_time_blk.addField("PROJECT_DATE","Date").
                               setInsertable().
                               setLabel("GENERALPROJECTTIMEPROJECTDATE: Project Date").
                               setSize(20);
      general_project_time_blk.addField("ITEM4_NOTE").
                               setDbName("NOTE").
                               setInsertable().
                               setLabel("GENERALPROJECTTIMEITEM4NOTE: Note").
                               setSize(30);
      general_project_time_blk.setView("GENERAL_PROJECT_TIME");
      general_project_time_blk.defineCommand("GENERAL_PROJECT_TIME_API","New__,Modify__,Remove__");
      general_project_time_blk.setMasterBlock(headblk);
      general_project_time_set = general_project_time_blk.getASPRowSet();
      general_project_time_bar = mgr.newASPCommandBar(general_project_time_blk);
      general_project_time_bar.defineCommand(general_project_time_bar.OKFIND, "okFindITEM5");
      general_project_time_bar.defineCommand(general_project_time_bar.NEWROW, "newRowITEM5");
      general_project_time_tbl = mgr.newASPTable(general_project_time_blk);
      general_project_time_tbl.setTitle("GENERALPROJECTTIMEITEMHEAD5: ProjectTime");
      general_project_time_tbl.enableRowSelect();
      general_project_time_tbl.setWrap();
      general_project_time_lay = general_project_time_blk.getASPBlockLayout();
      general_project_time_lay.setDefaultLayoutMode(general_project_time_lay.MULTIROW_LAYOUT);

      general_project_investdec_blk = mgr.newASPBlock("ITEM6");
      general_project_investdec_blk.addField("ITEM5_OBJID").
                                    setHidden().
                                    setDbName("OBJID");
      general_project_investdec_blk.addField("ITEM5_OBJVERSION").
                                    setHidden().
                                    setDbName("OBJVERSION");
      general_project_investdec_blk.addField("ITEM5_PROJ_NO").
                                    setDbName("PROJ_NO").
                                    setMandatory().
                                    setHidden().
                                    setInsertable().
                                    setLabel("GENERALPROJECTINVESTDECITEM5PROJNO: Proj No").
                                    setSize(10);
      general_project_investdec_blk.addField("ITEM5_LINE_NO").
                                    setDbName("LINE_NO").
                                    setMandatory().
                                    setInsertable().
                                    setLabel("GENERALPROJECTINVESTDECITEM5LINENO: Line No").
                                    setSize(20);
      general_project_investdec_blk.addField("INVEST_TYPE").
                                    setInsertable().
                                    setLabel("GENERALPROJECTINVESTDECINVESTTYPE: Invest Type").
                                    setSize(30);
      general_project_investdec_blk.addField("INVEST_MONEY","Number").
                                    setInsertable().
                                    setLabel("GENERALPROJECTINVESTDECINVESTMONEY: Invest Money").
                                    setSize(20);
      general_project_investdec_blk.addField("ITEM5_NOTE").
                                    setDbName("NOTE").
                                    setInsertable().
                                    setLabel("GENERALPROJECTINVESTDECITEM5NOTE: Note").
                                    setSize(30);
      general_project_investdec_blk.setView("GENERAL_PROJECT_INVESTDEC");
      general_project_investdec_blk.defineCommand("GENERAL_PROJECT_INVESTDEC_API","New__,Modify__,Remove__");
      general_project_investdec_blk.setMasterBlock(headblk);
      general_project_investdec_set = general_project_investdec_blk.getASPRowSet();
      general_project_investdec_bar = mgr.newASPCommandBar(general_project_investdec_blk);
      general_project_investdec_bar.defineCommand(general_project_investdec_bar.OKFIND, "okFindITEM6");
      general_project_investdec_bar.defineCommand(general_project_investdec_bar.NEWROW, "newRowITEM6");
      general_project_investdec_tbl = mgr.newASPTable(general_project_investdec_blk);
      general_project_investdec_tbl.setTitle("GENERALPROJECTINVESTDECITEMHEAD6: ProjectInvestDesc");
      general_project_investdec_tbl.enableRowSelect();
      general_project_investdec_tbl.setWrap();
      general_project_investdec_lay = general_project_investdec_blk.getASPBlockLayout();
      general_project_investdec_lay.setDefaultLayoutMode(general_project_investdec_lay.MULTIROW_LAYOUT);
      
      
      tabs = mgr.newASPTabContainer();
      tabs.setDirtyFlagEnabled(false);
      tabs.addTab(mgr.translate("GENERALPROJECTINVESTTITLE: Project Invest"), "javascript:commandSet('MAIN.activateITEM1','')");
      tabs.addTab(mgr.translate("GENERALPROJECTPERSONTITLE:  Project Person"), "javascript:commandSet('MAIN.activateITEM2','')");
      tabs.addTab(mgr.translate("GENERALPROJECTSUMMARYTITLE: Project Summary"), "javascript:commandSet('MAIN.activateITEM3','')");
      tabs.addTab(mgr.translate("GENERALPROJECTMACHINETITLE: Project Machine"), "javascript:commandSet('MAIN.activateITEM4','')");
      tabs.addTab(mgr.translate("GENERALPROJECTTIMETITLE:  Project Time"), "javascript:commandSet('MAIN.activateITEM5','')");
      tabs.addTab(mgr.translate("GENERALPROJECTINVESTDECTITLE: Project Investdec"), "javascript:commandSet('MAIN.activateITEM6','')");      
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);




   }
   
   
   public void activateITEM1()
   {
	   tabs.setActiveTab(1);
   }
   
   public void activateITEM2()
   {
	   tabs.setActiveTab(2);
   }

   public void activateITEM3()
   {
	   tabs.setActiveTab(3);
   }
   
   public void activateITEM4()
   {
	   tabs.setActiveTab(4);
   }
   
   public void activateITEM5()
   {
	   tabs.setActiveTab(5);

   }

   public void activateITEM6()
   {
	   tabs.setActiveTab(6);
   }   



   public void  adjust()
   {
      // fill function body
      headbar.removeCustomCommand("activateITEM1");
      headbar.removeCustomCommand("activateITEM2");
      headbar.removeCustomCommand("activateITEM3");
      headbar.removeCustomCommand("activateITEM4");
      headbar.removeCustomCommand("activateITEM5");
      headbar.removeCustomCommand("activateITEM6");
      
      if(headlay.isMultirowLayout()){
         headset.storeSelections();
         ASPBuffer selected_fields=headset.getSelectedRows("OBJSTATE");
         for(int i=0;i<selected_fields.countItems();i++){
             ASPBuffer subBuff = selected_fields.getBufferAt(i);
             String state=subBuff.getValueAt(0);
             if( "Closed".equals(state)){
                 headbar.disableCommand(headbar.DELETE);
                 headbar.disableCommand(headbar.EDITROW);   
            }
         }  
      } 
         else {
         if(headset.countRows()>0){
          String state = headset.getValue("OBJSTATE");
          if( headlay.isSingleLayout() && ("Closed".equals(state))){ 
                headbar.disableCommand(headbar.DELETE);
                headbar.disableCommand(headbar.EDITROW); 
                general_project_invest_bar.disableCommand(general_project_invest_bar.NEWROW);
                general_project_invest_bar.disableCommand(general_project_invest_bar.DELETE);
                general_project_invest_bar.disableCommand(general_project_invest_bar.EDITROW);
                general_project_person_bar.disableCommand(general_project_person_bar.NEWROW);
                general_project_person_bar.disableCommand(general_project_person_bar.DELETE);
                general_project_person_bar.disableCommand(general_project_person_bar.EDITROW);
                general_project_summary_bar.disableCommand(general_project_summary_bar.NEWROW);
                general_project_summary_bar.disableCommand(general_project_summary_bar.DELETE);
                general_project_summary_bar.disableCommand(general_project_summary_bar.EDITROW);
                general_project_machine_bar.disableCommand(general_project_machine_bar.NEWROW);
                general_project_machine_bar.disableCommand(general_project_machine_bar.DELETE);
                general_project_machine_bar.disableCommand(general_project_machine_bar.EDITROW);
                general_project_time_bar.disableCommand(general_project_time_bar.NEWROW);
                general_project_time_bar.disableCommand(general_project_time_bar.DELETE);
                general_project_time_bar.disableCommand(general_project_time_bar.EDITROW);
                general_project_investdec_bar.disableCommand(general_project_investdec_bar.NEWROW);
                general_project_investdec_bar.disableCommand(general_project_investdec_bar.DELETE);
                general_project_investdec_bar.disableCommand(general_project_investdec_bar.EDITROW);
          }
        }       
      }
      
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENERALPROJECTDESC: General Project";
   }


   protected String getTitle()
   {
      return "GENERALPROJECTTITLE: General Project";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      
//      if(headset.countRows() > 0)
//      {
//    	  mgr.getASPField("PROJECT_PHASE").setLOVProperty("WHERE","PROJECT_TYPE_NO ='" +headset.getValue("PROJECT_TYPE")+ "'");
//      }	  
      
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else{
    	  headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
    	  appendToHTML(headlay.show());
      }
      
      if((headlay.isSingleLayout() && headset.countRows() > 0) || headlay.isCustomLayout())
      {
    	  appendToHTML(tabs.showTabsInit());
          if(tabs.getActiveTab() == 1)
          {
        	  appendToHTML(general_project_invest_lay.show());
          }
          else if(tabs.getActiveTab() == 2)
          {
        	  appendToHTML(general_project_person_lay.show());
          }
          else if(tabs.getActiveTab() == 3)
          {
        	  appendToHTML(general_project_summary_lay.show());
          }
          else if(tabs.getActiveTab() == 4)
          {
        	  appendToHTML(general_project_machine_lay.show());
          }
          else if(tabs.getActiveTab() == 5)
          {
        	  appendToHTML(general_project_time_lay.show());
          }
          else if(tabs.getActiveTab() == 6)
          {
        	  appendToHTML(general_project_investdec_lay.show());
          }          
      }

   }
}
