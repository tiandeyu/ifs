/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class ProjectBuildPrepare extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.ProjectBuildPrepare");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock project_build_app_blk;
   private ASPRowSet project_build_app_set;
   private ASPCommandBar project_build_app_bar;
   private ASPTable project_build_app_tbl;
   private ASPBlockLayout project_build_app_lay;

   private ASPBlock project_build_confirm_blk;
   private ASPRowSet project_build_confirm_set;
   private ASPCommandBar project_build_confirm_bar;
   private ASPTable project_build_confirm_tbl;
   private ASPBlockLayout project_build_confirm_lay;
   
   private ASPTabContainer tabs;   

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  ProjectBuildPrepare (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("APPLY_NO")) )
         okFind();
      else
         okFind();
      tabs.saveActiveTab();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.addWhereCondition("PROJECT_BUILD_DB = ?");
      q.addParameter("PROJECT_BUILD_DB", "1");
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("PROJECTBUILDPREPARENODATA: No data found.");
         headset.clear();
      }
      eval( project_build_app_set.syncItemSets() );
      eval( project_build_confirm_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","PROJECT_BUILD_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("PROJECT_BUILD_DB", "1");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(project_build_app_blk);
      q.addWhereCondition("APPLY_NO = ?");
      q.addParameter("APPLY_NO", headset.getValue("APPLY_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,project_build_app_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","PROJECT_BUILD_APP_API.New__",project_build_app_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_APPLY_NO", headset.getValue("APPLY_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      project_build_app_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(project_build_confirm_blk);
      q.addWhereCondition("APPLY_NO = ?");
      q.addParameter("APPLY_NO", headset.getValue("APPLY_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,project_build_confirm_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","PROJECT_BUILD_CONFIRM_API.New__",project_build_confirm_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM1_APPLY_NO", headset.getValue("APPLY_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      project_build_confirm_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Perform Header and Item functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void  performHEAD( String command)
   {
      int currow;
      
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      

      currow = headset.getCurrentRowNo();
      if(headlay.isMultirowLayout())
         headset.storeSelections();
      else
         headset.selectRow();
      headset.markSelectedRows( command );
      mgr.submit(trans);
      headset.goTo(currow);
   }
   public void  commit()
   {

      performHEAD( "Commit__" );
   }
   public void  confirm()
   {

      performHEAD( "Confirm__" );
   }
   public void  cancel()
   {

      performHEAD( "Cancel__" );
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("OBJSTATE").
              setHidden();
      headblk.addField("OBJEVENTS").
              setHidden();
      headblk.addField("APPLY_NO").
              setMandatory().
              setInsertable().
              setLabel("PROJECTBUILDPREPAREAPPLYNO: Apply No").
              setSize(15);
      headblk.addField("APPLY_NAME").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREAPPLYNAME: Apply Name").
              setSize(30);
      headblk.addField("PROJECT_NO").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTNO: Project No").
              setSize(20);
      headblk.addField("PROJECT_PHASE").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTPHASE: Project Phase").
              setSize(20);
      headblk.addField("PROJECT_AREA").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTAREA: Project Area").
              setSize(20);
      headblk.addField("PROJECT_ADD").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTADD: Project Add").
              setSize(30);
      headblk.addField("PROJECT_SIZE").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTSIZE: Project Size").
              setSize(20);
      headblk.addField("PROJECT_SIZE_DESC").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPROJECTSIZEDESC: Project Size Desc").
              setSize(30);
      headblk.addField("MESSAGE_PERSON").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREMESSAGEPERSON: Message Person").
              setSize(20);
      headblk.addField("APPLY_NUM","Number").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREAPPLYNUM: Apply Num").
              setSize(15);
      headblk.addField("WORK_STATE").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREWORKSTATE: Work State").
              setSize(20);
      headblk.addField("CHECK_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECHECKDATE: Check Date").
              setSize(20);
      headblk.addField("CHECK_DEPT").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECHECKDEPT: Check Dept").
              setSize(20);
      headblk.addField("ALLOW_DESC").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREALLOWDESC: Allow Desc").
              setSize(30);
      headblk.addField("CHECK_DESC").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECHECKDESC: Check Desc").
              setSize(20);
      headblk.addField("PLAN_START_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREPLANSTARTDATE: Plan Start Date").
              setSize(20);
      headblk.addField("ACTUAL_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILPREPAREDACTUALDATE: Actual Date").
              setSize(20);
      headblk.addField("REPORT_VALUE","Number").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREREPORTVALUE: Report Value").
              setSize(15);
      headblk.addField("CONFIRM_VALUE","Number").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECONFIRMVALUE: Confirm Value").
              setSize(15);
      headblk.addField("APPLY_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILDPREPAREAPPLYDATE: Apply Date").
              setSize(20);
      headblk.addField("CONFIRM_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECONFIRMDATE: Confirm Date").
              setSize(20);
      headblk.addField("CANCEL_DATE","Date").
              setInsertable().
              setLabel("PROJECTBUILDPREPARECANCELDATE: Cancel Date").
              setSize(20);
      headblk.addField("NOTE").
              setInsertable().
              setLabel("PROJECTBUILDPREPARENOTE: Note").
              setSize(30);
      headblk.addField("PROJECT_BUILD_DB").
              setHidden();
      headblk.addField("STATE").
              setLabel("PROJECTBUILDPREPARESTATE: State").
              setSize(10);
      headblk.setView("PROJECT_BUILD");
      headblk.defineCommand("PROJECT_BUILD_API","New__,Modify__,Remove__,Commit__,Confirm__,Cancel__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headbar.addCustomCommand("Commit","PROJECTBUILDPREPARECOMMIT: Commit Project Build");
      headbar.addCustomCommand("Confirm","PROJECTBUILDPREPARECONFIRM: Confirm Project Build");
      headbar.addCustomCommand("Cancel","PROJECTBUILDPREPARECANCEL: Cancel Project Build");

      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("PROJECTBUILDPREPARETBLHEAD: Project Builds");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      
      headbar.addCustomCommand("activateITEM1", "Build App");
      headbar.addCustomCommand("activateITEM2", "Build Confirm");
 


      project_build_app_blk = mgr.newASPBlock("ITEM1");
      project_build_app_blk.addField("ITEM0_OBJID").
                            setHidden().
                            setDbName("OBJID");
      project_build_app_blk.addField("ITEM0_OBJVERSION").
                            setHidden().
                            setDbName("OBJVERSION");
      project_build_app_blk.addField("ITEM0_APPLY_NO").
                            setDbName("APPLY_NO").
                            setMandatory().
                            setHidden().
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPITEM0APPLYNO: Apply No").
                            setSize(10);
      project_build_app_blk.addField("LINE_NO").
                            setMandatory().
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPLINENO: Line No").
                            setSize(10);
      project_build_app_blk.addField("WORK_FILE_TYPE").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPWORKFILETYPE: Work File Type").
                            setSize(30);
      project_build_app_blk.addField("FILE_NO").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPFILENO: File No").
                            setSize(20);
      project_build_app_blk.addField("FILE_NAME").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPFILENAME: File Name").
                            setSize(30);
      project_build_app_blk.addField("FILE_TIME","Date").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPFILETIME: File Time").
                            setSize(20);
      project_build_app_blk.addField("OPERATOR_PERSON").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPOPERATORPERSON: Operator Person").
                            setSize(20);
      project_build_app_blk.addField("CHARGE_PERSON").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPCHARGEPERSON: Charge Person").
                            setSize(20);
      project_build_app_blk.addField("ITEM0_WORK_STATE").
                            setDbName("WORK_STATE").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPITEM0WORKSTATE: Work State").
                            setSize(20);
      project_build_app_blk.addField("CONFIRM_DESC").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPCONFIRMDESC: Confirm Desc").
                            setSize(30);
      project_build_app_blk.addField("IS_FILE").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPISFILE: Is File").
                            setSize(10);
      project_build_app_blk.addField("ITEM0_NOTE").
                            setDbName("NOTE").
                            setInsertable().
                            setLabel("PROJECTBUILDPREPAREAPPITEM0NOTE: Note").
                            setSize(30);
      project_build_app_blk.setView("PROJECT_BUILD_APP");
      project_build_app_blk.defineCommand("PROJECT_BUILD_APP_API","New__,Modify__,Remove__");
      project_build_app_blk.setMasterBlock(headblk);
      project_build_app_set = project_build_app_blk.getASPRowSet();
      project_build_app_bar = mgr.newASPCommandBar(project_build_app_blk);
      project_build_app_bar.defineCommand(project_build_app_bar.OKFIND, "okFindITEM1");
      project_build_app_bar.defineCommand(project_build_app_bar.NEWROW, "newRowITEM1");
      project_build_app_tbl = mgr.newASPTable(project_build_app_blk);
      project_build_app_tbl.setTitle("PROJECTBUILDPREPAREAPPITEMHEAD1: ProjectApp");
      project_build_app_tbl.enableRowSelect();
      project_build_app_tbl.setWrap();
      project_build_app_lay = project_build_app_blk.getASPBlockLayout();
      project_build_app_lay.setDefaultLayoutMode(project_build_app_lay.MULTIROW_LAYOUT);

      project_build_confirm_blk = mgr.newASPBlock("ITEM2");
      project_build_confirm_blk.addField("ITEM1_OBJID").
                                setHidden().
                                setDbName("OBJID");
      project_build_confirm_blk.addField("ITEM1_OBJVERSION").
                                setHidden().
                                setDbName("OBJVERSION");
      project_build_confirm_blk.addField("ITEM1_APPLY_NO").
                                setDbName("APPLY_NO").
                                setMandatory().
                                setHidden().
                                setInsertable().
                                setLabel("PROJECTBUILDPREPARECONFIRMITEM1APPLYNO: Apply No").
                                setSize(10);
      project_build_confirm_blk.addField("ITEM1_FILE_NO").
                                setDbName("FILE_NO").
                                setMandatory().
                                setInsertable().
                                setLabel("PROJECTBUILDPREPARECONFIRMITEM1FILENO: File No").
                                setSize(15);
      project_build_confirm_blk.addField("ITEM1_FILE_NAME").
                                setDbName("FILE_NAME").
                                setInsertable().
                                setLabel("PROJECTBUILDPREPARECONFIRMITEM1FILENAME: File Name").
                                setSize(30);
      project_build_confirm_blk.addField("ITEM1_FILE_TIME","Date").
                                setDbName("FILE_TIME").
                                setInsertable().
                                setLabel("PROJECTBUILDPREPARECONFIRMITEM1FILETIME: File Time").
                                setSize(20);
      project_build_confirm_blk.addField("ITEM1_IS_FILE").
                                setDbName("IS_FILE").
                                setInsertable().
                                setLabel("PROJECTBUILDPREPARECONFIRMITEM1ISFILE: Is File").
                                setSize(10);
      project_build_confirm_blk.setView("PROJECT_BUILD_CONFIRM");
      project_build_confirm_blk.defineCommand("PROJECT_BUILD_CONFIRM_API","New__,Modify__,Remove__");
      project_build_confirm_blk.setMasterBlock(headblk);
      project_build_confirm_set = project_build_confirm_blk.getASPRowSet();
      project_build_confirm_bar = mgr.newASPCommandBar(project_build_confirm_blk);
      project_build_confirm_bar.defineCommand(project_build_confirm_bar.OKFIND, "okFindITEM2");
      project_build_confirm_bar.defineCommand(project_build_confirm_bar.NEWROW, "newRowITEM2");
      project_build_confirm_tbl = mgr.newASPTable(project_build_confirm_blk);
      project_build_confirm_tbl.setTitle("PROJECTBUILDPREPARECONFIRMITEMHEAD2: ProjectConfirm");
      project_build_confirm_tbl.enableRowSelect();
      project_build_confirm_tbl.setWrap();
      project_build_confirm_lay = project_build_confirm_blk.getASPBlockLayout();
      project_build_confirm_lay.setDefaultLayoutMode(project_build_confirm_lay.MULTIROW_LAYOUT);
      
      tabs = mgr.newASPTabContainer();
      tabs.setDirtyFlagEnabled(false);
      tabs.addTab(mgr.translate("PROJECTBUILDPREPAREAPPTITLE: Build App"), "javascript:commandSet('MAIN.activateITEM1','')");
      tabs.addTab(mgr.translate("PROJECTBUILDPREPARECONFIRMTITLE:  Build Confirm"), "javascript:commandSet('MAIN.activateITEM2','')"); 
      tabs.setContainerWidth(700);
      tabs.setLeftTabSpace(1);
      tabs.setContainerSpace(5);
      tabs.setTabWidth(100);



   }
   
   public void activateITEM1()
   {
	   tabs.setActiveTab(1);
   }
   
   public void activateITEM2()
   {
	   tabs.setActiveTab(2);
   }



   public void  adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "PROJECTBUILDPREPAREDESC: Project Build Prepare";
   }


   protected String getTitle()
   {
      return "PROJECTBUILDPREPARETITLE: Project Build Prepare";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else{
    	  headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
    	  appendToHTML(headlay.show());
      }
      
      if((headlay.isSingleLayout() && headset.countRows() > 0) || headlay.isCustomLayout())
      {
    	  appendToHTML(tabs.showTabsInit());
          if(tabs.getActiveTab() == 1)
          {
        	  appendToHTML(project_build_app_lay.show());
          }
          else if(tabs.getActiveTab() == 2)
          {
        	  appendToHTML(project_build_confirm_lay.show());
          }       
      }        

   }
}
