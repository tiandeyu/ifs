/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralNotificationQuery extends GeneralNotification
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralNotificationQuery");

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralNotificationQuery (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }
   
   public void run() throws FndException
   {
      super.run();
      
      ASPManager mgr = getASPManager();

      root_path = mgr.getConfigParameter("APPLICATION/LOCATION/ROOT");

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("NOTIFICATION_NO")) )
      {
         headlay.setLayoutMode(headlay.SINGLE_LAYOUT);
         okFind();
      }
      else
         okFind();
      adjust();
   }

   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPContext ctx = mgr.getASPContext();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      
      // String person_zones = ctx.findGlobal(ifs.genbaw.GenbawConstants.PERSON_ZONES);
      // String person_projs = ctx.findGlobal(ifs.genbaw.GenbawConstants.PERSON_PROJECTS);
      
      q.addWhereCondition("OBJSTATE = 'Opened'");
      q.addWhereCondition("SYSDATE <= valid_date");
      q.addWhereCondition("GENERAL_NOTIFICATION_API.Parse_Scope(scope_type_db, scope) = 'TRUE'");
      
      q.setOrderByClauseCompulsively("emergency ASC, create_date DESC");
      
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENERALNOTIFICATIONNODATA: No data found.");
         headset.clear();
      }
   }

   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      
      q.addWhereCondition("OBJSTATE = 'Opened'");
      q.addWhereCondition("SYSDATE <= valid_date");
      q.addWhereCondition("GENERAL_NOTIFICATION_API.Parse_Scope(scope_type_db, scope) = 'TRUE'");
      
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }
   
   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      
      if (headset.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_notification_exc_blk);
      q.addWhereCondition("NOTIFICATION_NO = ?");
      q.addParameter("NOTIFICATION_NO", headset.getValue("NOTIFICATION_NO"));
      
      q.addWhereCondition("EXC_PERSON = Person_Info_API.Get_Id_For_User(Fnd_Session_API.Get_Fnd_User)");
      
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_notification_exc_blk);
      headset.goTo(headrowno);
   }

   public void adjust() throws FndException
   {
      super.adjust();
      headbar.disableCommand(headbar.NEWROW);
      headbar.disableCommand(headbar.EDITROW);
      headbar.disableCommand(headbar.DUPLICATEROW);
      headbar.disableCommand(headbar.OVERVIEWEDIT);
      headbar.disableCommand(headbar.DELETE);
      headbar.disableCommand("Close");
      headbar.disableCommand("Open");
      headbar.disableCommand("CreateExcPerson");
      
      general_notification_exc_bar.disableCommand(general_notification_exc_bar.NEWROW);
      general_notification_exc_bar.disableCommand(general_notification_exc_bar.EDITROW);
      general_notification_exc_bar.disableCommand(general_notification_exc_bar.OVERVIEWEDIT);
      general_notification_exc_bar.disableCommand(general_notification_exc_bar.DUPLICATEROW);
      general_notification_exc_bar.disableCommand(general_notification_exc_bar.COUNTFIND);
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENERALNOTIFICATIONQUERYDESC: General Notification Query";
   }


   protected String getTitle()
   {
      return getDescription();
   }

}
