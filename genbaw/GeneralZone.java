/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.genbaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class GeneralZone extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.genbaw.GeneralZone");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;
   
   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock general_zone_creator_code_blk;
   private ASPRowSet general_zone_creator_code_set;
   private ASPCommandBar general_zone_creator_code_bar;
   private ASPTable general_zone_creator_code_tbl;
   private ASPBlockLayout general_zone_creator_code_lay;

   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  GeneralZone (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
      super.run();

      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("ZONE_NO")) )
         okFind();
      adjust();
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("GENERALZONENODATA: No data found.");
         headset.clear();
      }
      okFindITEM1();
   }

   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }

   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","GENERAL_ZONE_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      
      if (headset.countRows() == 0)
         return;
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(general_zone_creator_code_blk);
      q.addWhereCondition("ZONE_NO = ?");
      q.addParameter("ZONE_NO", headset.getValue("ZONE_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,general_zone_creator_code_blk);
      headset.goTo(headrowno);
   }
   
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      cmd = trans.addEmptyCommand("ITEM1","GENERAL_ZONE_CREATOR_CODE_API.New__",general_zone_creator_code_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_ZONE_NO", headset.getValue("ZONE_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      general_zone_creator_code_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
      setHidden();
      headblk.addField("OBJVERSION").
      setHidden();
      
      // line 1
      headblk.addField("ZONE_NO").
      setMandatory().
      setInsertable().
      setLabel("GENERALZONEZONENO: Zone No").
      setSize(20);
      
      headblk.addField("ZONE_DESC").
      setInsertable().
      setLabel("GENERALZONEZONEDESC: Zone Desc").
      setSize(30);
      
      // line 2
      headblk.addField("PROJ_NO").
      setInsertable().
      setReadOnly().
      setLabel("GENERALZONEPROJNO: Proj No").
      setSize(20);

      headblk.addField("COMM_CODE").
      setInsertable().
      setLabel("GENERALZONECOMMCODE: Comm Code").
      setSize(10);

      // line 3
      headblk.addField("USED_IN_APPL").
      setInsertable().
      setCheckBox("FALSE,TRUE").
      setLabel("GENERALZONEUSEDINAPPL: Used In Application").
      setSize(5);
      
      headblk.addField("SHORT_DESC").
      setInsertable().
      setLabel("GENERALZONESHORTDESC: Short Desc").
      setSize(20);
      
      // line 4
      headblk.addField("NOTE").
      setInsertable().
      setLabel("GENERALZONENOTE: Note").
      setSize(50);
      
      headblk.setView("GENERAL_ZONE");
      headblk.defineCommand("GENERAL_ZONE_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("GENERALZONETBLHEAD: General Zones");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      
      //
      // General Zone AP1000 Creator Code
      //
      
      general_zone_creator_code_blk = mgr.newASPBlock("ITEM1");
      general_zone_creator_code_blk.addField("ITEM0_OBJID").
      setHidden().
      setDbName("OBJID");
      
      general_zone_creator_code_blk.addField("ITEM0_OBJVERSION").
      setHidden().
      setDbName("OBJVERSION");
      
      general_zone_creator_code_blk.addField("ITEM0_ZONE_NO").
      setDbName("ZONE_NO").
      setMandatory().
      setInsertable().
      setHidden().
      setLabel("GENERALZONECREATORCODEITEM0ZONENO: Zone No").
      setSize(20);
      
      general_zone_creator_code_blk.addField("PROJ_TYPE").
      enumerateValues("General_Project_Type_API").
      setSelectBox().
      setMandatory().
      setInsertable().
      setLabel("GENERALZONECREATORCODEPROJTYPE: Proj Type").
      setSize(10);
      
      general_zone_creator_code_blk.addField("CREATOR_CODE").
      setInsertable().
      setLabel("GENERALZONECREATORCODECREATORCODE: Creator Code").
      setSize(10);
      
      general_zone_creator_code_blk.setView("GENERAL_ZONE_CREATOR_CODE");
      general_zone_creator_code_blk.defineCommand("GENERAL_ZONE_CREATOR_CODE_API","New__,Modify__,Remove__");
      general_zone_creator_code_blk.setMasterBlock(headblk);
      general_zone_creator_code_set = general_zone_creator_code_blk.getASPRowSet();
      general_zone_creator_code_bar = mgr.newASPCommandBar(general_zone_creator_code_blk);
      general_zone_creator_code_bar.defineCommand(general_zone_creator_code_bar.OKFIND, "okFindITEM1");
      general_zone_creator_code_bar.defineCommand(general_zone_creator_code_bar.NEWROW, "newRowITEM1");
      general_zone_creator_code_tbl = mgr.newASPTable(general_zone_creator_code_blk);
      general_zone_creator_code_tbl.setTitle("GENERALZONECREATORCODEITEMHEAD1: GeneralZoneCreatorCode");
      general_zone_creator_code_tbl.enableRowSelect();
      general_zone_creator_code_tbl.setWrap();
      general_zone_creator_code_lay = general_zone_creator_code_blk.getASPBlockLayout();
      general_zone_creator_code_lay.setDefaultLayoutMode(general_zone_creator_code_lay.MULTIROW_LAYOUT);
   }


   public void adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "GENERALZONEDESC: General Zone";
   }


   protected String getTitle()
   {
      return getDescription();
   }


   protected void printContents() throws FndException
   {
      super.printContents();

      ASPManager mgr = getASPManager();
      if (headlay.isVisible())
          appendToHTML(headlay.show());
      else
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }
      
      if (headset.countRows() > 0 && (headlay.isSingleLayout() || headlay.isCustomLayout()))
      {
         appendToHTML(general_zone_creator_code_lay.show());
      }
   }
}
