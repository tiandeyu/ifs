/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.schmaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class SchBaseData extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.schmaw.SchRelationClass");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

//   private ASPBlock headblk;
//   private ASPRowSet headset;
//   private ASPCommandBar headbar;
//   private ASPTable headtbl;
//   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock sch_resource_class_blk;
   private ASPRowSet sch_resource_class_set;
   private ASPCommandBar sch_resource_class_bar;
   private ASPTable sch_resource_class_tbl;
   private ASPBlockLayout sch_resource_class_lay;

   private ASPBlock sch_work_class_blk;
   private ASPRowSet sch_work_class_set;
   private ASPCommandBar sch_work_class_bar;
   private ASPTable sch_work_class_tbl;
   private ASPBlockLayout sch_work_class_lay;
   

   private ASPTabContainer tabs;


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  SchBaseData (ASPManager mgr, String page_path)
   {
      super(mgr, page_path);
   }

   public void run() throws FndException
   {
//      super.run();

      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
//      else if(mgr.dataTransfered())
//         okFind();
//      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
       else
         okFind();
      adjust();
      tabs.saveActiveTab();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

//   public void okFind()
//   {
//      ASPManager mgr = getASPManager();
//      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
//      ASPQuery q;
//
//      mgr.createSearchURL(headblk);
//      q = trans.addQuery(headblk);
//      q.includeMeta("ALL");
//      if(mgr.dataTransfered())
//         q.addOrCondition(mgr.getTransferedData());
//      mgr.querySubmit(trans,headblk);
//      if (  headset.countRows() == 0 )
//      {
//         mgr.showAlert("NODATA: No data found.");
//         headset.clear();
//      }
//      eval( sch_resource_class_set.syncItemSets() );
//      eval( sch_work_class_set.syncItemSets() );
//   }
//
//
//
//   public void countFind()
//   {
//      ASPManager mgr = getASPManager();
//      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
//      ASPQuery q;
//
//      q = trans.addQuery(headblk);
//      q.setSelectList("to_char(count(*)) N");
//      mgr.submit(trans);
//      headlay.setCountValue(toInt(headset.getValue("N")));
//      headset.clear();
//   }
//
//
//
//   public void newRow()
//   {
//      ASPManager mgr = getASPManager();
//      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
//      ASPBuffer data;
//      ASPCommand cmd;
//
//      cmd = trans.addEmptyCommand("HEAD","SCH_RELATION_CLASS_API.New__",headblk);
//      cmd.setOption("ACTION","PREPARE");
//      trans = mgr.perform(trans);
//      data = trans.getBuffer("HEAD/DATA");
//      headset.addRow(data);
//   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(sch_resource_class_blk);
      q = trans.addQuery(sch_resource_class_blk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,sch_resource_class_blk);
      if (  sch_resource_class_set.countRows() == 0 )
      {
         mgr.showAlert("QUABASEDATANODATA: No data found.");
         sch_resource_class_set.clear();
      }
   }
   
   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(sch_resource_class_blk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      sch_resource_class_lay.setCountValue(toInt(sch_resource_class_set.getValue("N")));
      sch_resource_class_set.clear();
   }
   
   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","SCH_RESOURCE_CLASS_API.New__",sch_resource_class_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      sch_resource_class_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(sch_work_class_blk);
      q = trans.addQuery(sch_work_class_blk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,sch_work_class_blk);
      if (  sch_work_class_set.countRows() == 0 )
      {
         mgr.showAlert("QUABASEDATANODATA: No data found.");
         sch_work_class_set.clear();
      }
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","SCH_WORK_CLASS_API.New__",sch_work_class_blk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      sch_work_class_set.addRow(data);
   }
   public void countFindITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(sch_work_class_blk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      sch_work_class_lay.setCountValue(toInt(sch_work_class_set.getValue("N")));
      sch_work_class_set.clear();
   }   

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void preDefine()
   {
      ASPManager mgr = getASPManager();

//      headblk = mgr.newASPBlock("MAIN");
//      headblk.addField("OBJID").
//              setHidden();
//      headblk.addField("OBJVERSION").
//              setHidden();
//      headblk.setView("");
//      headblk.defineCommand("SCH_RELATION_CLASS_API","New__,Modify__,Remove__");
//      headset = headblk.getASPRowSet();
      /*
      headbar = mgr.newASPCommandBar(headblk);

      headbar.disableCommand("Find");
      headbar.disableCommand("Back");
      headbar.disableCommand("Forward");
      headbar.disableCommand("Backward");
      headbar.disableCommand("NewRow");
      */
      
//      headtbl = mgr.newASPTable(headblk);
//      headtbl.setTitle("TBLHEAD: Sch Relation Classs");
//      headtbl.enableRowSelect();
//      headtbl.setWrap();

//      headbar.addCustomCommand("activateResourceClass", mgr.translate("SCHMAWRESOURCECLASS: Resource Class"));
//      headbar.addCustomCommand("activateWorkClass", mgr.translate("SCHMAWWORKCLASS: Work Class"));
//      headlay = headblk.getASPBlockLayout();
//      headlay.setDialogColumns(2);
//      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
 


      sch_resource_class_blk = mgr.newASPBlock("MAIN");
      sch_resource_class_blk.addField("OBJID").
                             setHidden();
      sch_resource_class_blk.addField("OBJVERSION").
                             setHidden();
      sch_resource_class_blk.addField("CLASS_ID").
                             setMandatory().
                             setInsertable().
                             setLabel("SCHRESOURCECLASSCLASSID: Class Id").
                             setSize(15);
      sch_resource_class_blk.addField("CLASS_NAME").
                             setInsertable().
                             setLabel("SCHRESOURCECLASSCLASSNAME: Class Name").
                             setSize(20);
      sch_resource_class_blk.addField("NOTE").
                             setInsertable().
                             setLabel("SCHRESOURCECLASSNOTE: Note").
                             setHeight(3).
                             setSize(100);
      sch_resource_class_blk.setView("SCH_RESOURCE_CLASS");
      sch_resource_class_blk.defineCommand("SCH_RESOURCE_CLASS_API","New__,Modify__,Remove__");
//      sch_resource_class_blk.setMasterBlock(headblk);
      sch_resource_class_set = sch_resource_class_blk.getASPRowSet();
      sch_resource_class_bar = mgr.newASPCommandBar(sch_resource_class_blk);
//      sch_resource_class_bar.defineCommand(sch_resource_class_bar.OKFIND, "okFindITEM1");
//      sch_resource_class_bar.defineCommand(sch_resource_class_bar.NEWROW, "newRowITEM1");
      sch_resource_class_tbl = mgr.newASPTable(sch_resource_class_blk);
      sch_resource_class_tbl.setTitle("SCHRESOURCECLASSITEMHEAD1: SchResourceClass");
      sch_resource_class_tbl.enableRowSelect();
      sch_resource_class_tbl.setWrap();
      sch_resource_class_lay = sch_resource_class_blk.getASPBlockLayout();
      sch_resource_class_lay.setDefaultLayoutMode(sch_resource_class_lay.MULTIROW_LAYOUT);
      

      sch_resource_class_bar.addCustomCommand("activateResourceClass",mgr.translate("SCHMAWRESOURCECLASS: Resource Class"));
      sch_resource_class_bar.addCustomCommand("activateWorkClass",mgr.translate("SCHMAWWORKCLASS: Work Class"));

      sch_work_class_blk = mgr.newASPBlock("ITEM2");
      sch_work_class_blk.addField("ITEM1_OBJID").
                         setHidden().
                         setDbName("OBJID");
      sch_work_class_blk.addField("ITEM1_OBJVERSION").
                         setHidden().
                         setDbName("OBJVERSION");
      sch_work_class_blk.addField("WORK_CLASS_ID").
                         setMandatory().
                         setInsertable().
                         setLabel("SCHWORKCLASSWORKCLASSID: Work Class Id").
                         setSize(15);
      sch_work_class_blk.addField("WORK_CLASS_NAME").
                         setInsertable().
                         setLabel("SCHWORKCLASSWORKCLASSNAME: Work Class Name").
                         setSize(20);
      sch_work_class_blk.addField("ITEM1_NOTE").
                         setDbName("NOTE").
                         setInsertable().
                         setLabel("SCHWORKCLASSITEM1NOTE: Note").
                         setHeight(3).
                         setSize(100);
      sch_work_class_blk.setView("SCH_WORK_CLASS");
      sch_work_class_blk.defineCommand("SCH_WORK_CLASS_API","New__,Modify__,Remove__");
//      sch_work_class_blk.setMasterBlock(headblk);
      sch_work_class_set = sch_work_class_blk.getASPRowSet();
      sch_work_class_bar = mgr.newASPCommandBar(sch_work_class_blk);
      sch_work_class_bar.defineCommand(sch_work_class_bar.OKFIND, "okFindITEM2");
      sch_work_class_bar.defineCommand(sch_work_class_bar.NEWROW, "newRowITEM2");
      sch_work_class_bar.defineCommand(sch_work_class_bar.COUNTFIND,"countFindITEM2");
      sch_work_class_tbl = mgr.newASPTable(sch_work_class_blk);
      sch_work_class_tbl.setTitle("SCHWORKCLASSITEMHEAD2: SchWorkClass");
      sch_work_class_tbl.enableRowSelect();
      sch_work_class_tbl.setWrap();
      sch_work_class_lay = sch_work_class_blk.getASPBlockLayout();
      sch_work_class_lay.setDefaultLayoutMode(sch_work_class_lay.MULTIROW_LAYOUT);
//      sch_work_class_lay.setDataSpan("NOTE", 5);

      tabs = mgr.newASPTabContainer();
      
      tabs.addTab(mgr.translate("SCHMAWRESOURCECLASS: Resource Class"), "javascript:commandSet('MAIN.activateResourceClass','')");
      tabs.addTab(mgr.translate("SCHMAWWORKCLASS: Work Class"), "javascript:commandSet('MAIN.activateWorkClass','')");
      
      tabs.setContainerSpace(0);
      tabs.setLeftTabSpace(0);
      tabs.setTabWidth(100);
      
//      tabs.setContainerWidth(700);
//      tabs.setLeftTabSpace(1);
//      tabs.setContainerSpace(5);
//      tabs.setTabWidth(100);
      
      sch_resource_class_bar.removeCustomCommand("activateResourceClass");
      sch_resource_class_bar.removeCustomCommand("activateWorkClass");

   }

   
   public void activateResourceClass()
   {
     tabs.setActiveTab(1);
     okFind();
   }

   public void activateWorkClass()
   {
     tabs.setActiveTab(2);
     okFindITEM2();
   }

   public void adjust()
   {
//      super.adjust();
      // fill function body

   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "SCHEDULEBASEDATE: Schedule Base Data";
   }


   protected String getTitle()
   {
      return "SCHEDULEBASEDATE: Schedule Base Data";
   }


   protected void printContents() throws FndException
   {
//      super.printContents();
      
      appendToHTML(tabs.showTabsInit());
      if (tabs.getActiveTab() == 1)
          appendToHTML(sch_resource_class_lay.show());
      else if (tabs.getActiveTab() == 2)
          appendToHTML(sch_work_class_lay.show());
      appendToHTML(tabs.showTabsFinish());
   }
   
   //--------------------------  Added in new template  --------------------------
   //--------------  Return blk connected with workflow functions  ---------------
   //-----------------------------------------------------------------------------

//   protected ASPBlock getBizWfBlock()
//   {
//      return headblk;
//   }
}
