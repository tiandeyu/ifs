/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.hsemaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class HseEmergencyPlan extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.hsemaw.HseEmergencyPlan");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;
   
   protected ASPTabContainer tabs;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock hse_emergency_equ_blk;
   private ASPRowSet hse_emergency_equ_set;
   private ASPCommandBar hse_emergency_equ_bar;
   private ASPTable hse_emergency_equ_tbl;
   private ASPBlockLayout hse_emergency_equ_lay;

   private ASPBlock hse_emergency_mat_blk;
   private ASPRowSet hse_emergency_mat_set;
   private ASPCommandBar hse_emergency_mat_bar;
   private ASPTable hse_emergency_mat_tbl;
   private ASPBlockLayout hse_emergency_mat_lay;

   private ASPBlock hse_emergency_train_blk;
   private ASPRowSet hse_emergency_train_set;
   private ASPCommandBar hse_emergency_train_bar;
   private ASPTable hse_emergency_train_tbl;
   private ASPBlockLayout hse_emergency_train_lay;


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  HseEmergencyPlan (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("PLAN_NO")) )
         okFind();
      else 
         okFind();
      tabs.saveActiveTab();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("HSEEMERGENCYPLANNODATA: No data found.");
         headset.clear();
      }
      eval( hse_emergency_equ_set.syncItemSets() );
      eval( hse_emergency_mat_set.syncItemSets() );
      eval( hse_emergency_train_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","HSE_EMERGENCY_PLAN_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      if(headset.countRows() == 0){
         return;
      }
      
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;
      
      q = trans.addQuery(hse_emergency_equ_blk);
      q.addWhereCondition("PROJ_NO = ? AND PLAN_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("PLAN_NO", headset.getValue("PLAN_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,hse_emergency_equ_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM1","HSE_EMERGENCY_EQU_API.New__",hse_emergency_equ_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM0_PLAN_NO", headset.getValue("PLAN_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      hse_emergency_equ_set.addRow(data);
   }
   public void okFindITEM2()
   {
      ASPManager mgr = getASPManager();
      if(headset.countRows() == 0){
         return;
      }
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(hse_emergency_mat_blk);
      q.addWhereCondition("PROJ_NO = ? AND PLAN_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("PLAN_NO", headset.getValue("PLAN_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,hse_emergency_mat_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM2()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM2","HSE_EMERGENCY_MAT_API.New__",hse_emergency_mat_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM1_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM1_PLAN_NO", headset.getValue("PLAN_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM2/DATA");
      hse_emergency_mat_set.addRow(data);
   }
   public void okFindITEM3()
   {
      ASPManager mgr = getASPManager();
      if(headset.countRows() == 0){
         return;
      }
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(hse_emergency_train_blk);
      q.addWhereCondition("PROJ_NO = ? AND PLAN_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("PLAN_NO", headset.getValue("PLAN_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,hse_emergency_train_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM3()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;
      
      cmd = trans.addEmptyCommand("ITEM3","HSE_EMERGENCY_TRAIN_API.New__",hse_emergency_train_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM2_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM2_PLAN_NO", headset.getValue("PLAN_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM3/DATA");
      hse_emergency_train_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("PLAN_NO").
              setLabel("HSEEMERGENCYPLANPLANNO: Plan No").
              setHidden();
      headblk.addField("PROJ_NO").
              setMandatory().
              setDynamicLOV("GENERAL_PROJECT").
              setInsertable().
              setLabel("HSEEMERGENCYPLANPROJNO: Proj No").
              setSize(30);
      headblk.addField("GENERAL_PROJECT_PROJ_DESC").
              setFunction("GENERAL_PROJECT_API.GET_PROJ_DESC(:PROJ_NO)").
              setLabel("HSEEMERGENCYPLANGENERALPROJECTPROJDESC: General Project Proj Desc").
              setSize(20).
              setReadOnly();
      mgr.getASPField("PROJ_NO").setValidation("GENERAL_PROJECT_PROJ_DESC");
      headblk.addField("PLAN_NAME").
              setInsertable().
              setLabel("HSEEMERGENCYPLANPLANNAME: Plan Name").
              setSize(30);
      headblk.addField("PLAN_TYPE").
              setInsertable().
              setLabel("HSEEMERGENCYPLANPLANTYPE: Plan Type").
              setSize(30);
      
      headblk.addField("MANAGE_ORG").
              setInsertable().
              setDynamicLOV("GENERAL_ZONE").
//              setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
              setLabel("HSEEMERGENCYPLANMANAGEORG: Manage Org").
              setSize(30);
      headblk.addField("MANAGE_ORG_DESC").
              setFunction("GENERAL_ZONE_API.Get_Zone_Desc ( :MANAGE_ORG)").
              setLabel("HSEEMERGENCYPLANMANAGEORGDESC: Manage Org Desc").
              setSize(30).
              setReadOnly();
      mgr.getASPField("MANAGE_ORG").setValidation("MANAGE_ORG_DESC");
      
      
      headblk.addField("STATUS").
              setHidden().
              setLabel("HSEEMERGENCYPLANSTATUS: Status").
              setSize(30);
      headblk.addField("REV").
              setInsertable().
              setLabel("HSEEMERGENCYPLANREV: Rev").
              setSize(30);
      headblk.addField("DANGER_SOURCE_LINE").
              setMandatory().
              setDynamicLOV("HSE_DANGER_SOURCE_LINE","PROJ_NO").
              setInsertable().
              setLabel("HSEEMERGENCYPLANSOURCENO: Source No").
              setSize(30);
      headblk.addField("DANGER_SOURCE_LINE_DESC").
              setFunction("HSE_DANGER_SOURCE_LINE_API.Get_Dangerous_Source2(:PROJ_NO,:DANGER_SOURCE_LINE)").
              setLabel("HSEEMERGENCYPLANDANGERSOURCELINEDESC: Danger Source Line Desc").
              setSize(20).
              setReadOnly();
      mgr.getASPField("DANGER_SOURCE_LINE").setValidation("DANGER_SOURCE_LINE_DESC");
      headblk.addField("APPROVE_TIME","Date").
              setInsertable().
              setLabel("HSEEMERGENCYPLANAPPROVETIME: Approve Time").
              setSize(30);
      headblk.addField("MAIN_MEASURE").
              setInsertable().
              setLabel("HSEEMERGENCYPLANMAINMEASURE: Main Measure").
              setSize(120).
              setHeight(5);         
      headblk.setView("HSE_EMERGENCY_PLAN");
      headblk.defineCommand("HSE_EMERGENCY_PLAN_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      
      headbar.addCustomCommand("activateHseEmergencyEqu", "Hse Emergency Equ...");
      headbar.addCustomCommand("activateHseEmergencyMat", "Hse Emergency Mat...");
      headbar.addCustomCommand("activateHseEmergencyTrain", "Hse Emergency Train...");
      
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("HSEEMERGENCYPLANTBLHEAD: Hse Emergency Plans");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setDataSpan("REV",5);
      headlay.setDataSpan("MAIN_MEASURE",5);
      headlay.setSimple("GENERAL_PROJECT_PROJ_DESC");
      headlay.setSimple("DANGER_SOURCE_LINE_DESC");
      headlay.setSimple("MANAGE_ORG_DESC");
      
      //ITEM1  HseEmergencyEqu 
      hse_emergency_equ_blk = mgr.newASPBlock("ITEM1");
      hse_emergency_equ_blk.addField("ITEM0_OBJID").
                            setHidden().
                            setDbName("OBJID");
      hse_emergency_equ_blk.addField("ITEM0_OBJVERSION").
                            setHidden().
                            setDbName("OBJVERSION");
      hse_emergency_equ_blk.addField("ITEM0_PROJ_NO").
                            setDbName("PROJ_NO").
                            setHidden().
                            setMandatory().
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUITEM0PROJNO: Proj No").
                            setSize(30);
      hse_emergency_equ_blk.addField("ITEM0_PLAN_NO").
                            setDbName("PLAN_NO").
                            setHidden().
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUITEM0PLANNO: Plan No").
                            setSize(30);
      hse_emergency_equ_blk.addField("LINE_NO").
                            setLabel("HSEEMERGENCYEQULINENO: Line No").
                            setHidden();
      hse_emergency_equ_blk.addField("EQU_NAME").
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUEQUNAME: Equ Name").
                            setSize(30);
      hse_emergency_equ_blk.addField("USE_TYPE").
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUUSETYPE: Use Type").
                            setSize(30);
      
      hse_emergency_equ_blk.addField("DEPT").
                            setInsertable().
                            setDynamicLOV("GENERAL_ZONE").
//                            setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
                            setLabel("HSEEMERGENCYEQUDEPT: Dept").
                            setSize(30);
      hse_emergency_equ_blk.addField("DEPT_DESC").
                            setFunction("GENERAL_ZONE_API.Get_Zone_Desc ( :DEPT)").
                            setLabel("HSEEMERGENCYEQUDEPTDESC: DEPT Desc").
                            setSize(30).
                            setReadOnly();
      mgr.getASPField("DEPT").setValidation("DEPT_DESC");
      
      
      hse_emergency_equ_blk.addField("LOCATION").
                            setInsertable().
                            setLabel("HSEEMERGENCYEQULOCATION: Location").
                            setSize(30);
      hse_emergency_equ_blk.addField("ENTRY_TIME","Date").
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUENTRYTIME: Entry Time").
                            setSize(30);
      hse_emergency_equ_blk.addField("RESPONSE_PERSON").
                            setInsertable().
                            setDynamicLOV("PERSON_INFO").
                            setLabel("HSEEMERGENCYEQURESPONSEPERSON: Response Person").
                            setSize(30);
      hse_emergency_equ_blk.addField("RESPONSE_PERSON_NAME").
                            setReadOnly().
                            setFunction("PERSON_INFO_API.GET_NAME ( :RESPONSE_PERSON)").
                            setLabel("HSEEMERGENCYEQURESPONSEPERSONNAME: Response Person Name").
                            setSize(30);  
      mgr.getASPField("RESPONSE_PERSON").setValidation("RESPONSE_PERSON_NAME");
      
      
      hse_emergency_equ_blk.addField("NOTE").
                            setInsertable().
                            setLabel("HSEEMERGENCYEQUNOTE: Note").
                            setSize(120).
                            setHeight(5);
      hse_emergency_equ_blk.setView("HSE_EMERGENCY_EQU");
      hse_emergency_equ_blk.defineCommand("HSE_EMERGENCY_EQU_API","New__,Modify__,Remove__");
      hse_emergency_equ_blk.setMasterBlock(headblk);
      hse_emergency_equ_set = hse_emergency_equ_blk.getASPRowSet();
      hse_emergency_equ_bar = mgr.newASPCommandBar(hse_emergency_equ_blk);
      hse_emergency_equ_bar.defineCommand(hse_emergency_equ_bar.OKFIND, "okFindITEM1");
      hse_emergency_equ_bar.defineCommand(hse_emergency_equ_bar.NEWROW, "newRowITEM1");
      hse_emergency_equ_tbl = mgr.newASPTable(hse_emergency_equ_blk);
      hse_emergency_equ_tbl.setTitle("HSEEMERGENCYEQUITEMHEAD1: HseEmergencyEqu");
      hse_emergency_equ_tbl.enableRowSelect();
      hse_emergency_equ_tbl.setWrap();
      hse_emergency_equ_lay = hse_emergency_equ_blk.getASPBlockLayout();
      hse_emergency_equ_lay.setDefaultLayoutMode(hse_emergency_equ_lay.MULTIROW_LAYOUT);
      hse_emergency_equ_lay.setDataSpan("NOTE",5);
      hse_emergency_equ_lay.setSimple("DEPT_DESC");
      hse_emergency_equ_lay.setSimple("RESPONSE_PERSON_NAME");
      
      
      //ITEM2  HseEmergencyMat 
      hse_emergency_mat_blk = mgr.newASPBlock("ITEM2");
      hse_emergency_mat_blk.addField("ITEM1_OBJID").
                            setHidden().
                            setDbName("OBJID");
      hse_emergency_mat_blk.addField("ITEM1_OBJVERSION").
                            setHidden().
                            setDbName("OBJVERSION");
      hse_emergency_mat_blk.addField("ITEM1_PROJ_NO").
                            setDbName("PROJ_NO").
                            setHidden().
                            setMandatory().
                            setInsertable().
                            setLabel("HSEEMERGENCYMATITEM1PROJNO: Proj No").
                            setSize(30);
      hse_emergency_mat_blk.addField("ITEM1_PLAN_NO").
                            setDbName("PLAN_NO").
                            setHidden().
                            setInsertable().
                            setLabel("HSEEMERGENCYMATITEM1PLANNO: Plan No").
                            setSize(30);
      hse_emergency_mat_blk.addField("ITEM1_LINE_NO").
                            setDbName("LINE_NO").
                            setLabel("HSEEMERGENCYMATITEM1LINENO: Line No").
                            setHidden();
      hse_emergency_mat_blk.addField("MAT_NAME").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATMATNAME: Mat Name").
                            setSize(30);
      hse_emergency_mat_blk.addField("MAT_TYPE").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATMATTYPE: Mat Type").
                            setSize(30);
      hse_emergency_mat_blk.addField("QTY","Number").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATQTY: Qty").
                            setSize(30);
      
      hse_emergency_mat_blk.addField("ITEM1_DEPT").
                            setDbName("DEPT").
                            setInsertable().
                            setDynamicLOV("GENERAL_ZONE").
//                            setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
                            setLabel("HSEEMERGENCYMATITEM1DEPT: Dept").
                            setSize(30);
      hse_emergency_mat_blk.addField("ITEM1_DEPT_DESC").
                            setFunction("GENERAL_ZONE_API.Get_Zone_Desc ( :ITEM1_DEPT)").
                            setLabel("HSEEMERGENCYMATITEM1DEPTDESC: DEPT Desc").
                            setSize(30).
                            setReadOnly();
      mgr.getASPField("ITEM1_DEPT").setValidation("ITEM1_DEPT_DESC");
      
      hse_emergency_mat_blk.addField("ITEM1_LOCATION").
                            setDbName("LOCATION").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATITEM1LOCATION: Location").
                            setSize(30);
      hse_emergency_mat_blk.addField("ITEM1_ENTRY_TIME","Date").
                            setDbName("ENTRY_TIME").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATITEM1ENTRYTIME: Entry Time").
                            setSize(30);
      
      hse_emergency_mat_blk.addField("ITEM1_RESPONSE_PERSON").
                            setDbName("RESPONSE_PERSON").
                            setInsertable().
                            setDynamicLOV("PERSON_INFO").
                            setLabel("HSEEMERGENCYMATITEM1RESPONSEPERSON: Response Person").
                            setSize(30);
      hse_emergency_equ_blk.addField("ITEM1_RESPONSE_PERSON_NAME").
                            setReadOnly().
                            setFunction("PERSON_INFO_API.GET_NAME ( :ITEM1_RESPONSE_PERSON)").
                            setLabel("HSEEMERGENCYMATITEM1RESPONSEPERSONNAME: Response Person Name").
                            setSize(30);  
      mgr.getASPField("ITEM1_RESPONSE_PERSON").setValidation("ITEM1_RESPONSE_PERSON_NAME");
      
      
      hse_emergency_mat_blk.addField("ITEM1_NOTE").
                            setDbName("NOTE").
                            setInsertable().
                            setLabel("HSEEMERGENCYMATITEM1NOTE: Note").
                            setSize(120).
                            setHeight(5);
      hse_emergency_mat_blk.setView("HSE_EMERGENCY_MAT");
      hse_emergency_mat_blk.defineCommand("HSE_EMERGENCY_MAT_API","New__,Modify__,Remove__");
      hse_emergency_mat_blk.setMasterBlock(headblk);
      hse_emergency_mat_set = hse_emergency_mat_blk.getASPRowSet();
      hse_emergency_mat_bar = mgr.newASPCommandBar(hse_emergency_mat_blk);
      hse_emergency_mat_bar.defineCommand(hse_emergency_mat_bar.OKFIND, "okFindITEM2");
      hse_emergency_mat_bar.defineCommand(hse_emergency_mat_bar.NEWROW, "newRowITEM2");
      hse_emergency_mat_tbl = mgr.newASPTable(hse_emergency_mat_blk);
      hse_emergency_mat_tbl.setTitle("HSEEMERGENCYMATITEMHEAD2: HseEmergencyMat");
      hse_emergency_mat_tbl.enableRowSelect();
      hse_emergency_mat_tbl.setWrap();
      hse_emergency_mat_lay = hse_emergency_mat_blk.getASPBlockLayout();
      hse_emergency_mat_lay.setDefaultLayoutMode(hse_emergency_mat_lay.MULTIROW_LAYOUT);
      hse_emergency_mat_lay.setDataSpan("ITEM1_RESPONSE_PERSON",5);
      hse_emergency_mat_lay.setDataSpan("ITEM1_NOTE",5);
      hse_emergency_equ_lay.setSimple("ITEM1_DEPT_DESC");
      hse_emergency_equ_lay.setSimple("ITEM1_RESPONSE_PERSON_NAME");
      
      
      //ITEM3  HseEmergencyTrain 
      hse_emergency_train_blk = mgr.newASPBlock("ITEM3");
      hse_emergency_train_blk.addField("ITEM2_OBJID").
                              setHidden().
                              setDbName("OBJID");
      hse_emergency_train_blk.addField("ITEM2_OBJVERSION").
                              setHidden().
                              setDbName("OBJVERSION");
      hse_emergency_train_blk.addField("ITEM2_PROJ_NO").
                              setDbName("PROJ_NO").
                              setHidden().
                              setMandatory().
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINITEM2PROJNO: Proj No").
                              setSize(30);
      hse_emergency_train_blk.addField("ITEM2_PLAN_NO").
                              setDbName("PLAN_NO").
                              setHidden().
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINITEM2PLANNO: Plan No").
                              setSize(30);
      hse_emergency_train_blk.addField("ITEM2_LINE_NO").
                              setDbName("LINE_NO").
                              setLabel("HSEEMERGENCYTRAINITEM2LINENO: Line No").
                              setHidden();
      hse_emergency_train_blk.addField("TRAIN_TYPE").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINTRAINTYPE: Train Type").
                              setSize(30);
      
      hse_emergency_train_blk.addField("ITEM2_DEPT").
                              setDbName("DEPT").
                              setInsertable().
                              setDynamicLOV("GENERAL_ZONE").
//                              setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
                              setLabel("HSEEMERGENCYTRAINITEM2DEPT: Dept").
                              setSize(30);
      hse_emergency_train_blk.addField("ITEM2_DEPT_DESC").
                              setFunction("GENERAL_ZONE_API.Get_Zone_Desc ( :ITEM2_DEPT)").
                              setLabel("HSEEMERGENCYTRAINITEM2DEPTDESC: DEPT Desc").
                              setSize(30).
                              setReadOnly();
      mgr.getASPField("ITEM2_DEPT").setValidation("ITEM2_DEPT_DESC");
      
      
      hse_emergency_train_blk.addField("ITEM2_RESPONSE_PERSON").
                              setDbName("RESPONSE_PERSON").
                              setInsertable().
                              setDynamicLOV("PERSON_INFO").
                              setLabel("HSEEMERGENCYTRAINITEM2RESPONSEPERSON: Response Person").
                              setSize(30);
      hse_emergency_train_blk.addField("ITEM2_RESPONSE_PERSON_NAME").
                              setReadOnly().
                              setFunction("PERSON_INFO_API.GET_NAME ( :ITEM2_RESPONSE_PERSON)").
                              setLabel("HSEEMERGENCYTRAINITEM2RESPONSEPERSONNAME: Response Person Name").
                              setSize(30);  
      mgr.getASPField("ITEM2_RESPONSE_PERSON").setValidation("ITEM2_RESPONSE_PERSON_NAME");
      
      hse_emergency_train_blk.addField("TRAIN_TIME","Date").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINTRAINTIME: Train Time").
                              setSize(30);
      hse_emergency_train_blk.addField("TRAIN_CONTENT").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINTRAINCONTENT: Train Content").
                              setSize(120).
                              setHeight(5);
      hse_emergency_train_blk.addField("TRAIN_EQU").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINTRAINEQU: Train Equ").
                              setSize(120).
                              setHeight(5);
      hse_emergency_train_blk.addField("SAFE_MEASURE").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINSAFEMEASURE: Safe Measure").
                              setSize(120).
                              setHeight(5);
      hse_emergency_train_blk.addField("TRAIN_EVALUATE").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINTRAINEVALUATE: Train Evaluate").
                              setSize(120).
                              setHeight(5);
      hse_emergency_train_blk.addField("SUG_PERSON").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINSUGPERSON: Sug Person").
                              setSize(120);
      hse_emergency_train_blk.addField("IMPROVE_MEASURE").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINIMPROVEMEASURE: Improve Measure").
                              setSize(120).
                              setHeight(5);
      
      hse_emergency_train_blk.addField("CHECK_PERSON").
                              setInsertable().
                              setDynamicLOV("PERSON_INFO").
                              setLabel("HSEEMERGENCYTRAINCHECKPERSON: Check Person").
                              setSize(30);
      hse_emergency_train_blk.addField("CHECK_PERSON_NAME").
                              setReadOnly().
                              setFunction("PERSON_INFO_API.GET_NAME ( :CHECK_PERSON)").
                              setLabel("HSEEMERGENCYTRAINCHECKPERSONNAME: Check Person Name").
                              setSize(30);  
      mgr.getASPField("CHECK_PERSON").setValidation("CHECK_PERSON_NAME");
      
      
      hse_emergency_train_blk.addField("CHECK_SUGGESTION").
                              setInsertable().
                              setLabel("HSEEMERGENCYTRAINCHECKSUGGESTION: Check Suggestion").
                              setSize(120).
                              setHeight(5);
      hse_emergency_train_blk.setView("HSE_EMERGENCY_TRAIN");
      hse_emergency_train_blk.defineCommand("HSE_EMERGENCY_TRAIN_API","New__,Modify__,Remove__");
      hse_emergency_train_blk.setMasterBlock(headblk);
      hse_emergency_train_set = hse_emergency_train_blk.getASPRowSet();
      hse_emergency_train_bar = mgr.newASPCommandBar(hse_emergency_train_blk);
      hse_emergency_train_bar.defineCommand(hse_emergency_train_bar.OKFIND, "okFindITEM3");
      hse_emergency_train_bar.defineCommand(hse_emergency_train_bar.NEWROW, "newRowITEM3");
      hse_emergency_train_tbl = mgr.newASPTable(hse_emergency_train_blk);
      hse_emergency_train_tbl.setTitle("HSEEMERGENCYTRAINITEMHEAD3: HseEmergencyTrain");
      hse_emergency_train_tbl.enableRowSelect();
      hse_emergency_train_tbl.setWrap();
      hse_emergency_train_lay = hse_emergency_train_blk.getASPBlockLayout();
      hse_emergency_train_lay.setDefaultLayoutMode(hse_emergency_train_lay.MULTIROW_LAYOUT);

      hse_emergency_train_lay.setDataSpan("TRAIN_CONTENT",5);
      hse_emergency_train_lay.setDataSpan("TRAIN_EQU",5);
      hse_emergency_train_lay.setDataSpan("SAFE_MEASURE",5);
      hse_emergency_train_lay.setDataSpan("TRAIN_EVALUATE",5);
      hse_emergency_train_lay.setDataSpan("SUG_PERSON",5);
      hse_emergency_train_lay.setDataSpan("IMPROVE_MEASURE",5);
      hse_emergency_train_lay.setDataSpan("CHECK_PERSON",5);
      hse_emergency_train_lay.setDataSpan("CHECK_SUGGESTION",5);
      
      hse_emergency_equ_lay.setSimple("ITEM2_DEPT_DESC");
      hse_emergency_equ_lay.setSimple("ITEM2_RESPONSE_PERSON_NAME");
      hse_emergency_equ_lay.setSimple("CHECK_PERSON_NAME");
      
      //tabs
      tabs = mgr.newASPTabContainer();
      tabs.addTab(mgr.translate("HSEEMERGENCYEQU: Hse Emergency Equ"), "javascript:commandSet('MAIN.activateHseEmergencyEqu','')");
      tabs.addTab(mgr.translate("HSEEMERGENCYMAT: Hse Emergency Mat"), "javascript:commandSet('MAIN.activateHseEmergencyMat','')");
      tabs.addTab(mgr.translate("HSEEMERGENCYTRAIN: Hse Emergency Train"), "javascript:commandSet('MAIN.activateHseEmergencyTrain','')");
   }



   public void  adjust()
   {
      // fill function body
      headbar.removeCustomCommand("activateHseEmergencyEqu");    
      headbar.removeCustomCommand("activateHseEmergencyMat");  
      headbar.removeCustomCommand("activateHseEmergencyTrain");
   }

   public void activateHseEmergencyEqu()
   {
       tabs.setActiveTab(1);
       okFindITEM1();
   }
   
   public void activateHseEmergencyMat()
   {
       tabs.setActiveTab(2);
       okFindITEM2(); 
   }
   
   public void activateHseEmergencyTrain()
   {
       tabs.setActiveTab(3);
       okFindITEM2(); 
   }
   
   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "HSEEMERGENCYPLANDESC: Hse Emergency Plan";
   }


   protected String getTitle()
   {
      return "HSEEMERGENCYPLANTITLE: Hse Emergency Plan";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible()) {
          appendToHTML(headlay.show());
      }
      else
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }
//      if (hse_emergency_equ_lay.isVisible())
//          appendToHTML(hse_emergency_equ_lay.show());
//      if (hse_emergency_mat_lay.isVisible())
//          appendToHTML(hse_emergency_mat_lay.show());
//      if (hse_emergency_train_lay.isVisible())
//          appendToHTML(hse_emergency_train_lay.show());
      
      
      if (headset.countRows()>0)
      {
         if (headlay.isSingleLayout()||headlay.isCustomLayout() ||headlay.isEditLayout())
         {
            appendToHTML(tabs.showTabsInit());
            if (tabs.getActiveTab()== 1)
            {
               appendToHTML(hse_emergency_equ_lay.show());
            }else if(tabs.getActiveTab()== 2){
               appendToHTML(hse_emergency_mat_lay.show());
            }else if(tabs.getActiveTab()== 3){
               appendToHTML(hse_emergency_train_lay.show());
            }     
            appendToHTML(tabs.showTabsFinish());
            
          } 
      }
      
      

   }
}
