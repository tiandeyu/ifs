/*
*                 IFS Research & Development
*
*  This program is protected by copyright law and by international
*  conventions. All licensing, renting, lending or copying (including
*  for private use), and all other use of the program, which is not
*  expressively permitted by IFS Research & Development (IFS), is a
*  violation of the rights of IFS. Such violations will be reported to the
*  appropriate authorities.
*
*  VIOLATIONS OF ANY COPYRIGHT IS PUNISHABLE BY LAW AND CAN LEAD
*  TO UP TO TWO YEARS OF IMPRISONMENT AND LIABILITY TO PAY DAMAGES.
* ----------------------------------------------------------------------------
* File                          :
* Description                   :
* Notes                         :
* Other Programs Called :
* ----------------------------------------------------------------------------
* Modified    : Automatically generated by IFS/Design
* ----------------------------------------------------------------------------
*/

//-----------------------------------------------------------------------------
//-----------------------------   Package def  ------------------------------
//-----------------------------------------------------------------------------

package ifs.hsemaw;
//-----------------------------------------------------------------------------
//-----------------------------   Import def  ------------------------------
//-----------------------------------------------------------------------------

import ifs.fnd.asp.*;
import ifs.fnd.buffer.*;
import ifs.fnd.service.*;
import ifs.fnd.*;

//-----------------------------------------------------------------------------
//-----------------------------   Class def  ------------------------------
//-----------------------------------------------------------------------------

public class HseManPlan extends ASPPageProvider
{

   //-----------------------------------------------------------------------------
   //---------- Static constants ------------------------------------------------
   //-----------------------------------------------------------------------------

   public static boolean DEBUG = Util.isDebugEnabled("ifs.hsemaw.HseManPlan");

   //-----------------------------------------------------------------------------
   //---------- Header Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock headblk;
   private ASPRowSet headset;
   private ASPCommandBar headbar;
   private ASPTable headtbl;
   private ASPBlockLayout headlay;

   //-----------------------------------------------------------------------------
   //---------- Item Instances created on page creation --------
   //-----------------------------------------------------------------------------

   private ASPBlock hse_man_plan_line_blk;
   private ASPRowSet hse_man_plan_line_set;
   private ASPCommandBar hse_man_plan_line_bar;
   private ASPTable hse_man_plan_line_tbl;
   private ASPBlockLayout hse_man_plan_line_lay;


   //-----------------------------------------------------------------------------
   //------------------------  Construction  ---------------------------
   //-----------------------------------------------------------------------------

   public  HseManPlan (ASPManager mgr, String page_path)
   {
      super(mgr,page_path);
   }

   public void run()
   {
      ASPManager mgr = getASPManager();

      if( mgr.commandBarActivated() )
         eval(mgr.commandBarFunction());
      else if(mgr.dataTransfered())
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("SEARCH")) )
         okFind();
      else if( !mgr.isEmpty(mgr.getQueryStringValue("PLAN_NO")) )
         okFind();
      else 
         okFind();
      adjust();
   }
   //-----------------------------------------------------------------------------
   //------------------------  Command Bar functions  ---------------------------
   //-----------------------------------------------------------------------------

   public void okFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      mgr.createSearchURL(headblk);
      q = trans.addQuery(headblk);
      q.includeMeta("ALL");
      if(mgr.dataTransfered())
         q.addOrCondition(mgr.getTransferedData());
      mgr.querySubmit(trans,headblk);
      if (  headset.countRows() == 0 )
      {
         mgr.showAlert("HSEMANPLANNODATA: No data found.");
         headset.clear();
      }
      eval( hse_man_plan_line_set.syncItemSets() );
   }



   public void countFind()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;

      q = trans.addQuery(headblk);
      q.setSelectList("to_char(count(*)) N");
      mgr.submit(trans);
      headlay.setCountValue(toInt(headset.getValue("N")));
      headset.clear();
   }



   public void newRow()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPBuffer data;
      ASPCommand cmd;

      cmd = trans.addEmptyCommand("HEAD","HSE_MAN_PLAN_API.New__",headblk);
      cmd.setOption("ACTION","PREPARE");
      trans = mgr.perform(trans);
      data = trans.getBuffer("HEAD/DATA");
      headset.addRow(data);
   }


   //-----------------------------------------------------------------------------
   //------------------------  Item block cmd bar functions  ---------------------------
   //-----------------------------------------------------------------------------


   public void okFindITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPQuery q;
      int headrowno;

      q = trans.addQuery(hse_man_plan_line_blk);
      q.addWhereCondition("PROJ_NO = ? AND PLAN_NO = ?");
      q.addParameter("PROJ_NO", headset.getValue("PROJ_NO"));
      q.addParameter("PLAN_NO", headset.getValue("PLAN_NO"));
      q.includeMeta("ALL");
      headrowno = headset.getCurrentRowNo();
      mgr.querySubmit(trans,hse_man_plan_line_blk);
      headset.goTo(headrowno);
   }
   public void newRowITEM1()
   {
      ASPManager mgr = getASPManager();
      ASPTransactionBuffer trans = mgr.newASPTransactionBuffer();
      ASPCommand cmd;
      ASPBuffer data;

      
      cmd = trans.addEmptyCommand("ITEM1","HSE_MAN_PLAN_LINE_API.New__",hse_man_plan_line_blk);
      cmd.setOption("ACTION","PREPARE");
      cmd.setParameter("ITEM0_PROJ_NO", headset.getValue("PROJ_NO"));
      cmd.setParameter("ITEM0_PLAN_NO", headset.getValue("PLAN_NO"));
      trans = mgr.perform(trans);
      data = trans.getBuffer("ITEM1/DATA");
      hse_man_plan_line_set.addRow(data);
   }

   //-----------------------------------------------------------------------------
   //------------------------  Predefines Head ---------------------------
   //-----------------------------------------------------------------------------

   public void  preDefine()
   {
      ASPManager mgr = getASPManager();

      headblk = mgr.newASPBlock("MAIN");
      headblk.addField("OBJID").
              setHidden();
      headblk.addField("OBJVERSION").
              setHidden();
      headblk.addField("PROJ_NO").
              setMandatory().
              setInsertable().
              setLabel("HSEMANPLANPROJNO: Proj No").
              setDynamicLOV("GENERAL_PROJECT",600,445).
              setSize(30);
      headblk.addField("GENERAL_PROJECT_PROJ_DESC").
              setReadOnly().
              setFunction("GENERAL_PROJECT_API.GET_PROJ_DESC (:PROJ_NO)").
              setLabel("HSEMANPLANGENERALPROJECTPROJDESC: General Project Proj Desc").
              setSize(30);
      mgr.getASPField("PROJ_NO").setValidation("GENERAL_PROJECT_PROJ_DESC");
      
      headblk.addField("PLAN_NO").
              setHidden().
              setLabel("HSEMANPLANPLANNO: Plan No").
              setSize(30);
      
      headblk.addField("CREATE_PERSON").
              setFunction("Fnd_Session_Api.Get_Fnd_User()").
              setHidden().
              setLabel("HSEMANPLANCREATEPERSON: Create Person").
              setSize(30);
      
      headblk.addField("APPLY_ORG").
              setDynamicLOV("GENERAL_ZONE").
//              setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
              setLabel("HSEMANPLANAPPLYORG: Apply Org").
              setSize(30);
      headblk.addField("APPLY_ORG_DESC").
              setFunction("GENERAL_ZONE_API.Get_Zone_Desc ( :APPLY_ORG)").
              setLabel("HSEENVFACTORAPPLYORGDESC: Apply Org Desc").
              setSize(30).
              setReadOnly();
      mgr.getASPField("APPLY_ORG").setValidation("APPLY_ORG_DESC");
      
      
      headblk.addField("STATUS").
              setHidden().
              setLabel("HSEMANPLANSTATUS: Status").
              setSize(30);
      headblk.addField("PLAN_NAME").
              setInsertable().
              setLabel("HSEMANPLANPLANNAME: Plan Name").
              setSize(30);
      headblk.addField("KPI").
              setInsertable().
              setLabel("HSEMANPLANKPI: Kpi").
              setSize(30);
      headblk.addField("DANGEROUS_SOURCE").
              setInsertable().
              setDynamicLOV("HSE_DANGER_SOURCE_LINE","PROJ_NO").
              setLabel("HSEMANPLANDANGEROUSSOURCE: Dangerous Source").
              setSize(30);
      headblk.addField("DANGEROUS_SOURCE_DESC").
              setReadOnly().
              setFunction("HSE_DANGER_SOURCE_LINE_API.Get_Dangerous_Source2 (:PROJ_NO,:DANGEROUS_SOURCE)").
              setLabel("HSEMANPLANDANGEROUSSOURCEDESC: Dangerous Source Desc").
              setSize(120);
      mgr.getASPField("DANGEROUS_SOURCE").setValidation("DANGEROUS_SOURCE_DESC");
      headblk.addField("TARGET").
              setInsertable().
              setLabel("HSEMANPLANTARGET: Target").
              setSize(30);
      headblk.setView("HSE_MAN_PLAN");
      headblk.defineCommand("HSE_MAN_PLAN_API","New__,Modify__,Remove__");
      headset = headblk.getASPRowSet();
      headbar = mgr.newASPCommandBar(headblk);
      headtbl = mgr.newASPTable(headblk);
      headtbl.setTitle("HSEMANPLANTBLHEAD: Hse Man Plans");
      headtbl.enableRowSelect();
      headtbl.setWrap();
      headlay = headblk.getASPBlockLayout();
      headlay.setDefaultLayoutMode(headlay.MULTIROW_LAYOUT);
      headlay.setSimple("APPLY_ORG_DESC");
      headlay.setSimple("DANGEROUS_SOURCE_DESC");
      headlay.setSimple("GENERAL_PROJECT_PROJ_DESC");
 


      hse_man_plan_line_blk = mgr.newASPBlock("ITEM1");
      hse_man_plan_line_blk.addField("ITEM0_OBJID").
                            setHidden().
                            setDbName("OBJID");
      hse_man_plan_line_blk.addField("ITEM0_OBJVERSION").
                            setHidden().
                            setDbName("OBJVERSION");
      hse_man_plan_line_blk.addField("ITEM0_PROJ_NO").
                            setDbName("PROJ_NO").
                            setMandatory().
                            setInsertable().
                            setLabel("HSEMANPLANLINEITEM0PROJNO: Proj No").
                            setHidden().
                            setSize(30);
      hse_man_plan_line_blk.addField("ITEM0_PLAN_NO").
                            setDbName("PLAN_NO").
                            setMandatory().
                            setInsertable().
                            setLabel("HSEMANPLANLINEITEM0PLANNO: Plan No").
                            setHidden().
                            setSize(30);
      hse_man_plan_line_blk.addField("LINE_NO").
                            setHidden().
                            setLabel("HSEMANPLANLINELINENO: Line No").
                            setSize(30);
      hse_man_plan_line_blk.addField("MEASURE_CONTENT").
                            setInsertable().
                            setLabel("HSEMANPLANLINEMEASURECONTENT: Measure Content").
                            setSize(120);
      hse_man_plan_line_blk.addField("START_TIME","Date").
                            setInsertable().
                            setLabel("HSEMANPLANLINESTARTTIME: Start Time").
                            setSize(30);
      hse_man_plan_line_blk.addField("FINISH_TIME","Date").
                            setInsertable().
                            setLabel("HSEMANPLANLINEFINISHTIME: Finish Time").
                            setSize(30);
      
      hse_man_plan_line_blk.addField("MAIN_DEPT").
                            setInsertable().
                            setDynamicLOV("GENERAL_ZONE").
//                            setLOVProperty("WHERE", "PERSON_ID = '"+mgr.getFndUser()+"'").
                            setLabel("HSEMANPLANLINEMAINDEPT: Main Dept").
                            setSize(30);
      hse_man_plan_line_blk.addField("MAIN_DEPT_DESC").
                            setReadOnly().
                            setFunction("GENERAL_ORGANIZATION_API.Get_Org_Desc_ (:MAIN_DEPT)").
                            setLabel("HSEENVFACTORLINEDEPTDESC: Main Dept Desc").
                            setSize(30);  
      mgr.getASPField("MAIN_DEPT").setValidation("MAIN_DEPT_DESC");
      
      
      hse_man_plan_line_blk.addField("RELATED_DEPT").
                            setInsertable().
                            setLabel("HSEMANPLANLINERELATEDDEPT: Related Dept").
                            setSize(120);
      hse_man_plan_line_blk.addField("FUNDING_BUDGET","Number").
                            setInsertable().
                            setLabel("HSEMANPLANLINEFUNDINGBUDGET: Funding Budget").
                            setSize(30);
      
      hse_man_plan_line_blk.addField("CHECK_PERSON").
                            setInsertable().
                            setDynamicLOV("PERSON_INFO").
                            setLabel("HSEMANPLANLINECHECKPERSON: Check Person").
                            setSize(30);
      hse_man_plan_line_blk.addField("CHECK_PERSON_NAME").
                            setReadOnly().
                            setFunction("PERSON_INFO_API.GET_NAME ( :CHECK_PERSON)").
                            setLabel("HSEMANPLANLINECHECKPERSONNAME: Check Person Name").
                            setSize(30);  
      mgr.getASPField("CHECK_PERSON").setValidation("CHECK_PERSON_NAME");
      
      hse_man_plan_line_blk.addField("NOTE").
                            setInsertable().
                            setLabel("HSEMANPLANLINENOTE: Note").
                            setHeight(5).
                            setSize(120);
      hse_man_plan_line_blk.setView("HSE_MAN_PLAN_LINE");
      hse_man_plan_line_blk.defineCommand("HSE_MAN_PLAN_LINE_API","New__,Modify__,Remove__");
      hse_man_plan_line_blk.setMasterBlock(headblk);
      hse_man_plan_line_set = hse_man_plan_line_blk.getASPRowSet();
      hse_man_plan_line_bar = mgr.newASPCommandBar(hse_man_plan_line_blk);
      hse_man_plan_line_bar.defineCommand(hse_man_plan_line_bar.OKFIND, "okFindITEM1");
      hse_man_plan_line_bar.defineCommand(hse_man_plan_line_bar.NEWROW, "newRowITEM1");
      hse_man_plan_line_tbl = mgr.newASPTable(hse_man_plan_line_blk);
      hse_man_plan_line_tbl.setTitle("HSEMANPLANLINEITEMHEAD1: HseManPlan");
      hse_man_plan_line_tbl.enableRowSelect();
      hse_man_plan_line_tbl.setWrap();
      hse_man_plan_line_lay = hse_man_plan_line_blk.getASPBlockLayout();
      hse_man_plan_line_lay.setDefaultLayoutMode(hse_man_plan_line_lay.MULTIROW_LAYOUT);
      hse_man_plan_line_lay.setDataSpan("DANGEROUS_SOURCE", 5);
      hse_man_plan_line_lay.setDataSpan("MEASURE_CONTENT", 5);
      hse_man_plan_line_lay.setDataSpan("MAIN_DEPT", 5);
      hse_man_plan_line_lay.setDataSpan("RELATED_DEPT", 5);
      hse_man_plan_line_lay.setDataSpan("NOTE", 5);
      hse_man_plan_line_lay.setDataSpan("LINE_NO", 5);
      hse_man_plan_line_lay.setSimple("MAIN_DEPT_DESC");
      hse_man_plan_line_lay.setSimple("CHECK_PERSON_NAME");

   }



   public void  adjust()
   {
      // fill function body
   }

   //-----------------------------------------------------------------------------
   //------------------------  Presentation functions  ---------------------------
   //-----------------------------------------------------------------------------

   protected String getDescription()
   {
      return "HSEMANPLANDESC: Hse Man Plan";
   }


   protected String getTitle()
   {
      return "HSEMANPLANTITLE: Hse Man Plan";
   }


   protected void printContents() throws FndException
   {
      ASPManager mgr = getASPManager();
      if (headlay.isVisible()) {
          appendToHTML(headlay.show());
      }
      else
      {
         headlay.setLayoutMode(headlay.CUSTOM_LAYOUT);
         appendToHTML(headlay.show());
      }
      if (hse_man_plan_line_lay.isVisible())
          appendToHTML(hse_man_plan_line_lay.show());

   }
}
